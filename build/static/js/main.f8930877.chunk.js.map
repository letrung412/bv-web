{"version":3,"sources":["Shared/Services/UtilService.js","Constances/const.js","Helper/Http.js","Shared/Services/AuthService.js","Shared/Services/SharedService.js","Shared/Components/Form/Form.js","Shared/Components/ModalConfirm/ModalConfirm.js","Helper/Util.js","Shared/Components/ModalNoti/ModalNoti.js","Asset/Icon/stethoscope.svg","Asset/Icon/medicine.svg","Asset/Icon/testing.svg","Asset/Icon/microscope.svg","Asset/Icon/notifications_white_24dp.svg","Asset/Img/logo.png","Shared/Components/AppHeader/AppHeader.js","Modules/Exam/Shared/ExamService.js","Modules/Exam/Components/ExamResultPaper/CustomerFromPrint.js","Shared/Components/PatientList/PatientList.js","Modules/Exam/Components/ExamResult/BS200E.js","Modules/Exam/Components/ExamResult/BC2800.js","Modules/Exam/Components/ExamResult/UA66.js","Modules/Exam/Components/ExamResult/Test.js","Modules/Exam/Components/ExamResult/Other.js","Modules/Exam/Components/ExamResult/IMMUNE.js","Modules/Exam/Components/ExamResult/ExamResult.js","Modules/Exam/Components/ExamResultPaper/Device/UA66print.js","Modules/Exam/Components/ExamResultPaper/Device/Testprint.js","Modules/Exam/Components/ExamResultPaper/Device/Otherprint.js","Modules/Exam/Components/ExamResultPaper/Device/Immuneprint.js","Modules/Exam/Components/ExamResultPaper/Device/BC2800print.js","Modules/Exam/Components/ExamResultPaper/Device/BS200Eprint.js","Modules/Exam/Components/ExamResultPaper/ExamResultPaper1.js","Modules/Reception/Shared/Util.js","Shared/Components/HeaderPrint/HeaderPrint.js","Modules/Reception/Shared/ReceptionService.js","Modules/Reception/Components/MedicalHistory/PrintHistory/PrintMedicalHistory.js","Modules/Reception/Components/MedicalHistory/MedicalHistoryTable.js","Modules/Reception/Components/ReceptionForm/Asterisk.js","Modules/Reception/Components/ReceptionForm/PrintBarCode.js","Shared/Components/CustomerForm/CustomerFromPrint.js","Shared/Components/CustomerForm/CustomerForm.js","Modules/Doctor/Shared/DoctorService.js","Modules/Exam/Components/Exam/ExamEdit.js","Shared/Components/LocationSelecter/LocationSelecter.js","Modules/Exam/Components/SelectRoom/SelectRoom.js","Modules/Exam/Exam.js","Modules/Customer/Components/CustomerBasic/CustomerBasic.js","Modules/Customer/Components/CustomerContact/CustomerContact.js","Modules/Customer/Components/CustomerResult/CustomerResult.js","Modules/Customer/Shared/CustomerService.js","Modules/Customer/Components/Customer/Customer.js","Modules/Location/Components/Location/ItemLocation.js","Modules/Location/Components/Shared/LocationService.js","Modules/Location/Components/Location/ListLocation.js","Modules/Location/Components/Location/ActionLocation.js","Modules/Location/Components/Location_Type/ActionLocationType.js","Modules/Location/Components/Location_Type/ItemLocationType.js","Modules/Location/Components/Location_Type/ListLocationType.js","Modules/Location/Location.js","Modules/Org/Components/NotAuthorized/NotAuthorized.js","Modules/Org/Org.js","Modules/Service/Shared/ServiceService.js","Modules/Service/Components/ServiceList/ServiceList.js","Modules/Service/Components/ServiceForm/ServiceForm.js","Modules/Service/Shared/PricePolicyService.js","Modules/Service/Components/PricePolicy/PricePolicy.js","Modules/Service/Components/PricePolicyForm/PricePolicyForm.js","Modules/Service/Service.js","Modules/Org/Shared/UserService.js","Modules/Org/Components/User/Components/AddUpdateUser/AddUpdateUser.js","Modules/Org/Components/User/Components/TableUser/RowTable.js","Modules/Org/Components/User/Components/TableUser/TableUser.js","Modules/Org/Components/User/Components/Main/Main.js","Modules/Org/Components/User/Components/ChangePassword/ChangePasswordForm.js","Modules/Org/Components/User/User.js","Modules/Product/Components/Shared/ProductService.js","Modules/Product/Components/ListProduct/ItemProduct.js","Modules/Product/Components/ListProduct/ListProduct.js","Modules/Product/Components/FormProduct/FormProduct.js","Modules/Product/Components/Producer/FormProducer.js","Modules/Product/Components/FormPart/FormPart.js","Modules/Product/Components/FormPart/ListPart.js","Modules/Product/Product.js","Modules/Reception/Components/Accounting/AccountingForm/OrderTable.js","Modules/Reception/Components/ReceiptPrintingPreview/ReceiptPrintingPreview.js","Asset/Img/logo.jpg","Modules/Reception/Components/Accounting/AccountingForm/AccountingForm.js","Modules/Reception/Components/ReceptionForm/ContactForm.js","Modules/Reception/Components/ReceptionForm/SearchForm.js","Modules/Reception/Components/ReceptionForm/ModalFilter/ModalFilterCmCode.js","Modules/Reception/Components/ReceptionForm/ModalFilter/ModalFilter.js","Modules/Reception/Components/ReceptionForm/ServiceForm/PrintServiceFrom.js","Modules/Reception/Components/ReceptionForm/ServiceForm/ServiceForm.js","Modules/Reception/Components/ReceptionForm/ReceptionForm.js","Modules/Reception/Components/MedicalHistory/MedicalHistoryForm.js","Modules/Reception/Reception.js","Modules/Doctor/Components/JobDoctor/Diagnostic/PrintDiagnostic.js","Modules/Ultrasound/Shared/UltrasoundService.js","Modules/Ultrasound/Components/PaperResultUltrasound/PaperResultUltrasound.js","Modules/X-ray/components/XrayResultPrint/XrayResultPrint.js","Modules/Endoscopic/share/EntService.js","Modules/Endoscopic/components/EntResultPrint/EntResultPrint.js","Modules/Doctor/Components/JobDoctor/ResultExam/BC2800.js","Modules/Doctor/Components/JobDoctor/ResultExam/UA66.js","Modules/Doctor/Components/JobDoctor/ResultExam/BS200E.js","Modules/Doctor/Components/JobDoctor/ResultExam/Test.js","Modules/Doctor/Components/JobDoctor/ResultExam/Other.js","Modules/Doctor/Components/JobDoctor/ResultExam/IMMUNE.js","Modules/Doctor/Components/JobDoctor/ResultExam/ResultsExam.js","Modules/Doctor/Components/JobDoctor/Diagnostic/Diagnostic.js","Modules/Doctor/Components/JobDoctor/PreExamination/PreExamination.js","Modules/Doctor/Components/JobDoctor/Prescriptions/printPrescriptions.js","Modules/Doctor/Components/JobDoctor/Prescriptions/PrintPre.js","Modules/Pharmacy/Components/Shared/PharmacyService.js","Modules/Doctor/Components/JobDoctor/Prescriptions/FormSearch.js","Modules/Doctor/Components/JobDoctor/Prescriptions/Prescriptions.js","Modules/Doctor/Components/JobDoctor/Diagnosis/Diagnosis.js","Modules/Doctor/Components/JobDoctor/JobDoctor.js","Modules/Doctor/Components/Main/Main.js","Modules/Doctor/Doctor.js","Modules/Inventory/Components/Lot/ItemLot.js","Modules/Inventory/Components/Shared/InventoryService.js","Modules/Inventory/Components/Lot/ListLot.js","Modules/Inventory/Components/Lot/FormLot.js","Modules/Inventory/Components/Producer/ItemProducer.js","Modules/Inventory/Components/Producer/Listproducer.js","Modules/Inventory/Components/Producer/FormProducer.js","Modules/Inventory/Components/Transaction/ItemTransaction.js","Modules/Inventory/Components/Transaction/ListTransaction.js","Modules/Inventory/Components/Transaction/FormTransaction.js","Modules/Inventory/Inventory.js","Modules/Pharmacy/Components/FormPharmacy/FormSearch.js","Modules/Pharmacy/Components/FormPharmacy/PrintPharmacy.js","Modules/Pharmacy/Components/FormPharmacy/ModalOrder.js","Modules/Pharmacy/Components/FormPharmacy/FormPharmacy.js","Modules/Pharmacy/Pharmacy.js","Modules/Accounting/Shared/TransactionService.js","Modules/Accounting/Components/TransactionForm/TransTable.js","Modules/Accounting/Components/TransactionForm/CancelTable.js","Modules/Accounting/Components/TransactionForm/CancelModal.js","Modules/Accounting/Components/TransactionForm/TransactionModal.js","Modules/Accounting/Components/TransactionForm/TransactionForm.js","Modules/Accounting/Components/AccountingForm/OrderTable.js","Modules/Accounting/Components/AccountingPrintingPreview/AccountingPrintingPreview.js","Modules/Accounting/Components/AccountingForm/AccountingForm.js","Modules/Accounting/Components/Statistical/Statistical.js","Modules/Accounting/Transaction.js","Modules/X-ray/share/XrayService.js","Modules/X-ray/share/Util.js","Modules/X-ray/components/XrayResult/XrayResult.js","Modules/X-ray/components/X-ray/XrayFrom.js","Modules/X-ray/components/SelectRoom/SelectRoom.js","Modules/X-ray/Xray.js","Modules/Endoscopic/components/SelectRoom/SelectRoom.js","Modules/Endoscopic/share/Util.js","Modules/Endoscopic/components/EntResult/EntResultc.js","Modules/Endoscopic/components/Endoscopic/EntEdit.js","Modules/Endoscopic/Endoscopic.js","Modules/Ultrasound/Shared/Util.js","Modules/Ultrasound/Components/ResultUltrasound/ResultUltrasound.js","Modules/Ultrasound/Components/PaperResultUltrasound/CustomerFromPrint.js","Modules/Ultrasound/Components/Ultrasound/UltrasoundEdit.js","Modules/Ultrasound/Components/SelectRoom/SelectRoom.js","Modules/Ultrasound/Ultrasound.js","Shared/Components/App/App.js","Modules/Org/Components/Login/Login.js","index.js"],"names":["UtilService","BASE_URL","process","ROLE","RECEPTIONIST","name","value","DOCTOR","NURSING","TEST_OPERATOR","ACCOUNTER","PHARMACIST","ADMIN","ULTRASOUND","ENT","XRAY","INVENTORY","POLICY_CODE","OTHER_DATA","STATUS","LOCALSTORAGE","SERVICE_TYPE","STEP_TYPE","ORDER_TYPE","code","label","LOCATION_TYPE","REGEX_TEL","REGEX_DATE","ERR_MSG","ONE_DAY","String","number","option","toString","DATE","time","string","date","Date","year","getFullYear","substr","month","getMonth","day","getDate","hour","getHours","min","getMinutes","sec","getSeconds","EQUAL_ARRAY","a","b","Array","isArray","length","every","elA","index","splitRegion","arrString","split","splice","join","ATTR_UNIT","PRODUCT_UNIT","ROUTE","NAMEDEVICE","PAY_METHOD","ALL","Http","window","sessionStorage","getItem","get","endPoint","params","options","headers","_getHeader","Object","keys","Axios","post","payload","put","patch","delete","id","API_ENDPOINT","instance","userInfo","JSON","parse","AuthService","_instance","username","password","data","roles","this","role","includes","print","printJS","printable","type","targetStyles","style","header","footer","printhorizontal","printBarCode","scanStyles","ShareService","customer_id","text","step_id","bwipjs","toCanvas","bcid","scale","includetext","textxalign","error","height","customerCode","Form","props","_fillForm","setState","prevState","form","forEach","k","err","dirty","_setValue","ev","key","persist","target","_getInvalidErr","state","formData","domEl","validity","valid","typeMismatch","valueMissing","rangeOverflow","max","rangeUnderflow","tooLong","maxLength","tooShort","minLength","patternMismatch","pattern","document","getElementsByName","find","Component","ModalConfirm","message","answer","className","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","Button","onClick","color","React","monthName","Util","typeName","typeCode","Number","parseInt","statusName","statusCode","dateString","_date","timeString","getModelName","model","onKeyDown","event","keyCode","dataset","querySelector","focus","formatPrice","num","Intl","NumberFormat","format","ModalNoti","done","e","data-index","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","excluded","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMedicine","_ref","svgRef","title","titleId","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","ref","d","SvgMicroscope","AppHeader","dropdownUserOpen","dropdownMasterDataOpen","dropdownInventoryOpen","toggleUser","toggleMasterData","toggleWareHouse","url","location","origin","replace","clear","Nav","pills","Row","Col","xs","NavItem","src","logo","alt","sm","margin","NavLink","goTo","Dropdown","nav","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","map","full_name","divider","logout","withRouter","userList","selectedUser","getUserById","printExamResult","takeSample","step","Exam","setItem","stringify","location_id","order_id","res","examResult","PrintBarcode","componentDidUpdate","preProps","cm_name","TestId","arr","nameDevice","display","fontSize","el","marginTop","flexDirection","minHeight","alignItems","textAlign","PatientList","interval","setShowComboTest","showComboTest","fetchPatientList","status","resultList","hasNoti","SharedService","getListJobStep","then","cusList","filter","reverse","order","items","eb","quantity","queryCustomer","c","r","customerId","job_ref_id","seen","patientList","getResult","catch","console","log","toISOString","slice","steps","s","obj","jobId","job_id","orderId","push","count","countResult","uniqueJobId","p","setNotiQuantity","onSelectJobStep","jobStep","entries","currentPatient","comboTest","ref_value","undefined","selectedJob","textFilter","tabs","hiddenPatientList","makeNewTestId","ref_id","ExamService","getIdByRef","onFilterChange","sortByName","nameA","toUpperCase","nameB","customerSearch","action","refresh","setInterval","clearInterval","examEditState","examEditSetState","resultsExam","sample_id","device","activeTab","checked","mode","checkSelectBarcode","modeList","sort","customer","search","gender","birthday","toLocaleString","contacts","address","province","titleOfList","Input","autoFocus","placeholder","onChange","item","index1","colSpan","onSelectBarcode","BS200E","result","useEffect","colspan","range","unit","UA66","Test","setValueService","Other","resultIndex","parentKey","maxWidth","rowSpan","patientKey","handleTriInputChange","handleInputChange","IMMUNE","ExamResult","nameDeviceObj","devices","setDeviceValue","useState","deviceBC2800","setDeviceBC2800","deviceIMMUNE","setDeviceIMMUNE","setActiveTab","element","classnames","active","selectExamResultTab","TabContent","TabPane","tabId","BC2800","padding","border","show_form_input","attr","idx","label2","render_row","isInput","for","BS200Eprint","selectedJobStepRunning","prognostic","textDiagnosis","sendReq","setDisplay","ctime","setCtime","mtime","setMtime","printOtherAndTest","setPrintOtherAndTest","printDevices","setPrintDevices","findOtherAndTest","resultDevices","ward","district","phone","doctorInfo","marginBot","Immuneprint","BC2800print","xscroll","UA66print","fontWeight","f","Testprint","Otherprint","readThreeDigits","digitText","word","numberDigits","from","moneyToWord","money","moneyTemp","threeDigitsNumberArr","Math","floor","numberWithCommas","getAge","today","birthDate","dateStr","toDate","age","m","dt2","dt1","diff","getTime","abs","round","diff_weeks","convertToNormDate","dateArr","convertToStrDate","normDate","HeaderPrint","ReceptionService","parent_id","job","serviceId","PrintMedicalHistory","setCustomer","submidPrint","infoCm","nameCm","birthdayCm","genderCm","customerPhone","street","getCmbyCode","createEtccode","current","totalPrice","origin_total","price","origin_price","discount_price","MedicalHistoryTable","itemPrint","setItemPrint","showPrint","setShowPrint","Table","hover","bordered","stepExam","codeExam","sv","codeList","serviceExam","serviceList","scope","printMedicalHistory","Asterisk","customerName","CustomerForm","componentDidMount","createBarcode","width","printShortKey","CloseHistory","show","setHistory","getJobByCustomerId","printBarcode","staShortKey","cm_code","cm_full_name","cm_gender","cm_birthday","contact_phone_number","reExamination","officialsExam","FormGroup","row","Label","disabled","required","rawDate","autoAddSlashDate","GETLISTCUSTOMER","GETLISTSERVICES","GETONECUSTOMER","GETLISTLOCATION","GETLOCATIONBYSERVICE","GETLISTPRODUCT","GET_JOB_BY_ID","POST_ALLERGY_TO_CUS","POSTUPDATECUSTOMER","ADD_JOB_STEP","POSTDIAGNOSIS","POSTSUBCLINICAL","UPDATE_JOB_STEP","GET_JOB","DoctorServices","getJobById","GETINFOSERVICE","ExamEdit","setNotiMessage","notiMessage","setShowBarcode","showBarcode","readyJobListAction","runningJobListAction","machineName","refreshJobList","selectTypeStatusTest","tab","inWaitingData","selectTypeStatusDevice","activeDevice","myRef","createRef","handleClickOutside","contains","navActiveListPeople","handleShowBarcode","handleSwitchStatus","IdUpdate","handleResultExam","resultExam","re","handleDataTable","examResultId","getResultsByStepId","TestTotal","nameServiceTest","results","checkSample","createSampleIdByRef","deviceName","exist","unshift","createSample","updateJobId","patient","subclinical","selectecPatientReady","stepID","onSelectJobRunning","handleResetForm","resultsBC2800","resultsUA66","resultsBS200E","handleConfirm","modalConfirm","handleUpdateResult","argument","updateExamResult","printResult","handleChangeGetValue","doctor_write","handleChangeResult","newItems","service_step","resultValue","otherData","examName","jobStepReady","jobStepRunning","titleWaitForExam","titleWaitForExamDone","titleWaitForResult","saveExamResult","outline","ExamResultPaper1","LocationSelecter","updateStorage","locInfo","list","onSelect","SelectRoom","getListLocation","listLoc","locationList","history","selectedLocation","path","match","exact","render","hasRole","to","component","CustomerBasic","checkMale","checkFemale","idnum","onChangeName","onChangeBirthday","onChangeGender","onChangeIdent","check","CustomerContact","customer_contact","phone_number","email","relation","onChangePhone","onChangeAddress","onChangeEmail","onChangeRelation","onSearchPhone","onBlur","CustomerResult","search_customer","showHistory","onHistory","onMatchHistory","search_history","xl","lg","md","CustomerService","getCmByPhone","addCm","addCmContact","modifyCm","modifyCmContact","initialState","search_contact","old_customer","modalMatchDataDisplay","modalCancelDisplay","modalSaveDisplay","Customer","changeName","changeIdent","changeGender","changeBirthday","handleCancel","doCancel","handleSave","doAddOrModifyCustomer","showOrHideHistory","handleMatchHistory","matchHistory","modalConfirn","changeContactName","changeContactPhone","changeContactAddress","changeContactEmail","changeContactRelation","match_search_customer","match_search_contact","match_search_history","toLocaleDateString","matchResponseToSearch","response","handleSearchPhone","bind","ItemLocation","onDelete","list_location","location_type_name","LocationService","ListLocation","notiConfirm","isYes","deleteLocation","getData","href","list_type_location","promiseArr","listLocation","listTypeLocation","Promise","all","listType","lo","found","t","localeCompare","itemList","lists_location","Container","striped","ActionLocation","onBack","back","onchange","onSubmit","nameRoom","typeRoom","location_type","updateLocation","createLocation","doneAlert","dataType","getUpdateLocation","dataEdit","_dataType","size","offset","disable","ActionLocationType","updateLocationType","createLocationType","getUpdateLocationType","ItemLocationType","typeList","ListLocationType","deleteLocationType","tasksType","Location","NotAuthorized","Org","ServiceService","service_id","OPTION","ServiceTable","handleDelService","handleSelectService","handleSelectDiscount","handleConfirmPrice","handleCheckBox","serviceType","serviceChoice","defaultChecked","ServiceList","setServiceList","delServiceId","setDelServiceId","confirmMessage","setConfirmMessage","setServiceType","discountPrice","setDiscountPrice","setServiceChoice","flag","setFlag","getServiceList","delService","service","ceil","promise_service","dt","updatePriceService","discount","updatePriceDiscount","old","services","EditServiceForm","useParams","setService","setStep","indexDeleteStep","setIndexDeleteStep","locationSelected","setLocationSelected","setListLocation","typeDone","setTypeDone","createCode","arrCode","codeName","codeIndex","handleChange","examService","testService","entService","xrayService","ultraService","emerService","fetchService","getListLocationSelected","getServiceById","fetchedService","getLocationService","deleteStepService","l","locationId","addLocationService","removeLocationService","onCheckLocation","postService","addStepService","resp","editService","arrNew","updateStepService","objNew","er","PricePolicyService","PolicyPriceTable","policyPriceList","handleDelPolicyPrice","PolicyPriceManager","setPolicyPriceList","delPolicyPriceId","setDelPolicyPriceId","fetchPricePolicyList","getPricePolicyList","pricePolicy","delPricePolicy","newPolicyPriceList","delPolicyPriceIdx","findIndex","policyPriceId","PricePolicyForm","setPricePolicy","fetchPricePolicy","getPricePolicyById","fetchedPricePolicy","handleSubmitForm","postPricePolicy","editPricePolicy","Service","PricePolicy","ServiceForm","UserServices","AddUpdateUser","onHandleChange","onHandleCheckBox","setRole","onSelectGender","org_id","method","UserService","postEditUser","postCreateUser","doneAlret","onCancel","listOrg","listRole","getEditUser","getListOrg","onHandleSubmit","readOnly","values","RowTable","user","edit","v","role_name","isRole","TableUser","Main","getUserList","getListUser","getDeleteUser","onChangeSearch","createUser","toLowerCase","ChangePasswordForm","onChangeNewPw","newPassword","onChangeCfPw","confirmPassword","postUpdatePassword","User","LISTPRODUCT","DELETEPRODUCT","CREATEPRODUCT","UPDATEPRODUCT","GETPRODUCT","CREATEPRODUCER","LISTPRODUCER","LISTPART","CREATE_PART","GET_PART","DELETE_PART","UPDATE_PART","ProductService","BASE","ItemProduct","listProduct","itemProperties","partName","u","attrs","route","producerName","description","ListProduct","deleteProduct","textSearch","listProducer","listPart","list_product","list_producer","list_part","pro","producer_id","partArr","parts","pa","itemProduct","onUpdate","FormProduct","onSelectPart","objP","onRemovePart","pos","onChangePQty","onChangePUnit","unitProduct","strength","package_size","default_quantity","default_daily_usage","max_dose_per_kg","createProduct","updateProduct","isBack","_getInitFormData","arrSelected","getProduct","product","instruction","default_day_supply","max_dose","listP","itemPart","selectedValues","displayValue","onRemove","showCheckbox","closeIcon","FormParent","FormProducer","producer","setProducer","postProducer","part","setPart","pathname","getPart","createPart","updatePart","deletePart","descriptions","Product","FormPart","ListPart","OrderTable","thousandSeparator","suffix","displayType","ReceiptPrintingReview","contact","setContact","receiptData","setReceiptData","addressForm","setAddressForm","sum","setSum","setAge","total","roundTotal","receiptId","now","cBirthday","justifyContent","minWidth","position","bottom","right","paddingLeft","AccountingForm","setBookList","bookList","bookId","setPaymentList","paymentList","getAllBookList","getBookList","setIsOrderFound","isOrderFound","setIsPayment","isPayment","dropdownBook","resetForm","sumOriginPrice","orderCode","customerBirthday","nameService","priceService","customerGender","cTime","orderStatus","findOrderByCode","getOrder","handleSearch","retail","getRetailOrder","billID","orderInfo","view_order","customerAddress","handleChangeNote","note","books","currentBook","handleChangePaymentMethods","currentPaymentMethods","handleSubmit","book_id","amount","postTransaction","affterPayment","transaction","handleClose","comboName","sx","InputGroup","InputGroupAddon","addonType","submitForm","Spinner","submitLoading","retailCustomerName","getCityList","cityList","getLocationAllCity","setCityList","getDistricts","districtList","getLocationAllDistrict","setDistrictList","getWards","wardList","getLocationAllWard","setWardList","currentCity","currentDistrict","currentWard","handleChangeCity","handleChangeDistrict","handleChangeWard","cities","districts","wards","getElementById","setAttribute","prevProps","fillAddress","contact_city","contact_district","contact_full_name","contact_address","health_insuranced","health_insurance","contact_email","contact_ward","cityOptions","districtOptions","wardOptions","filterConfig","ignoreCase","ignoreAccents","trim","matchFrom","str","RegExp","stringToSlug","inputId","menuPlacement","openMenuOnFocus","filterOption","createFilter","setShowSearch","showSearch","setCustomerCode","setCustomerMatch","customerMatch","searchCustomer","onChooseCustomer","handleReExam","onFocus","setTimeout","ModalFilterCmCode","modalC","setModalC","ModalFilter","modal","setModal","cm_phoneNumber","getCmList","PrintServiceFrom","assignedServices","titleService","locPrint","rowDiagnostic","diagnostic","setComboName","setSelectedXRayService","selectedXRayService","setSelectedEntService","selectedEntService","setSelectedOtherService","selectedOtherService","setSelectedUltrasoundService","selectedUltrasoundService","setSelectedTestService","selectedTestService","setShowServiceTest","showServiceTest","showServiceOther","setShowServiceUltrasound","showServiceUltrasound","setShowServiceEnt","showServiceEnt","setServices","setServiceOther","serviceOther","setServiceTest","serviceTest","setServiceExam","getLocationByServiceId","getLocationByService","handleChangeSelectService","selectedService","showServiceXRay","serviceXray","priceXray","serviceEnt","priceEnt","serviceUltrasound","priceSADV","priceOther","showTable","onServiceChange","getListCustomerByLocationId","getJobStepList","getServicePrice","policy","policy_id","basicPrice","PriceUpdate","setValueForm","isExamWithin3D","medicalHistory","setPolicyId","setLocationId","clinic","ctoday","customerWait","ct","onClearForm","onClearFormXRay","onClearFormOther","onClearFormUltrasound","onClearFormEnt","onCloseForm","setComboNameForm","onCloseFormXray","onCloseFormOther","onCloseFormUltrasound","onCloseFormEnt","updatePrice","deleteRow","printService","loc","titlePrint","arrayServicePrint","locationPrint","selectedPolicy","titleExam","titleEnt","titleUltra","titleXray","titleOther","locExam","locOther","locENT","locUtral","locXray","concat","serviceOptions","serviceTestOptions","serviceXRayOptions","serviceOtherOptions","serviceUltrasoundOptions","serviceEntOptions","hidden","ReceptionForm","setShowHistory","setShow","policyId","setFindLoading","findLoading","setSubmitLoading","setOfficialsExam","setCustomerId","setContactId","contactId","setMedicalHistory","setJobHistory","jobHistory","setForm","setReExamination","submitContact","cmContact","submitCustomer","updateInforCus","_validateForm","_isFormValid","onShowHistory","handleShowHistory","onPrintShortKeyCode","onPrintShortKey","printJob","submitJobTest","servicesTest","service_policy_id","postJobTest","submitJobXray","servicesXray","submitJobUltrasound","servicesUltrasound","submitJobOther","servicesOther","submitJobEnt","servicesEnt","submitJob","postJob","handlePayment","findCustomerByCode","wasExamination","diffTime","handleCloseShowHistory","handleShow","handleShowHistoryExam","getExamHistory","addressObj","startsWith","policy_code","shortKey","ctrlKey","preventDefault","cm_phone_number","tabIndex","setPolicyCode","MedicalHistoryForm","setIsCustomerFound","findMedicalHistory","handleChangeSelectType","selectedType","isCustomerFound","MedicalHistory","ReceiptPrintingPreview","PrintDiagnostic","cusData","createOtccode","cusCode","printDiag","totalOrigin","diagnosis","cusBirthDay","rowExam","UltrasoundService","ultraResult","TestResult","promise","upload","downloadPhoto","photos","config","resultStyle","conclusion","urlFileImg","whiteSpace","align","photo","fileImg","XrayResultPrint","xrayResult","Ent","entResult","EntResultPrint","EntService","rightearImg","leftearImg","noseImg","throatImg","ResultExam","Diagnostic","resetFrom","emergencyList","examServiceList","entServiceList","xrayServiceList","ultraSoundServiceList","testResultList","txtSearch","array","some","reduce","price_origin","onSubmitDiagnostic","updateJobStep","stepId","onRefresh","emergencyLoc","examLoc","entLoc","xrayLoc","ultraLoc","addJobStepEmer","addJobStep","addJobStepExam","addJobStepEnt","addJobStepXray","addJobStepUltraSound","promises","promisesResult","closeNotice","onSelectSevice","servicesList","getLocationsByService","locsByService","onSelectLocService","locId","onExamResultReiview","testing","showResult","idPrint","tabPrint","ResultsExam","selectedTestResult","Print","showFromPrint","closeFromPrint","showComfirm","submitPrint","listSelectedService","stt","servicesExam","fill","PreExamination","blood","temp","weight","getOneCustomer","allergy","onHandelChange","onBlurDiagnosis","postSubclinical","postAllergyToCus","CusArr","reExamDate","textSymptom","etcArr","otcArr","otcCode","etcCode","rowEtcArr","rowOtcArr","marginRight","paddingRight","PrintPre","PharmacyService","FormSearch","setList","setPattern","focusSearch","setFocusSearch","remainDate","exp_date","itemSearch","oldestLot","remain","totalRemain","searchProduct","Prescriptions","onChangeQuantity","keyMedArr","keyTPrice","medArr","tPrice","calTPrice","onChangeInstruction","addMed","med","tPriceETC","tPriceOTC","jobSubclinical","addProdOther","prodOther","dontHave","onRemoveMed","keySource","keyPrice","submitListProduct","order_type","newAssignment","it","newOrderCode","onSetDone","onDone","finishDiagnosis","reload","renderMed","messaget","renderOTCArr","renderETCArr","cusSubInfo","SubMedArr","subCode","trigger","content","componentRef","nextProps","Diagnosis","onChangetextDiagnosis","JobDoctor","selectedJobStep","selectTypeCustomer","handleReviewExamResult","ser_id","jobListAction","notiQuantity","shortKeyShowListPeople","ProductList","navActiveExam","getListServices","getListProduct","medList","addEventListener","removeEventListener","locationType","onLoadLocation","localStorage","Doctor","DoctorService","prescription","ItemLot","timeStamp","listLot","product_name","warehouse_name","man_date","LIST_WAREHOUSE","LIST_BATCH","LIST_TRANSACTION","LIST_PRODUCT","LIST_PRODUCER","DELETE_PRODUCER","GET_PRODUCER","EDIT_PRODUCER","POST_PRODUCER","GET_PRODUCT","ALL_BATCH","GET_LOT","POST_BATCH","GET_TRANSACTION","CREATE_TRANSACTION_FOR_LOT","InventoryService","warehouse_id","Error","ListLot","deleteLot","listWareHouse","allLot","list_lot","list_warehouse","foundP","product_id","foundWH","wh","itemLot","itemB","FormLot","Lot","setLot","setRefresh","setValue","setProductList","WarehouseList","setWarehouseList","fetchProductList","fetchWarehouseList","Warehouse_list","createLot","shouldItemRender","getItemValue","renderMenu","children","renderItem","onChangeProduct","onSelectProduct","ItemProducer","ProducerList","deleteProducer","getProducerList","itemProducer","fetchProducer","getProducerbyId","editProducer","ItemTransaction","listTransaction","lot_code","ListTransaction","deleteTransaction","list_transaction","tr","foundB","lot_id","itemTransaction","itemT","FormTransaction","valueL","valueP","createTransactionForLot","onChangeLot","onSelectLot","productName","itemWareHouse","Inventory","ListProducer","PrintPharmacy","createCusCode","ModalOrder","onClickOrder","onSelectOrder","listOrder","FormPharmacy","onChangeQ","listData","onChangeB","orderType","fakeTable","selected","doctor","jobCtime","jobInstruction","retailCustomerPhone","OnSubmitOrderId","jobStepId","itemId","getCustomer","getOrderByCustomer","showOrder","onSubmitProduct","first_name","last_name","createTransactionRetail","getDataListLot","createTransaction","onSubmitCancel","refreshOrder","createOrder","arrs","createRetailOrder","arrUpdateQty","updateQuantity","onClose","getJob","selectedOrder","itemOrder","updateOrrder","getDataListProduct","order_ctime","itemPharmacy","itemP","icon","faTimesCircle","faCheckCircle","hostpital","class","fIndex","css","Pharmacy","TransactionService","user_id","start_date","end_date","customer_code","TransTable","reason","isManager","amountRetail","totalExam","totalTest","totalXray","totalEnt","totalUltrasound","totalOther","totalBuy","exam","test","xray","ent","ultrasound","buy","other","CancelTable","job_step","CancelModal","openCancel","TransactionModal","cancel","listStepCancel","cancelTransaction","afterCancelDone","closeTrans","openTrans","TransactionForm","findUserbyId","getUserbyId","findHistoryTransaction","getHistoryTransactionByTimeAndUserID","transactionInfo","itemsCancel","records","arrIdCustomer","customers","getStep","itemsTransaction","amountCash","revuene","cash","amountAtm","atm","amountCancel","setUserList","handleChangeSelectUser","handleExportFile","exporExcelTransaction","changeCustomerCode","userFirstName","userLastName","userFullName","transactionId","transactionProduct","sumProduct","transactionExam","sumExam","transactionRetail","sumRetail","transactionCash","sumCash","transactionOther","sumOther","transactionTest","sumTest","transactionXray","sumXray","transactionUltrasound","sumUltrasound","transactionEnt","sumEnt","cancelTotal","userOptions","isDisabled","htmlFor","AccountingPrintingPreview","date_pos","setIsOpenFound","isShowFound","orderList","totalList","itemNew","orderInfoNew","checkItems","findOrderByCmCode","getListTransaction","onChangeCmCode","textCmCode","handleSearchCmCode","totalFirst","searchCmCode","index2","searchOrderCode","onClickCheckBox","setSubmmitServiceList","itemEdit","postEditOrder","indexList","indexStep","indexItem","Statistical","listStatistical","userId","roleArr","userIds","created_by","modified_by","perform","suggest","Transaction","GET_LIST_LOCATION","GET_CUS_BY_LOC","GET_XRAY_BY_LOC","GET_XRAY_INDEX_LIST_BY_SER_ID","UPDATE_XRAY_RESULT","TAKE_SAMPLE","Xray","GET_EXAM_BY_LOC","resultServiceXray","XrayResult","codeFromService","onChangeResult","onBlurChangeResult","xrayReSult","setOnchangeCode","setResultFrom","nameFromService","XrayFrom","onSelectJobDone","XrayService","finishXrayResult","itemResults","xrayValue","titleWaitForXray","saveXrayResult","titleWaitForXrayDone","resultServiceEnt","EntResult","name_files","rightear","leftear","nose","throat","files","urls","metaDataImg","metaData","metadata","onChangeFile","URL","createObjectURL","append","entReSult","FormData","accept","EntEdit","array_urls","uploadPhoto","finishEntResult","urlFile","titleWaitForEnt","titleWaitForEntDone","saveEntResult","Endoscopic","resultServiceUltra","ResultUltrasound","file","onChangeResultFile","ultraReSult","UltralResultImg","UltrasoundEdit","finishUtralResult","ultraName","ultraConclusion","titleWaitForUltra","titleWaitForUltraDone","saveUltraResult","PaperResultUltrasound","Ultrasonic","App","Reception","Ultrasound","Login","login","getUserInfo","_res","arrPharmacy","autoComplete","onKeyPress","isLogged","Root","ReactDOM"],"mappings":"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","file":"static/js/main.f8930877.chunk.js","sourcesContent":["class UtilService {\n    constructor() { }\n}\n\nexport default UtilService;","export const BASE_URL = process.env.REACT_APP_BASE_URL;\n\nexport const ROLE = {\n  RECEPTIONIST: { name: 'Lễ Tân', value: \"le_tan\" },\n  DOCTOR: { name: 'Bác Sĩ', value: \"bac_si\" },\n  NURSING: { name: \"Điều Dưỡng\", value: \"dieu_duong\" },\n  TEST_OPERATOR: { name: 'Xét Nghiệm', value: \"ki_thuat\" },\n  ACCOUNTER: { name: 'Thu Ngân', value: \"thu_ngan\" },\n  PHARMACIST: { name: 'Dược Sĩ', value: \"duoc_si\" },\n  ADMIN: { name: 'Admin', value: \"admin\" },\n  ULTRASOUND: { name: \"Siêu Âm\", value: \"sieu_am\" },\n  ENT: { name: \"Nội Soi\", value: \"noi_soi\" },\n  XRAY: { name: \"X-Quang\", value: \"x_quang\" },\n  INVENTORY: { name: \"Kho\", value: \"kho\" },\n};\nexport const OTHER_SERVICES = {\n  STDAD: 'Soi tươi dịch âm đạo',\n  STDND: 'Soi tươi dịch niệu đạo',\n  SP: 'Soi Phân',\n  MD: 'miễn dịch'\n}\nexport const POLICY_CODE = {\n  KL3D: 'KL3D',\n  CBNV:'CBNV',\n  KDV:'KDV',\n  BHYT:'BHYT',\n  KBHYT:'KBHYT'\n}\nexport const OTHER_DATA = {\n  'Xét nghiệm nước tiểu tế bào': {\n    'Số lượng HC/vi trường(40X)': '',\n    'Số lượng BC/vi trường(40X)': '',\n    'Trụ HC/vi trường(40X)': '',\n    'Trụ BC/vi trường(40X)': '',\n    'Trụ hạt/vi trường(40X)': '',\n    'Trụ khác/vi trường(40X)': '',\n    'Tinh thể/vi trường(40X)': '',\n    'Tế bào biểu mô/vi trường(40X)': ''\n  },\n  'Thời gian máu chảy phương pháp Duke': {\n    'Thời gian máu chảy': '',\n    'Thời gian máu đông': '',\n  },\n  'Máu lắng': {\n    'Máu lắng 1h': '',\n    'Máu lắng 2h': ''\n  },\n  'Vi nấm soi tươi': {\n    'Nấm men': '',\n    'Nấm sợi': '',\n    'Kí sinh trùng trong da': ''\n  },\n  'Vi nấm nhuộm soi': {\n    'Nấm men': '',\n    'Nấm sợi': '',\n    'Kí sinh trùng trong da': ''\n  },\n  'Nhuộm soi dịch họng': {\n    'Bạch cầu': '',\n    'Cầu khuẩn Gram (+)': '',\n    'Trực khuẩn Gram (-)': '',\n    'Vi khuẩn khác': '',\n  },\n  'Trứng giun, sán soi tươi': {\n    'Trứng giun': '',\n    'Trứng sán': ''\n  },\n  'LẬU (neisseria gonorrhoeae)': {\n    'Cầu khuẩn Gram âm xếp đôi ': '',\n  },\n  'Soi phân ( Hồng cầu, bạch cầu , đơn bào đường ruột, cặn dư phân)': {\n    'Vi khuẩn nhuộm soi': {\n      'Cầu khuẩn Gram (+)': '',\n      'Trực khuẩn Gram (-)': '',\n      'Kết luận': ''\n    },\n    'Soi tươi': {\n      'Hồng cầu': '',\n      'Bạch cầu': '',\n    },\n\n    'Lỵ Amip': '',\n    'Cặn dư trong phân': '',\n  },\n  'Strongyloides stercoralis(Giun lươn) ấu trùng soi tươi': {\n    'Giun lươn': ''\n  },\n  'Demodex soi tươi': {\n    'Demodex soi tươi': ''\n  },\n  'Demodex nhuộm soi': {\n    'Demodex nhuộm soi': ''\n  },\n  'Hệ RH': {\n    'Hệ nhóm RH': ''\n  },\n  'Hệ nhóm ABO': {\n    'Hệ nhóm ABO': ''\n  },\n  'Soi tươi dịch âm đạo (nấm,bạch cầu, trùng roi)': {\n    'Bạch cầu ': '',\n    'Vi khuẩn nhuộm soi': {\n      'Cầu khuẩn Gram (+)': '',\n      'Cầu khuẩn Gram (-)': '',\n      'Song cầu Gram': '',\n      'Tạp khuẩn': ''\n    },\n    'Nấm': '',\n    'Trichomonasvaginalis': '',\n    '.': ''\n  },\n  'Nhuộm soi dịch âm đạo (vi khuẩn,nấm)': {\n    'Bạch cầu ': '',\n    'Vi khuẩn nhuộm soi': {\n      'Cầu khuẩn Gram (+)': '',\n      'Cầu khuẩn Gram (-)': '',\n      'Song cầu Gram': '',\n      'Tạp khuẩn': ''\n    },\n    'Nấm': '',\n    'Trichomonasvaginalis': '',\n    '.': ''\n  },\n  'Nhuộm soi dịch niệu đạo (vi khuẩn,nấm)': {\n    'Bạch cầu ': '',\n    'Vi khuẩn nhuộm soi': {\n      'Cầu khuẩn Gram (+)': '',\n      'Trực khuẩn Gram (-)': '',\n      'Song cầu Gram': '',\n    },\n    'Nấm': '',\n    '': '',\n    '': ''\n  },\n  'Soi tươi dịch niệu đạo (nấm,bạch cầu, trùng roi)': {\n    'Bạch cầu ': '',\n    'Vi khuẩn nhuộm soi': {\n      'Cầu khuẩn Gram dương': '',\n      'Trực khuẩn Gram âm': '',\n      'Song cầu Gram âm': '',\n    },\n    'Nấm': '',\n    '': '',\n    '': ''\n  },\n  'Điện giải đồ': {\n    'Na+': '',\n    'K+': '',\n    'Cl-': ''\n  },\n  'Tìm cặn dư trong phân': {\n    'Cặn dư trong phân': ''\n  },\n  'Phospho': {\n    'Phospho': ''\n  }, 'Nấm trong phân': {\n    'Nấm trong phân': ''\n  },\n}\n\nexport const STATUS = {\n  NEW: \"new\",\n  READY: \"ready\",\n  RUNNING: \"running\",\n  CANCEL: \"cancel\",\n  DONE: \"done\",\n  PAID: \"paid\"\n};\n\nexport const LOCALSTORAGE = {\n  TOKEN: 'token',\n  USER: 'user',\n  LOCATION: 'location'\n}\n\nexport const SERVICE_TYPE = {\n  EXAM: \"exam\",\n  TEST: \"test\",\n  ULTRASOUND: \"ultrasound\",\n  XRAY: \"x-ray\",\n  ENT: \"ent\",\n  OTHER: \"other\",\n}\n\nexport const STEP_TYPE = {\n  EXAM: 'exam',\n  TEST: 'test',\n  BUY: 'buy',\n  CANCEL: 'cancel'\n}\n\nexport const ORDER_TYPE = {\n  OTC: { code: \"otc_drug\", label: \"Đơn bổ sung\" }, // thuốc bổ sung bán tại quầy\n  ETC: { code: \"etc_drug\", label: \"Đơn chỉ định\" }, // thuốc theo toa\n  OTHER: { code: \"other\", label: \"Đơn khác\" }\n}\n\nexport const LOCATION_TYPE = {\n  EXAMINATION: \"PK\",\n  EMERGENCY: \"CC\",\n  PHARMACY: \"QT\",\n  XRAY: \"XQ\",\n  TESTING: \"XN\",\n  ULTRASOUND: \"SA\",\n  ENT: \"NS\",\n}\n\nexport const REGEX_TEL = \"^0\\\\d{9,11}$\";\nexport const REGEX_DATE = \"^(0?[1-9]|[12][0-9]|3[01])[/](0?[1-9]|1[012])[/]\\\\d{4}$\";\n\nexport const ERR_MSG = {\n  EMAIL: \"Sai định dạng email, vui lòng kiểm tra lại\",\n  REQUIRED: \"*\",\n  MIN: \"Giá trị phải lớn hơn: \",\n  MAX: \"Giá trị phải nhỏ hơn: \",\n  MIN_LENGTH: \"Độ dài phải lớn hơn: \",\n  MAX_LENGTH: \"Độ dài phải nhỏ hơn: \",\n  P_TEL: \"Vui lòng kiểm tra lại số điện thoại\",\n  P_DATE: \"Sai định dạng thời gian, vui lòng kiểm tra lại\",\n  CF_PASSWORD: \"Mật khẩu không trùng nhau\",\n};\n\nexport const ONE_DAY = 1000 * 60 * 60 * 24;\n\nexport function String(number , option) {\n  if (option == \"date\") {\n    if (number < 10) {\n      return `0${number}`\n    } \n    return number.toString();\n  }\n  if (option == \"service\") {\n    if (number < 10) {\n      return `00${number}`\n    } else if (number < 100) {\n      return `0${number}`\n    }\n    return number.toString();\n  }\n}\n\nexport const DATE = (time, string) => {\n  let date;\n  if (typeof (time) == \"string\") {\n    date = new Date(time);\n  }\n  if (time == \"now\") {\n    date = new Date();\n  }\n  const year = date.getFullYear().toString().substr(2, 4);\n  const month = String((date.getMonth() + 1),\"date\");\n  const day = String(date.getDate(),\"date\");\n  const hour = String(date.getHours(),\"date\");\n  const min = String(date.getMinutes(),\"date\");\n  const sec = String(date.getSeconds(),\"date\");\n  if (string === \"YYMMDDHHMMSS\") {\n    return year + month + day + hour + min + sec;\n  }\n  if (string === \"DDMMYYYY\") {\n    const year = date.getFullYear();\n    return `${day}-${month}-${year}`;\n  }\n  return year + month + day + hour + min + sec;\n}\n\nexport const EQUAL_ARRAY = (a, b) => {\n  if (Array.isArray(a) == false || Array.isArray(b) == false) {\n    return `${a} or ${b} not array`\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n  const result = a.every((elA, index) => elA == b[index]);\n  return result;\n}\n\nexport const splitRegion = (string) => {\n  const arrString = string.split(\" \");\n  if (arrString[0] == \"Tỉnh\") {\n    arrString.splice(0,1);\n    return arrString.join(\" \");\n  } \n  if (arrString[0] == \"Thành\") {\n    arrString.splice(0,2);\n    return \"TP. \" + arrString.join(\" \");\n  } \n  if (arrString[0] == \"Thị\") {\n    arrString.splice(0,2);\n    return \"TT. \" + arrString.join(\" \");\n  }\n  if (arrString[0] == \"Quận\" || arrString[0] == \"Huyện\" || arrString[0] == \"Phường\" || arrString[0] == \"Xã\") {\n    arrString.splice(0,1);\n    return arrString.join(\" \");\n  }\n}\n\nexport const ATTR_UNIT = {\n  ML: { code: 'ml', label: 'ml' },\n  MG: { code: 'mg', label: 'mg' },\n  TABLET: { code: 'tablet', label: 'viên' },\n}\n\nexport const PRODUCT_UNIT = [\n  { code: 'tablet', label: 'viên' },\n  { code: 'cans', label: 'lon' },\n  { code: 'pack', label: 'gói' },\n  { code: 'tube', label: 'ống' },\n  { code: 'tup', label: 'tuýp' },\n  { code: 'bottle', label: 'lọ' },\n  { code: 'box', label: 'hộp' },\n  { code: 'piece', label: 'cái' },\n]\n\nexport const ROUTE = [\n  { value: 'nose ', name: 'Nhỏ mũi' },\n  { value: 'buccal', name: 'Ngậm trong má' },\n  { value: 'enteral', name: 'Đường ruột' },\n  { value: 'inhalable', name: 'Hít' },\n  { value: 'infused', name: 'Đường truyền' },\n  { value: 'intramuscular', name: 'Tiêm vào cơ' },\n  { value: 'intrathecal', name: 'Tiêm vào cột sống' },\n  { value: 'intravenous', name: 'Tiêm tĩnh mạch' },\n  { value: 'nasal', name: 'Xịt mũi' },\n  { value: 'ophthalmic', name: 'Tra mắt' },\n  { value: 'oral', name: 'Đường uống' },\n  { value: 'otic', name: 'Nhỏ vào tai' },\n  { value: 'rectal', name: 'Đặt trực tràng' },\n  { value: 'subcutaneous', name: 'Tiêm dưới da' },\n  { value: 'sublingual', name: 'Ngậm dưới lưỡi' },\n  { value: 'topical', name: 'Tiêm vào cơ' },\n  { value: 'buctransdermalcal', name: 'Dán lên da' },\n\n]\nexport const IOS_DATE = () => {\n  let today = new Date().toISOString();\n  let date = today.substr(0, 10);\n  return date\n}\nexport const NAMEDEVICE = {\n  TEST: \"Test\",\n  OTHER: \"Other\",\n  BS200E: \"BS-200E\",\n  UA66: \"UA-66\",\n  BC2800: \"BC-2800\",\n  IMMUNE: 'Immune'\n}\nexport const PAY_METHOD = {\n  ATM: { code: 'atm', label: 'chuyển khoản' },\n  CASH: { code: 'cash', label: 'tiền mặt' }\n}\nexport const ALL = {\n  code: 'all',\n  label: 'TẤT CẢ'\n}\nexport const REF_ORDER = {\n  RETAIL: 'retail',\n  ORDER: 'order'\n}","import Axios from \"axios\";\nimport { BASE_URL, LOCALSTORAGE } from \"../Constances/const\";\n\nexport class Http {\n\n  constructor() { }\n\n  static _getHeader() {\n    return {\n      \"Authorization\": `Bearer ${window.sessionStorage.getItem(LOCALSTORAGE.TOKEN) || ''}`,\n    };\n  }\n\n  static get = (endPoint, params) => {\n    const options = {\n      headers: this._getHeader(),\n    };\n    if (params && Object.keys(params).length) {\n      options.params = params;\n    }\n    return Axios.get(BASE_URL + endPoint, options);\n  };\n\n  static post = (endPoint, payload) => {\n    return Axios.post(BASE_URL + endPoint, payload, {\n      headers: this._getHeader(),\n    });\n  };\n\n  static put = (endPoint, payload) => {\n    return Axios.put(BASE_URL + endPoint, payload, {\n      headers: this._getHeader(),\n    });\n  };\n\n  static patch = (endPoint, payload) => {\n    return Axios.patch(BASE_URL + endPoint, payload, {\n      headers: this._getHeader(),\n    });\n  };\n\n  static delete = (endPoint, id) => {\n    return Axios.delete(BASE_URL + endPoint + \"/\" + id, {\n      headers: this._getHeader(),\n    });\n  };\n}\n","import { UtilService } from \"../\";\nimport { EQUAL_ARRAY, LOCALSTORAGE } from \"../../Constances/const\";\nimport { Http } from \"../../Helper/Http\";\n\nconst API_ENDPOINT = {\n    LOGIN: \"/auth/login\",\n    ME: \"/auth/me\",\n};\n\nclass AuthService extends UtilService {\n    constructor() {\n        super();\n        if (AuthService._instance) {\n            return AuthService._instance;\n        }\n        AuthService._instance = this;\n    }\n\n    userInfo = JSON.parse(window.sessionStorage.getItem(LOCALSTORAGE.USER) || 'null');\n  \n    async login(username, password) {\n        return (await Http.post(API_ENDPOINT.LOGIN, { username, password })).data;\n    }\n\n    async getUserInfo() {\n        return (await Http.get(API_ENDPOINT.ME)).data;\n    }\n    \n    hasRole(roles) {\n        if (!roles || !this.userInfo) return;\n        // return this.userInfo.roles === roles.value;\n        return EQUAL_ARRAY(this.userInfo.roles, roles);\n    }\n\n    isRole(role) {\n        if (!role || !this.userInfo) return;\n        const roles = this.userInfo.roles\n        if(roles.includes(role)) return true;\n        return false\n    }\n\n}\n\nconst instance = new AuthService();\n\nexport default instance;\n","import { Http } from '../../Helper/Http';\nimport bwipjs from \"bwip-js\";\nimport * as printJS from \"print-js\";\n\nconst API_ENDPOINT = {\n  GETLISTJOBSTEP: '/job/step/list',\n  GETLISTJOB: '/job/job/list',\n  POSTSUBCLINICAL: \"/job/job/state\",\n  GET_JOB_BY_CUS_ID: \"/job/job/list?customer_id=\",\n  GET_RESULT: '/job/job/list',\n  GET_LIST_LOCATION: '/location/list'\n};\n\nclass ShareService {\n  constructor() {\n    if (ShareService._instance) {\n      return ShareService._instance;\n    }\n    ShareService._instance = this;\n  }\n  getListLocation() {\n    return Http.get(API_ENDPOINT.GET_LIST_LOCATION);\n  }\n  getResult(data) {\n    const customer_id = data.customer_id;\n    const date = data.date;\n    return Http.get(API_ENDPOINT.GET_RESULT + '?customer_id=' + customer_id + '&&date=' + date);\n  }\n  getCustomerByCode(text) {\n    return Http.get(`/customer/customer/search`, { text })\n  }\n  getJobByCustomerId(customer_id) {\n    return Http.get(API_ENDPOINT.GET_JOB_BY_CUS_ID + customer_id)\n  }\n  getListJobStep(payload) {\n    return Http.get(API_ENDPOINT.GETLISTJOBSTEP, payload);\n  }\n\n  getListJob(payload) {\n    return Http.get(API_ENDPOINT.GETLISTJOB, payload);\n  }\n  postSubclinical(data) {\n    return Http.post(API_ENDPOINT.POSTSUBCLINICAL, data)\n  }\n  print = (id) => {\n    printJS({\n      printable: id,\n      type: 'html',\n      targetStyles: ['*'],\n      style: `@page {\n          size: A5;\n          margin: 0;\n                  },\n               @media print {\n                  .medPrintId{\n                    margin: 0;\n                    border: initial;\n                    border-radius: initial;\n                    width: initial;\n                    min-height: initial;\n                    box-shadow: initial;\n                    background: initial;\n                    page-break-after: always;\n                  }`,\n      header: null,\n      footer: null,\n    });\n  };\n  printhorizontal = (id) => {\n    printJS({\n      printable: id,\n      type: 'html',\n      targetStyles: ['*'],\n      style: `@page {\n          size: Letter landscape;\n        }`,\n      header: null,\n      footer: null,\n    });\n  }\n  printBarCode = (id) => {\n    printJS({\n      printable: id,\n      type: 'html',\n      scanStyles: false,\n      targetStyles: ['*'],\n      style: `@page { size: landscape;}`,\n      header: null,\n      footer: null,\n    });\n  };\n  createBarcode(step_id) {\n    try {\n      const canvas = bwipjs.toCanvas(\"canvas_id\", {\n        bcid: \"code128\",\n        text: step_id,\n        scale: 5,\n        // height: 8,\n        includetext: true,\n        textxalign: \"center\"\n      });\n      return canvas;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  createEtccode(step_id, id) {\n    try {\n      const canvas = bwipjs.toCanvas(id, {\n        bcid: \"code128\",\n        text: step_id,\n        scale: 1,\n        height: 8,\n        includetext: true,\n        textxalign: \"center\",\n      });\n      return canvas;\n    } catch (error) {\n      throw error;\n    }\n  };\n  createOtccode(step_id, id) {\n    try {\n      const canvas = bwipjs.toCanvas(id, {\n        bcid: \"code128\",\n        text: step_id,\n        scale: 1,\n        height: 8,\n        includetext: true,\n        textxalign: \"center\",\n      });\n      return canvas;\n    } catch (error) {\n      throw error;\n    }\n  };\n  createCusCode(customerCode) {\n    try {\n      const canvas = bwipjs.toCanvas(\"canvasCustomer\", {\n        bcid: \"code128\",\n        text: customerCode,\n        scale: 1,\n        height: 8,\n        includetext: true,\n        textxalign: \"center\",\n      });\n      return canvas;\n    } catch (error) {\n      throw error;\n    }\n  };\n}\nconst instance = new ShareService();\n\nexport default instance;\n","import { Component } from 'react';\nimport { ERR_MSG, REGEX_TEL, REGEX_DATE } from '../../../Constances/const';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            form: {\n                dirty: false,\n            }\n        }\n    }\n\n    _getInitFormData(data) {\n        let formData = {};\n        Object.keys(data).forEach(k => {\n            formData[k] = {\n                value: data[k],\n                err: '',\n            }\n        })\n        formData.dirty = false;\n        return formData;\n    }\n\n    _fillForm = (data) => {\n        this.setState(prevState => {\n            let form = {};\n            Object.keys(data).forEach(k => {\n                form[k] = {\n                    value: data[k],\n                    err: '',\n                }\n            })\n            form.dirty = false;\n            prevState.form = form;\n            return prevState;\n        })\n    }\n\n    _setValue = (ev, key) => {\n        ev.persist();\n        this.setState(prevState => {\n            // prevState.form.dirty = true;\n            prevState.form[key] = {\n                value: ev.target.value,\n                err: this._getInvalidErr(ev.target),\n            }\n            return prevState;\n        });\n    }\n\n    _getInvalidErr(domEl) {\n        if (domEl.validity.valid) return '';\n        if (domEl.type === 'email' && domEl.validity.typeMismatch) return ERR_MSG.EMAIL;\n        if (domEl.validity.valueMissing) return ERR_MSG.REQUIRED;\n        if (domEl.validity.rangeOverflow) return ERR_MSG.MAX + domEl.max;\n        if (domEl.validity.rangeUnderflow) return ERR_MSG.MIN + domEl.min;\n        if (domEl.validity.tooLong) return ERR_MSG.MAX_LENGTH + domEl.maxLength;\n        if (domEl.validity.tooShort) return ERR_MSG.MIN_LENGTH + domEl.minLength;\n        if (domEl.validity.patternMismatch && domEl.pattern === REGEX_TEL) return ERR_MSG.P_TEL;\n        if (domEl.validity.patternMismatch && domEl.pattern === REGEX_DATE) return ERR_MSG.P_DATE;\n        return 'Got err'\n\n    }\n\n    _validateForm() {\n        let formData = this.state.form;\n        formData.dirty = true;\n        Object.keys(formData).forEach(k => {\n            if (k != 'dirty') {\n                let domEl = document.getElementsByName(k);\n                if (domEl[0]) {\n                    formData[k].err = this._getInvalidErr(domEl[0]);\n                }\n            }\n        })\n        this.setState({ form: formData })\n    }\n\n    _isFormValid() {\n        let formData = this.state.form;\n        return !Object.keys(formData).find(k => !!formData[k].err);\n    }\n\n}\n\nexport default Form;","import React from 'react';\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalConfirm extends React.Component {\n\n    render() {\n        let { message, answer } = this.props;\n        return (\n            <div className=\"modalConfirmContainer\">\n                <Modal isOpen={!!message} >\n                    <ModalHeader >Thông Báo!</ModalHeader>\n                    <ModalBody>{message}</ModalBody>\n                    <ModalFooter>\n                        <Button onClick={() => { answer(true) }}>Yes</Button>{' '}\n                        <Button color=\"danger\" onClick={() => { answer() }}>No</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ModalConfirm;","\nconst monthName = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nexport class Util {\n\n    constructor() { }\n\n    static typeName = (typeCode) => {\n        try {\n            typeCode = Number.parseInt(typeCode);\n            switch (typeCode) {\n                case 1:\n                    return 'Create';\n                case 2:\n                    return 'Update';\n                case 3:\n                    return 'Remove';\n                default:\n                    return 'Unknown';\n            }\n        }\n        catch {\n            return 'Unknown';\n        }\n    }\n\n    static statusName = (statusCode) => {\n        try {\n            statusCode = Number.parseInt(statusCode);\n            switch (statusCode) {\n                case 1:\n                    return 'Pendding';\n                case 2:\n                    return 'Approved';\n                case 3:\n                    return 'Rejected';\n                default:\n                    return 'Unknown';\n            }\n        } catch {\n            return 'Unknown';\n        }\n    }\n\n    static dateString = (date) => {\n        let _date = new Date(date);\n        return `${monthName[_date.getMonth()]} ${_date.getDate()}, ${_date.getFullYear()}`;\n    }\n\n    static timeString = (date) => {\n        return\n    }\n\n    static getModelName = (model) => {\n        model = model || '';\n        return model.split(/(?=[A-Z])/).join(' ');\n    }\n\n    static onKeyDown = (event) => {\n        if (event.keyCode === 13) {\n            // event.preventDefault();\n            let index = parseInt(event.target.dataset.index);\n            if (document.querySelector('[data-index=\"' + (index + 1) + '\"]') == null) {\n                \n                return\n            } else {\n                document.querySelector('[data-index=\"' + (index + 1) + '\"]').focus();\n            }\n        }\n    }\n\n    static formatPrice = (num) => {\n        return new Intl.NumberFormat('de-DE').format(num)\n    }\n}\n","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport {Util} from '../../../Helper/Util'\nclass ModalNoti extends React.Component {\n\n    render() {\n        let { message, done } = this.props;\n        return (\n            <div className=\"modalNotiContainer\">\n                <Modal isOpen={!!message} >\n                    <ModalHeader >Thông Báo !</ModalHeader>\n                    <ModalBody>{message}</ModalBody>\n                    <ModalFooter>\n                        <Button\n                            onKeyDown={(e) => Util.onKeyDown(e)}\n                            data-index=\"18\"\n                            color=\"primary\"\n                            onClick={() => { done() }}>OK</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ModalNoti;","var _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8, _g9, _g10, _g11, _g12, _g13, _g14, _g15, _g16, _g17, _g18;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgStethoscope(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M431.997,126c-5.52,0-10,4.48-10,10s4.48,10,10,10c5.52,0,10-4.48,10-10S437.517,126,431.997,126z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M461.997,156c-5.523,0-10,4.477-10,10c0,11.028-8.972,20-20,20c-11.028,0-20-8.972-20-20c0-0.771,0.041-1.507,0.121-2.188 c0.647-5.485-3.274-10.456-8.759-11.104c-5.488-0.648-10.456,3.273-11.104,8.759c-0.172,1.455-0.259,2.98-0.259,4.532 c0,22.056,17.944,40,40,40c22.056,0,40.001-17.943,40.001-39.999C471.997,160.477,467.52,156,461.997,156z\"\n  })))), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M431.997,86c-44.112,0-80,35.888-80,80c0,33.412,20.427,62.128,50,74.148V344c0,55.935-53.271,105-114,105 c-60.523,0-118.17-54.145-113.307-116.758c47.244-11.802,83.64-50.579,91.322-100.323l21.479-130.197 c6.237-36.102-16.401-70.943-52.005-79.845l-6.43-1.603C222.028,7.807,208.887,0,194.257,0c-22.056,0-40,17.944-40,40 c0,22.056,17.944,40,40,40c5.094,0,10.153-0.994,14.844-2.866l11.833,2.959c5.056,1.263,8.32,6.27,7.43,11.405l-6.48,37.5 c-0.006,0.035-0.012,0.07-0.018,0.105l-15.093,93.259C201.999,253.442,175.707,276,144.257,276c-31.448,0-57.765-22.71-62.576-54 c-0.005-0.036-0.011-0.072-0.017-0.108L60.15,91.491c-0.89-5.129,2.374-10.136,7.433-11.4l11.831-2.958 C84.109,79.007,89.166,80,94.257,80c22.056,0,40-17.944,40-40c0-22.056-17.944-40-40-40c-14.63,0-27.772,7.807-34.799,20.275 l-6.426,1.604c-35.379,8.842-58.22,43.916-52.012,79.77L22.452,231.55c7.659,49.659,44.141,89.153,92.081,100.871 C110.035,426.997,192.974,512,287.997,512c89.34,0,174-72.405,174-165V240.148c29.501-11.99,50-40.657,50-74.148 C511.997,121.888,476.109,86,431.997,86z M194.257,60c-11.028,0-20-8.972-20-20s8.972-20,20-20c11.386,0,20,9.253,20,20 C214.257,51.08,205.288,60,194.257,60z M94.257,20c11.028,0,20,8.972,20,20s-8.972,20-20,20c-11.04,0-20-8.925-20-20 C74.257,29.231,82.893,20,94.257,20z M42.212,228.45c-0.005-0.036-0.011-0.072-0.017-0.108L20.741,98.314 c-4.232-24.442,10.37-48.316,33.596-55.99c0.396,6.882,2.54,13.404,6.104,19.044c-13.847,4.664-22.531,18.929-20.01,33.46 l21.491,130.265C68.265,266.183,102.883,296,144.257,296c41.395,0,76-29.692,82.272-70.522l15.072-93.13l6.469-37.438 c2.533-14.609-6.152-28.88-19.998-33.541c3.565-5.641,5.71-12.163,6.105-19.047c23.224,7.673,37.829,31.553,33.594,56.07 l-21.5,130.32c-0.006,0.036-0.011,0.071-0.017,0.106c-7.573,49.184-49.842,87.314-102.256,87.175 C91.628,315.854,49.804,277.824,42.212,228.45z M441.997,347c0,77.243-71.962,145-154,145 c-83.144,0-156.084-74.36-153.562-156.395c3.266,0.256,6.546,0.395,9.821,0.395c3.415,0,6.824-0.146,10.21-0.42 C151.848,408.29,218.079,469,287.997,469c68.165,0,134-55.291,134-125v-98.634c3.303,0.413,6.64,0.634,10,0.634 s6.698-0.221,10-0.633V347z M430.997,225.98c-33.226-0.542-59-27.969-59-59.98c0-33.084,26.916-60,60-60c33.084,0,60,26.916,60,60 C491.997,198.702,465.139,226.538,430.997,225.98z\"\n  })))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", null)), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", null)), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", null)), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", null)), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", null)), _g9 || (_g9 = /*#__PURE__*/React.createElement(\"g\", null)), _g10 || (_g10 = /*#__PURE__*/React.createElement(\"g\", null)), _g11 || (_g11 = /*#__PURE__*/React.createElement(\"g\", null)), _g12 || (_g12 = /*#__PURE__*/React.createElement(\"g\", null)), _g13 || (_g13 = /*#__PURE__*/React.createElement(\"g\", null)), _g14 || (_g14 = /*#__PURE__*/React.createElement(\"g\", null)), _g15 || (_g15 = /*#__PURE__*/React.createElement(\"g\", null)), _g16 || (_g16 = /*#__PURE__*/React.createElement(\"g\", null)), _g17 || (_g17 = /*#__PURE__*/React.createElement(\"g\", null)), _g18 || (_g18 = /*#__PURE__*/React.createElement(\"g\", null)));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgStethoscope);\nexport default __webpack_public_path__ + \"static/media/stethoscope.61c4cbad.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8, _g9, _g10, _g11, _g12, _g13, _g14, _g15, _g16, _g17, _g18;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMedicine(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M125.696,125.994c-5.52,0-10,4.48-10,10s4.48,10,10,10c5.52,0,10-4.48,10-10S131.216,125.994,125.696,125.994z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M215.691,312.984h-29.998v-29.998c0-5.522-4.478-10-10-10s-9.999,4.478-9.999,10v29.998h-29.998 c-5.522,0-10,4.478-10,9.999s4.478,10,10,10h29.998v29.998c0,5.522,4.478,10,9.999,10s10-4.478,10-10v-29.998h29.998 c5.522,0,10-4.478,10-10S221.214,312.984,215.691,312.984z\"\n  })))), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M485.578,321.984c-22.105-38.286-70.981-51.389-109.274-29.279l-40.618,23.45v-86.836c0-10.735-3.55-21.388-9.999-29.998 l-49.997-66.661v-28.386c11.638-4.128,19.999-15.242,19.999-28.279V29.998C295.687,13.457,282.23,0,265.689,0H85.698 C69.157,0,55.699,13.457,55.699,29.998v45.998c0,13.035,8.361,24.151,19.999,28.279v28.386l-50.001,66.665 c-6.446,8.606-9.996,19.258-9.996,29.993v193.66c0,27.569,22.429,49.997,49.997,49.997h160.702 c22.421,37.583,70.767,50.161,108.664,28.279L456.3,431.258C494.255,409.34,507.794,360.479,485.578,321.984z M75.698,29.998 c0-5.514,4.486-10,9.999-10h179.991c5.514,0,10,4.486,10,10v45.998c0,5.514-4.486,9.999-10,9.999H85.698 c-5.514,0-9.999-4.486-9.999-9.999V29.998z M41.701,211.319l51.996-69.326c1.298-1.73,2-3.836,2-6v-29.998h159.992v19.999h-89.995 c-5.522,0-10,4.478-10,10s4.478,10,10,10h94.995l48.993,65.322c3.202,4.275,5.191,9.39,5.792,14.674H35.913 C36.513,220.705,38.502,215.59,41.701,211.319z M65.699,452.977c-16.541,0-29.998-13.457-29.998-29.998v-10.099h181.675 c-3.171,12.965-3.15,26.813,0.481,40.098H65.699z M225.219,392.98H35.7V245.987h279.986V327.7l-60.619,35.002 C242.428,370.003,232.212,380.396,225.219,392.98z M325.066,483.935c-28.697,16.571-65.367,6.771-81.949-21.946 c-16.661-28.994-6.564-65.498,21.952-81.969l54.277-31.338l59.997,103.915L325.066,483.935z M446.3,413.939l-49.637,28.659 l-59.998-103.917l49.638-28.656c28.716-16.578,65.373-6.761,81.955,21.957C484.913,360.844,474.785,397.49,446.3,413.939z\"\n  })))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", null)), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", null)), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", null)), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", null)), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", null)), _g9 || (_g9 = /*#__PURE__*/React.createElement(\"g\", null)), _g10 || (_g10 = /*#__PURE__*/React.createElement(\"g\", null)), _g11 || (_g11 = /*#__PURE__*/React.createElement(\"g\", null)), _g12 || (_g12 = /*#__PURE__*/React.createElement(\"g\", null)), _g13 || (_g13 = /*#__PURE__*/React.createElement(\"g\", null)), _g14 || (_g14 = /*#__PURE__*/React.createElement(\"g\", null)), _g15 || (_g15 = /*#__PURE__*/React.createElement(\"g\", null)), _g16 || (_g16 = /*#__PURE__*/React.createElement(\"g\", null)), _g17 || (_g17 = /*#__PURE__*/React.createElement(\"g\", null)), _g18 || (_g18 = /*#__PURE__*/React.createElement(\"g\", null)));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMedicine);\nexport default __webpack_public_path__ + \"static/media/medicine.fb38100e.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTesting(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_3\",\n    enableBackground: \"new 0 0 64 64\",\n    height: 512,\n    viewBox: \"0 0 64 64\",\n    width: 512,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m62 55h-3v-32h-2v32h-50v-33h5v1h-3c-.553 0-1 .447-1 1v29c0 .553.447 1 1 1h46c.553 0 1-.447 1-1v-29h-2v28h-44v-27h2v6c0 .553.447 1 1 1h14c.553 0 1-.447 1-1v-6h9v-2h-9v-1h9v-2h-9v-3c0-.553-.447-1-1-1h-14c-.553 0-1 .447-1 1v3h-6c-.553 0-1 .447-1 1v34h-3c-.553 0-1 .447-1 1v4c0 1.654 1.346 3 3 3h56c1.654 0 3-1.346 3-3v-4c0-.553-.447-1-1-1zm-48-37h12v12h-12zm47 42c0 .552-.448 1-1 1h-56c-.552 0-1-.448-1-1v-3h58z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m38 16h1.466c.176.559.4 1.1.673 1.619l-1.038 1.038c-.391.391-.391 1.023 0 1.414l2.828 2.828c.391.391 1.023.391 1.414 0l1.038-1.038c.52.272 1.061.497 1.619.673v1.466c0 .553.447 1 1 1h4c.553 0 1-.447 1-1v-1.466c.559-.176 1.1-.4 1.619-.673l1.038 1.038c.391.391 1.023.391 1.414 0l2.828-2.828c.391-.391.391-1.023 0-1.414l-1.038-1.038c.272-.52.497-1.061.673-1.619h1.466c.553 0 1-.447 1-1v-4c0-.553-.447-1-1-1h-1.466c-.176-.559-.4-1.1-.673-1.619l1.038-1.038c.391-.391.391-1.023 0-1.414l-2.828-2.828c-.391-.391-1.023-.391-1.414 0l-1.038 1.038c-.519-.273-1.06-.497-1.619-.673v-1.466c0-.553-.447-1-1-1h-4c-.553 0-1 .447-1 1v1.466c-.559.176-1.1.4-1.619.673l-1.038-1.038c-.391-.391-1.023-.391-1.414 0l-2.828 2.828c-.391.391-.391 1.023 0 1.414l1.038 1.038c-.273.519-.497 1.06-.673 1.619h-1.466c-.553 0-1 .447-1 1v4c0 .553.447 1 1 1zm1-4h1.23c.467 0 .871-.323.975-.778.2-.877.546-1.709 1.027-2.474.249-.396.191-.91-.139-1.24l-.872-.872 1.414-1.414.872.872c.331.332.846.388 1.24.139.765-.481 1.597-.827 2.474-1.027.456-.104.779-.509.779-.976v-1.23h2v1.23c0 .467.323.871.778.975.877.2 1.709.546 2.474 1.027.395.249.909.193 1.24-.139l.872-.872 1.414 1.414-.872.872c-.33.33-.388.845-.139 1.24.481.765.827 1.597 1.027 2.474.104.456.509.779.976.779h1.23v2h-1.23c-.467 0-.871.323-.975.778-.2.877-.546 1.709-1.027 2.474-.249.396-.191.91.139 1.24l.872.872-1.414 1.414-.872-.872c-.331-.331-.846-.388-1.24-.139-.765.481-1.597.827-2.474 1.027-.456.104-.779.509-.779.976v1.23h-2v-1.23c0-.467-.323-.871-.778-.975-.877-.2-1.709-.546-2.474-1.027-.395-.249-.909-.192-1.24.139l-.872.872-1.414-1.414.872-.872c.33-.33.388-.845.139-1.24-.481-.765-.827-1.597-1.027-2.474-.104-.456-.509-.779-.976-.779h-1.23z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m49 20c3.859 0 7-3.141 7-7s-3.141-7-7-7-7 3.141-7 7 3.141 7 7 7zm0-12c2.757 0 5 2.243 5 5s-2.243 5-5 5-5-2.243-5-5 2.243-5 5-5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m53 35v-2h-1.08c-.17-1.183-.636-2.269-1.322-3.184l.766-.766-1.414-1.414-.766.766c-.915-.686-2.001-1.152-3.184-1.322v-1.08h-2v1.08c-1.183.17-2.269.636-3.184 1.322l-.766-.766-1.414 1.414.766.766c-.686.915-1.152 2.001-1.322 3.184h-1.08v2h1.08c.17 1.183.636 2.269 1.322 3.184l-.766.766 1.414 1.414.766-.766c.915.686 2.001 1.151 3.184 1.322v1.08h2v-1.08c1.183-.17 2.269-.636 3.184-1.322l.766.766 1.414-1.414-.766-.766c.686-.915 1.151-2.001 1.322-3.184zm-3-1c0 2.757-2.243 5-5 5s-5-2.243-5-5 2.243-5 5-5 5 2.243 5 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m45 30c-2.206 0-4 1.794-4 4s1.794 4 4 4 4-1.794 4-4-1.794-4-4-4zm0 6c-1.103 0-2-.897-2-2s.897-2 2-2 2 .897 2 2-.897 2-2 2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m27 34h-14c-.553 0-1 .447-1 1v14c0 .553.447 1 1 1h14c.553 0 1-.447 1-1v-14c0-.553-.447-1-1-1zm-1 14h-12v-12h12z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m18.925 26.233-2.125-2.833-1.6 1.2 3 4c.19.253.486.4.8.4.014 0 .028 0 .042-.001.33-.014.631-.189.806-.469l5-8-1.695-1.061z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m16.707 46.707 3.293-3.293 3.293 3.293 1.414-1.414-3.293-3.293 3.293-3.293-1.414-1.414-3.293 3.293-3.293-3.293-1.414 1.414 3.293 3.293-3.293 3.293z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTesting);\nexport default __webpack_public_path__ + \"static/media/testing.6f7d71e3.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8, _g9, _g10, _g11, _g12, _g13, _g14, _g15, _g16, _g17, _g18;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMicroscope(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512.001 512.001\",\n    style: {\n      enableBackground: \"new 0 0 512.001 512.001\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M286,382.001c-5.52,0-10,4.48-10,10c0,5.52,4.48,10,10,10c5.52,0,10-4.48,10-10C296,386.481,291.52,382.001,286,382.001z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M426.542,422.015l-8.195-24.586C442.673,371.408,456,337.766,456,302.001c0-62.984-42.061-118.048-101.212-135.262 l24.512-42.458c2.761-4.783,1.122-10.898-3.661-13.66l-8.66-5l10-17.32l8.66,5c4.772,2.755,10.892,1.134,13.66-3.66l20-34.64 c2.76-4.78,1.121-10.899-3.66-13.66l-69.28-40c-4.781-2.76-10.899-1.122-13.66,3.66l-20,34.64 c-2.76,4.78-1.122,10.899,3.66,13.66l8.66,5l-10,17.32l-8.66-5c-4.779-2.76-10.9-1.122-13.66,3.66l-75,129.909l-8.66-5 c-4.778-2.761-10.899-1.122-13.66,3.66l-20,34.641c-2.762,4.783-1.123,10.898,3.66,13.66l103.92,60 c4.75,2.744,10.882,1.151,13.66-3.66l20-34.641c2.762-4.783,1.123-10.898-3.66-13.66l-8.66-5l7.385-12.791 C346.55,238.9,376,266.9,376,302.001c0,10.702-2.759,20.919-8.02,29.983c-12.981-6.552-27.317-9.983-41.98-9.983 c-20.945,0-41.28,7.08-57.693,20H170.72c-19.057,0-36.194,10.59-44.726,27.641l-8.94,17.89c-1.549,3.1-1.383,6.78,0.439,9.728 c1.822,2.948,5.041,4.742,8.506,4.742h106.129l-6.667,20H86v-0.001c-16.542,0-30,13.458-30,30v50c0,5.522,4.477,10,10,10h380 c5.523,0,10-4.478,10-10v-50C456,435.641,442.834,422.306,426.542,422.015z M345.02,23.661l51.96,30l-10,17.319 c-11.567-6.678-38.465-22.209-51.96-30L345.02,23.661z M342.341,68.301l17.319,10l-10,17.32l-17.319-10L342.341,68.301z  M284.3,288.831l-86.6-50l10-17.32c9.192,5.307,65.786,37.983,77.937,44.999c0.001,0.001,0.002,0.001,0.004,0.002 c0.001,0,0.002,0.001,0.003,0.001l8.656,4.998L284.3,288.831z M286.979,244.19l-51.96-30L305.02,92.941 c20.351,11.75,32.291,18.644,38.899,22.459c-1.511-0.873-2.695-1.556-2.832-1.635c0.251,0.145,4.159,2.401,15.893,9.176 C346.645,140.843,295.739,229.017,286.979,244.19z M323.128,221.579l21.316-36.922C397.896,197.665,436,245.933,436,302.001 c0,27.143-8.963,52.862-25.498,73.886c-5.964-12.775-14.785-24.088-25.723-32.994C392.145,330.579,396,316.626,396,302.001 C396,259.896,363.912,225.233,323.128,221.579z M326,342.001c31.894,0,59.634,20.538,69.482,50.077l9.974,29.923H246.545 l9.972-29.918C266.574,361.917,294.789,342.001,326,342.001z M142.177,382.001c0.692-0.81,7.059-20.1,28.544-20.1h78.749 c-4.312,6.198-7.868,13.021-10.572,20.1H142.177z M436,492.001H76v-40c0-5.514,4.486-10,10-10c8.23,0,322.997,0,340,0 c5.515,0,10,4.486,10,10V492.001z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M345.137,116.103c0.604,0.349,1.158,0.668,1.658,0.957C346.244,116.742,345.683,116.418,345.137,116.103z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M345.071,116.065c0.022,0.013,0.044,0.025,0.066,0.038C345.114,116.09,345.093,116.078,345.071,116.065z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M343.919,115.4c0.032,0.019,0.065,0.037,0.097,0.056C343.984,115.437,343.951,115.418,343.919,115.4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M344.016,115.456c0.367,0.212,0.72,0.416,1.054,0.609C344.709,115.856,344.355,115.651,344.016,115.456z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M346.795,117.06c0.093,0.054,0.186,0.107,0.278,0.16C346.98,117.167,346.891,117.115,346.795,117.06z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M350.946,119.457c0.034,0.02,0.063,0.037,0.087,0.05C351.01,119.494,350.981,119.477,350.946,119.457z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M350.695,119.312c0.105,0.061,0.188,0.109,0.251,0.145C350.881,119.419,350.798,119.371,350.695,119.312z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M351.033,119.507C351.128,119.562,351.122,119.559,351.033,119.507L351.033,119.507z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M349.295,118.504c0.074,0.043,0.147,0.085,0.216,0.125C349.441,118.588,349.369,118.546,349.295,118.504z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M349.511,118.628c0.494,0.285,0.904,0.522,1.184,0.684C350.438,119.163,350.051,118.94,349.511,118.628z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M348.971,118.317c0.111,0.064,0.219,0.126,0.324,0.187C349.192,118.444,349.084,118.382,348.971,118.317z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M347.072,117.22c0.748,0.432,1.378,0.795,1.899,1.096C348.397,117.985,347.748,117.61,347.072,117.22z\"\n  }))))), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M366,382.001h-40c-5.523,0-10,4.478-10,10c0,5.522,4.477,10,10,10h40c5.523,0,10-4.478,10-10 C376,386.479,371.523,382.001,366,382.001z\"\n  })))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", null)), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", null)), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", null)), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", null)), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", null)), _g9 || (_g9 = /*#__PURE__*/React.createElement(\"g\", null)), _g10 || (_g10 = /*#__PURE__*/React.createElement(\"g\", null)), _g11 || (_g11 = /*#__PURE__*/React.createElement(\"g\", null)), _g12 || (_g12 = /*#__PURE__*/React.createElement(\"g\", null)), _g13 || (_g13 = /*#__PURE__*/React.createElement(\"g\", null)), _g14 || (_g14 = /*#__PURE__*/React.createElement(\"g\", null)), _g15 || (_g15 = /*#__PURE__*/React.createElement(\"g\", null)), _g16 || (_g16 = /*#__PURE__*/React.createElement(\"g\", null)), _g17 || (_g17 = /*#__PURE__*/React.createElement(\"g\", null)), _g18 || (_g18 = /*#__PURE__*/React.createElement(\"g\", null)));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMicroscope);\nexport default __webpack_public_path__ + \"static/media/microscope.dbfa1b8c.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgNotificationsWhite24Dp(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#FFFFFF\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0V0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-2 1H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNotificationsWhite24Dp);\nexport default __webpack_public_path__ + \"static/media/notifications_white_24dp.0754d6d9.svg\";\nexport { ForwardRef as ReactComponent };","export default __webpack_public_path__ + \"static/media/logo.253fbbb6.png\";","import React, { Fragment } from 'react';\nimport logo from '../../../Asset/Img/logo.png';\nimport { withRouter } from \"react-router-dom\";\nimport { Nav, NavItem, Dropdown, DropdownItem, DropdownToggle, DropdownMenu, NavLink } from 'reactstrap';\nimport { Col, Row } from 'reactstrap';\nimport { AuthService } from '../../';\nimport { EQUAL_ARRAY, ROLE } from '../../../Constances/const';\n\n\nclass AppHeader extends React.Component {\n    state = {\n        dropdownUserOpen: false,\n        dropdownMasterDataOpen: false,\n        dropdownInventoryOpen: false,\n    }\n\n    goTo(url = '') {\n        url = window.location.origin + '/' + url\n        window.location.replace(url)\n    }\n\n    toggleUser = () => {\n        this.setState({\n            dropdownUserOpen: !this.state.dropdownUserOpen,\n        })\n    }\n\n    toggleMasterData = () => {\n        this.setState({\n            dropdownMasterDataOpen: !this.state.dropdownMasterDataOpen,\n        })\n    }\n\n    toggleWareHouse = () => {\n        this.setState({\n            dropdownInventoryOpen: !this.state.dropdownInventoryOpen,\n        })\n    }\n\n    logout() {\n        AuthService.userInfo = null;\n        window.sessionStorage.clear();\n        window.location.replace('login');\n    }\n   \n    render() {\n        return (\n            <Nav pills>\n                <Row className=\"appHeaderContainer\" >\n                    <Col xs=\"1\">\n                        <NavItem className=\"mt-1\">\n                            <img src={logo} alt=\"img company\" style={{ width: 60 }, { height: 30 }}></img>\n                        </NavItem>\n                    </Col>\n                    \n                    { EQUAL_ARRAY(AuthService.userInfo.roles, [ROLE.ADMIN.value]) === true ?\n                        <Col sm=\"9\">\n                            <Row style={{ margin: '0px' }}>\n                                <NavItem className=\"pointer\">\n                                    <NavLink onClick={() => this.goTo('app/transaction/order')}>Thu Ngân</NavLink>\n                                </NavItem>\n                                <NavItem className=\"pointer\">\n                                    <NavLink onClick={() => this.goTo('app/reception')}>Lễ Tân</NavLink>\n                                </NavItem>\n                                <NavItem className=\"pointer\">\n                                    <NavLink onClick={() => this.goTo('app/doctor')}>Khám Bệnh</NavLink>\n                                </NavItem>\n                                <NavItem className=\"pointer\">\n                                    <NavLink onClick={() => this.goTo('app/exam')}>Xét Nghiệm</NavLink>\n                                </NavItem>\n                                <NavItem className=\"pointer\">\n                                    <NavLink onClick={() => this.goTo('app/xray')}>X-Quang</NavLink>\n                                </NavItem>\n                                <NavItem className=\"pointer\">\n                                    <NavLink onClick={() => this.goTo('app/endoscopic')}>Nội soi</NavLink>\n                                </NavItem>\n                                <NavItem className=\"pointer\">\n                                    <NavLink onClick={() => this.goTo('app/ultrasound')}>Siêu âm</NavLink>\n                                </NavItem>\n                                <NavItem className=\"pointer\">\n                                    <NavLink onClick={() => this.goTo('app/pharmacy')}>Nhà thuốc</NavLink>\n                                </NavItem>\n                                <NavItem className=\"pointer\">\n                                    <NavLink onClick={() => this.goTo('app/transaction/transaction')}>Giao dịch</NavLink>\n                                </NavItem>\n                                <Dropdown nav isOpen={this.state.dropdownInventoryOpen} toggle={this.toggleWareHouse}>\n                                    <DropdownToggle nav caret>Kho</DropdownToggle>\n                                    <DropdownMenu>\n                                        <DropdownItem onClick={() => this.goTo('app/inventory/lot')}>Nhập Lô</DropdownItem>\n                                        <DropdownItem onClick={() => this.goTo('app/inventory/transaction')}>Xuất Kho</DropdownItem>\n                                        <DropdownItem onClick={() => this.goTo('app/product')}>Thuốc</DropdownItem>\n                                        <DropdownItem onClick={() => this.goTo('app/product/part')}>Thành phần</DropdownItem>\n                                        <DropdownItem onClick={() => this.goTo('app/inventory/producer')}>Nhà Cung Cấp</DropdownItem>\n                                    </DropdownMenu>\n\n                                </Dropdown>\n                                <Dropdown nav isOpen={this.state.dropdownMasterDataOpen} toggle={this.toggleMasterData}>\n                                    <DropdownToggle nav caret>Quản lý</DropdownToggle>\n                                    <DropdownMenu>\n                                        <DropdownItem onClick={() => this.goTo('app/user')}>Nhân Viên</DropdownItem>\n                                        <DropdownItem onClick={() => this.goTo('app/location')}>Phòng Ban</DropdownItem>\n                                        <DropdownItem onClick={() => this.goTo('app/service')}>Dịch Vụ</DropdownItem>\n                                        <DropdownItem onClick={() => this.goTo('app/transaction/statistical')}>Thống kê bác sĩ</DropdownItem>\n                                    </DropdownMenu>\n                                </Dropdown>\n                            </Row>\n                        </Col>\n                         :  \n                        <Col sm={9}>\n                            <Row style={{ margin: '0px' }}>\n                            {AuthService.userInfo.roles.map(role => {\n                                if (role === ROLE.ACCOUNTER.value || role === ROLE.RECEPTIONIST.value) {\n                                    return (\n                                        <Fragment>\n                                            <NavItem className=\"pointer\">\n                                                <NavLink onClick={() => this.goTo('app/transaction/order')}>Thu Ngân</NavLink>         \n                                            </NavItem>\n                                            <NavItem className=\"pointer\">\n                                                <NavLink onClick={() => this.goTo('app/reception')}>Lễ Tân</NavLink>\n                                            </NavItem>\n                                            <NavItem className=\"pointer\">\n                                                <NavLink onClick={() => this.goTo('app/transaction/transaction')}>Giao dịch</NavLink>\n                                            </NavItem>\n                                        </Fragment>\n                                    )\n                                // } if (role === ROLE.RECEPTIONIST.value) {\n                                //     return (\n                                //        <NavItem className=\"pointer\">\n                                //             <NavLink onClick={() => this.goTo('app/reception')}>Lễ Tân</NavLink>\n                                //         </NavItem>\n                                //     )\n                                } if (role === ROLE.DOCTOR.value) {\n                                    return (\n                                        <Fragment>\n                                            <NavItem className=\"pointer\">\n                                                <NavLink onClick={() => this.goTo('app/doctor')}>Khám Bệnh</NavLink>\n                                            </NavItem>\n                                            <NavItem className=\"pointer\">\n                                                <NavLink onClick={() => this.goTo('app/transaction/statistical')}>Thống kê</NavLink>\n                                            </NavItem>\n                                        </Fragment>\n                                    )\n                                } if (role === ROLE.TEST_OPERATOR.value) {\n                                    return (\n                                        <NavItem className=\"pointer\">\n                                             <NavLink onClick={() => this.goTo('app/exam')}>Xét Nghiệm</NavLink>\n                                        </NavItem>\n                                    )\n                                } if (role === ROLE.XRAY.value) {\n                                    return (\n                                        <NavItem className=\"pointer\">\n                                            <NavLink onClick={() => this.goTo('app/xray')}>X-Quang</NavLink>\n                                        </NavItem>\n                                    )\n                                } if (role === ROLE.ENT.value) {\n                                    return (\n                                        <NavItem className=\"pointer\">\n                                            <NavLink onClick={() => this.goTo('app/endoscopic')}>Nội soi</NavLink>\n                                        </NavItem>\n                                    )\n                                } if (role === ROLE.ULTRASOUND.value) {\n                                    return (\n                                        <NavItem className=\"pointer\">\n                                            <NavLink onClick={() => this.goTo('app/ultrasound')}>Siêu âm</NavLink>\n                                        </NavItem>\n                                    )\n                                } if (role === ROLE.PHARMACIST.value) {\n                                    return (\n                                        <Fragment>\n                                            <NavItem className=\"pointer\">\n                                                <NavLink onClick={() => this.goTo('app/pharmacy')}>Nhà thuốc</NavLink>\n                                            </NavItem>\n                                            <NavItem className=\"pointer\">\n                                                <NavLink onClick={() => this.goTo('app/transaction/transaction')}>Giao dịch</NavLink>\n                                            </NavItem>\n                                            <Dropdown nav isOpen={this.state.dropdownInventoryOpen} toggle={this.toggleWareHouse}>\n                                                <DropdownToggle nav caret>Kho</DropdownToggle>\n                                                <DropdownMenu>       \n                                                    <DropdownItem onClick={() => this.goTo('app/inventory/lot')}>Nhập Lô</DropdownItem>\n                                                    <DropdownItem onClick={() => this.goTo('app/inventory/transaction')}>Xuất Kho</DropdownItem>\n                                                    <DropdownItem onClick={() => this.goTo('app/product')}>Thuốc</DropdownItem>\n                                                    <DropdownItem onClick={() => this.goTo('app/product/part')}>Thành phần</DropdownItem>\n                                                    <DropdownItem onClick={() => this.goTo('app/inventory/producer')}>Nhà Cung Cấp</DropdownItem>\n                                                </DropdownMenu>\n                                            </Dropdown>\n                                        </Fragment>\n                                    )\n                                }  if (role === ROLE.INVENTORY.value) {\n                                    return (\n                                        <Fragment>\n                                            <Dropdown nav isOpen={this.state.dropdownInventoryOpen} toggle={this.toggleWareHouse}>\n                                                <DropdownToggle nav caret>Kho</DropdownToggle>\n                                                <DropdownMenu>\n                                                    <DropdownItem onClick={() => this.goTo('app/inventory/producer')}>Nhà Cung Cấp</DropdownItem>\n                                                    <DropdownItem onClick={() => this.goTo('app/inventory/lot')}>Nhập Lô</DropdownItem>\n                                                    <DropdownItem onClick={() => this.goTo('app/inventory/transaction')}>Xuất Kho</DropdownItem>\n                                                    <DropdownItem onClick={() => this.goTo('app/product')}>Thuốc</DropdownItem>\n                                                    <DropdownItem onClick={() => this.goTo('app/product/part')}>Thành phần</DropdownItem>\n                                                </DropdownMenu>\n                                            </Dropdown>\n                                        </Fragment>\n                                    )\n                                }\n                            })}\n                            </Row>  \n                        </Col>   \n                    }\n                    <Col sm=\"2\">\n                        <Dropdown nav isOpen={this.state.dropdownUserOpen} toggle={this.toggleUser}>\n                            <DropdownToggle nav caret><span className=\"material-icons\">account_box</span> {AuthService.userInfo.full_name}</DropdownToggle>\n                            <DropdownMenu>\n                                {/* <DropdownItem onClick={() => this.goTo('app/user/' + AuthService.userInfo.id)}><span className=\"material-icons\">account_circle</span> Thông tin người dùng</DropdownItem> */}\n                                <DropdownItem onClick={() => this.goTo('app/user/setpassword/' + AuthService.userInfo.id)}><span className=\"material-icons\">lock</span> Đổi mật khẩu</DropdownItem>\n                                <DropdownItem divider />\n                                <DropdownItem onClick={() => this.logout()}><span className=\"material-icons\">exit_to_app</span> Đăng xuất</DropdownItem>\n                            </DropdownMenu>\n                        </Dropdown>\n                    </Col>\n                </Row>\n            </Nav>\n        );\n    }\n}\n\nexport default withRouter(AppHeader);","import { Http } from \"../../../Helper/Http\";\nimport { UtilService } from \"./\";\nimport { LOCALSTORAGE } from \"../../../Constances/const\";\nimport * as printJS from \"print-js\";\n\nconst API_ENDPOINT = {\n  BASE: \"/job\",\n  GET_LIST_LOCATION: \"/location/list\",\n  GET_CUS_BY_LOC: \"/step/list\",\n  GET_EXAM_BY_LOC: \"/location/service/list\",\n  GET_EXAM_INDEX_LIST_BY_SER_ID: \"/service/service/get\",\n  UPDATE_EXAM_RESULT: \"/step/finish\",\n  TAKE_SAMPLE: \"/step/update\",\n  GET_USER_BY_ID: \"/org/user?id=\"\n};\n\nclass Exam extends UtilService {\n  constructor() {\n    super();\n    if (Exam._instance) {\n      return Exam._instance;\n    }\n    Exam._instance = this;\n  }\n\n  userList = [];\n  selectedUser = -1;\n\n  get location() {\n    return JSON.parse(sessionStorage.getItem(LOCALSTORAGE.LOCATION) || '{}');\n  }\n\n  set location(data) {\n    sessionStorage.setItem(LOCALSTORAGE.LOCATION, JSON.stringify(data))\n  }\n\n  getUserById = (id) => {\n    return Http.post(API_ENDPOINT.GET_USER_BY_ID + id)\n  }\n\n  async getCustomerByLocationAndStatus(params) {\n    const url = `${API_ENDPOINT.BASE}${API_ENDPOINT.GET_CUS_BY_LOC}`;\n    return (await Http.get(url, params)).data;\n  }\n\n  async getExamByLocation(location_id) {\n    const url = `${API_ENDPOINT.GET_EXAM_BY_LOC}`;\n    return (await Http.get(url, location_id)).data;\n  }\n  printExamResult = (id) => {\n    printJS({\n      printable: id,\n      type: 'html',\n      header: null,\n      footer: null,\n    });\n  }\n  print = (id) => {\n    printJS({\n      printable: id,\n      type: 'html',\n      targetStyles: ['*'],\n      style: `@page {\n          size: A4;\n          margin: 0;\n                  },\n               @media print {\n                  .medPrintId{\n                    margin: 0;\n                    border: initial;\n                    border-radius: initial;\n                    width: initial;\n                    min-height: initial;\n                    box-shadow: initial;\n                    background: initial;\n                    page-break-after: always;\n                      \nh1 {\n  page-break-before: always;\n}\n\nh1, h2, h3, h4, h5 {\n  page-break-after: avoid;\n}\n\ntable, figure {\n  page-break-inside: avoid;\n}\n                  }`,\n      header: null,\n      footer: null,\n    });\n  };\n\n  async getExamIndexListByServiceID(id) {\n    const url = `${API_ENDPOINT.GET_EXAM_INDEX_LIST_BY_SER_ID}`;\n    return (await Http.get(url, id)).data;\n  }\n\n  async getListLocation() {\n    return (await Http.get(`${API_ENDPOINT.GET_LIST_LOCATION}`)).data;\n  }\n  async createSampleIdByRef(order_id) {\n    return (await Http.post(`/sample/create`, { order_id }))\n  }\n  async getResultsByStepId(id) {\n    let res = await Http.get(`/job/step/get`, { id })\n    return res\n  }\n  async updateExamResult(payload) {\n    return (await Http.post(`/job/step/finish`, payload))\n  }\n\n  finishExamResult(examResult) {\n    return Http.post(\n      `${API_ENDPOINT.BASE}${API_ENDPOINT.UPDATE_EXAM_RESULT}`,\n      examResult\n    );\n  }\n\n  takeSample = async (step) => {\n    const url = `${API_ENDPOINT.BASE}${API_ENDPOINT.TAKE_SAMPLE}`;\n    return await Http.post(url, step);\n  };\n}\n\nconst instance = new Exam();\n\nexport default instance;\n","import React from \"react\";\nimport Barcode from \"react-barcode\"\nexport default class PrintBarcode extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n    componentDidUpdate = (preProps) => {\n        let { TestId, cm_name } = this.props;\n        if (preProps.cm_name !== this.props.cm_name) {\n            const arr = cm_name.split(' ')\n            this.setState({ name: `${arr[arr.length - 1]}` })\n        }\n    }\n    render() {\n        let { TestId, cm_name } = this.props;\n        let nameDevice = this.props.nameDevice ? this.props.nameDevice : [];\n        return (\n            <div style={{ display: \"none\" }}>\n                <div id=\"barcodeCanvas\" style={{ fontSize: \"20px\" }}>\n                    {nameDevice.map((el, index) => {\n                        let marginTop = index==0?\"0px\":\"20px\";\n                        return (\n                            <div style={{ display: \"flex\", flexDirection: \"row\", minHeight: \"94px\", marginTop:marginTop }}>\n                                <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", textAlign: \"center\" }}>\n                                    <small>{this.state.name} {el}</small>\n                                    <Barcode fontSize=\"15px\" value={TestId[index]} height=\"35px\" />\n\n                                </div>\n                                <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", textAlign: \"center\" }}>\n                                    <small>{this.state.name} {el}</small>\n                                    <Barcode fontSize=\"15px\" value={TestId[index]} height=\"35px\" />\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { Table, Input } from \"reactstrap\";\nimport SharedService from '../../Services/SharedService';\nimport { STATUS, STEP_TYPE } from '../../../Constances/const'\nimport { Util } from '../../../Helper/Util'\nimport { Button } from \"bootstrap\";\nimport ExamService from '../../../Modules/Exam/Shared/ExamService'\nimport PrintBarcode from \"../../../Modules/Exam/Components/ExamResultPaper/CustomerFromPrint\"\nclass PatientList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedJob: -1,\n      patientList: [],\n      textFilter: '',\n      tabs: \"1\",\n      comboTest: [],\n      customerSearch: {},\n      queryCustomer: '',\n      showComboTest: false,\n      currentPatient: {}\n    }\n  }\n  interval = null;\n  setShowComboTest = (showComboTest) => {\n    this.setState({ showComboTest: true })\n  }\n\n  fetchPatientList = () => {\n    let { status, type, location_id, resultList, hasNoti } = this.props;\n    status = status.join(',');\n    SharedService.getListJobStep({ location_id, status }).then((res) => {\n      let cusList = res.data.filter(el => el.type === type).reverse()\n      for(let i=0;i<cusList.length;i++){\n        let cusList2 = cusList[i].order.items.filter(eb=>{\n          return eb.quantity != 0\n        })\n        if(cusList2.length==0){\n          cusList.splice(i,1)\n          i--\n        }\n      }\n      let queryCustomer = '';\n      if (hasNoti) {\n        cusList.map(c => {\n          if (c.status === STATUS.RUNNING) {\n            if (queryCustomer.length > 0) queryCustomer += ',' + c.order.customer_id;\n            else queryCustomer += c.order.customer_id;\n          }\n          resultList.forEach(r => {\n            if (r.customerId === c.job_ref_id) {\n              if (c.seen && !r.seen) c.seen = false\n              else c.seen = r.seen\n            }\n          })\n          return c;\n        });\n      }\n      this.setState({\n        patientList: cusList,\n        queryCustomer\n      });\n      if (hasNoti) this.getResult();\n    }).catch(err => {\n      console.log(err)\n    })\n  }\n\n  getResult = () => {\n    const customer_id = this.state.queryCustomer;\n    const date = new Date().toISOString().slice(0, 10);\n    const data = {\n      customer_id,\n      date\n    }\n    if (customer_id.length > 0) {\n      SharedService.getResult(data).then(res => {\n        let data = res.data;\n        let resultList = this.props.resultList;\n        data.forEach(d => {\n          if (resultList.length === 0) {\n            d.steps.forEach(s => {\n              if(s.type !== STEP_TYPE.EXAM && s.type !== STEP_TYPE.BUY && s.status === STATUS.DONE){\n                let obj = {\n                  jobId: s.job_id,\n                  customerId: s.job_ref_id,\n                  orderId: s.order_id,\n                  seen: false\n                }\n                resultList.push(obj)\n              }\n            })\n          } else {\n            if(d.steps[0]?.type === STEP_TYPE.EXAM) {\n              d.steps.forEach(s => {\n                if(s.type !== STEP_TYPE.EXAM && s.type !== STEP_TYPE.BUY  && s.status === STATUS.DONE){\n                  let count = 0;\n                  resultList.map(r => {\n                    if (s.order_id === r.orderId) count++\n                  })\n                  if (count === 0) {\n                    let obj = {\n                      jobId: s.job_id,\n                      customerId: s.job_ref_id,\n                      orderId: s.order_id,\n                      seen: false\n                    }\n                    resultList.push(obj)\n                  }\n                }\n              })\n            } \n          }\n        })\n        this.countResult();\n      })\n    }\n  }\n  \n  countResult = () => {\n    let { patientList } = this.state\n    let resultList = this.props.resultList;\n    let uniqueJobId = [];\n    resultList.map(r => {\n      patientList.map(p => {\n        if (r.customerId === p.job_ref_id) {\n          if (p.seen && !r.seen) p.seen = false\n          else p.seen = r.seen\n        }\n        return p;\n      })\n    });\n\n    this.setState({ patientList })\n    uniqueJobId = resultList.filter(r => {\n      return uniqueJobId.includes(r.jobId) ? null : uniqueJobId.push(r.jobId);\n    });\n    this.props.setNotiQuantity(uniqueJobId.length)\n  }\n\n  onSelectJobStep = (jobStep) => {\n    if (Object.entries(this.state.currentPatient).length > 0 && jobStep.id == this.state.currentPatient.id) {\n      this.setState({ \n        currentPatient: {} \n      })\n      this.props.onSelectJobStep({});\n    } else {\n      this.setState({ currentPatient: jobStep })\n      this.props.onSelectJobStep(jobStep);\n    }\n    if (jobStep) {\n      let comboTest = jobStep.order.items.map(e => {\n        if (e.quantity == 0) {\n          return undefined\n        } else {\n          return e.ref_value.name\n        }\n      }).filter(e => e != undefined)\n      this.setState({ comboTest: comboTest })\n    }\n    this.setState({\n      selectedJob: jobStep.id,\n      textFilter: \"\",\n      tabs: \"1\",\n    });\n    if(this.props.hiddenPatientList) this.props.hiddenPatientList();\n  }\n\n  componentDidMount() {\n    this.props.action.refresh = this.fetchPatientList;\n    this.fetchPatientList();\n    \n    this.interval = setInterval(() => {\n      this.fetchPatientList();\n    }, 30000);\n  }\n  \n  makeNewTestId = () => {\n    if (this.props.ref_id) {\n      ExamService.getIdByRef(this.props.ref_id).then(res => {\n        let TestId = res.data.id\n        this.setState({ TestId: TestId })\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval)\n  }\n\n  onFilterChange = (ev) => {\n    this.setState({\n      textFilter: ev.target.value\n    })\n\n  }\n\n  sortByName = (a, b) => {\n    let nameA = a.toUpperCase();\n    let nameB = b.toUpperCase();\n    if (nameA < nameB) return -1;\n    if (nameA > nameB) return 1;\n    return 0;\n  }\n\n  onSelectBarcode(e){\n    const {examEditState, examEditSetState} = this.props;\n    let {TestId, resultsExam, nameDevice} = examEditState;\n    let {sample_id, device} = resultsExam[e.target.value];\n    console.log(\"onSelectBarcode\",TestId,sample_id )\n    if(examEditState.activeTab===\"3\"){\n      if(e.target.checked){\n        TestId.push(sample_id);\n        nameDevice.push(device);\n      }\n      else{\n        TestId.splice(TestId.indexOf(sample_id),1)\n        nameDevice.splice(nameDevice.indexOf(device));\n      }\n      console.log(TestId,\"onSelectBarcode\")\n      examEditSetState({\n        TestId: TestId,\n        nameDevice: nameDevice\n      })\n    }\n  }\n\n  render() {\n    let { patientList, tabs, textFilter, customerSearch, comboTest } = this.state;\n    let { mode, examEditState, checkSelectBarcode } = this.props;\n    let cusArr = customerSearch ? customerSearch.steps ? customerSearch.steps : [] : [];\n    let modeList = patientList.sort((a, b) => this.sortByName(b.status, a.status))\n      .filter(p => p.order.customer.code.search(textFilter) >= 0)\n      .map((p, index) => {\n        return (\n          <tr onClick={(e) => this.onSelectJobStep(p)} className={`pointer ${(this.state.selectedJob == p.id )&& examEditState &&examEditState.resultsExam.length? ' active ' : ''}\n          ${p.seen === false ? 'notiResult': ''}`} // không sửa\n          key={p.id} >\n            <td className=\"dw-10\">\n              {index + 1}\n            </td>\n            <td>{p.order.customer.code}</td>\n            <td className=\"dw-60\">\n              <div>\n                {p.order.customer.full_name}\n              </div>\n            </td>\n            <td>{p.order.customer.gender == \"male\" ? \"nam\" : \"nữ\"}</td>\n            <td>{new Date(p.order.customer.birthday).toLocaleString('en-GB').slice(0, 10)}</td>\n            <td>{p.order.customer.contacts[0].address.province}\n            </td>\n            <td>{p.status === STATUS.RUNNING ? p.seen === false || p.seen ? \"ĐÃ CÓ KẾT QUẢ\" : \"ĐANG XÉT NGHIỆM\" : \"CHỜ KHÁM\"}</td>\n          </tr>\n        );\n      })\n    return (\n      <div className=\"patientList \">\n        <div className=\"title-card mb-5\"><span className=\"material-icons\">people</span> {this.props.titleOfList}</div>\n        <div className=\"patientList-search mb-3\">\n          <Input\n             maxLength=\"12\"\n            autoFocus\n            style={{ 'fontFamily': 'Arial, Material Icons' }}\n            type=\"text\"\n            placeholder=\"&#xe8b6; Lọc theo mã...\"\n            value={textFilter}\n            onChange={(ev) => this.onFilterChange(ev)}></Input>\n        </div>\n        <div className=\"tableFixHead\">\n          {mode === \"doctor\" && (\n            <div className=\"table-responsive min-h-60 df-h-90\">\n              <table className=\"table table-head-fixed table-bordered\"\n                onKeyDown={(e) => Util.onKeyDown(e)}\n                data-index=\"1\">\n                <thead>\n                  <tr>\n                    <th className=\"dw-5\">STT</th>\n                    <th className=\"dw-15\">Mã bệnh nhân</th>\n                    <th className=\"dw-60\">Bệnh nhân</th>\n                    <th>Giới tính</th>\n                    <th>Ngày sinh</th>\n                    <th>Địa chỉ</th>\n                    <th>Trạng thái</th>\n                  </tr>\n\n                </thead>\n                <tbody className=\"body-half-screen\">\n                  {modeList}\n                </tbody>\n              </table>\n            </div>\n          )}\n          {mode === \"exam\" && (\n            <div className=\"table-responsive min-h-60 df-h-61\">\n              <table className=\"table table-head-fixed table-bordered\">\n                <thead>\n                  <tr>\n                    <th className=\"dw-3\">STT</th>\n                    <th>Mã bệnh nhân</th>\n                    <th className=\"dw-40\">Bệnh nhân</th>\n                    <th>Tên Xét nghiêm</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bodyTable\">\n                  {patientList ? (\n                    patientList.filter(p => p.order.customer.code.search(textFilter) >= 0).map((p, index) => {\n                      return (\n                        <>\n                          <tr onClick={(e)=>this.onSelectJobStep(p)} className={`pointer${(p.id == this.state.currentPatient.id)&&examEditState.resultsExam.length ? ' active' : ''}`} key={p.id} >\n                            <td className=\"dw-3\">\n                              {index + 1}\n                            </td>\n                            <td>{p.order.customer.code}</td>\n                            <td className=\"dw-40\">\n                              <div>\n                                {p.order.customer.full_name}\n                              </div>\n                            </td>\n                            <td className=\"status-cus\">\n                              <p title={comboTest}\n                              >ComBo xét nghiệm</p>\n                            </td>\n                          </tr>\n                          {examEditState.resultsExam.length?examEditState.resultsExam.map((item, index1) => {\n                            return (\n                              <tr className={p.id == this.state.currentPatient.id ? \"active\" : \"inactive\"}>\n                                <td colSpan='1'>{index + 1}.{index1 + 1}</td>\n                                {checkSelectBarcode?<td colSpan=\"2\">{item.device}</td>:<td colSpan=\"3\">{item.device}</td>}\n                                {checkSelectBarcode?<td colSpan='1'><input onChange={(e)=>this.onSelectBarcode(e)} name={item.device} value={index1} type=\"checkbox\"/></td>:''}\n                              </tr>\n                            )\n                          }):''}\n                        </>\n                      );\n                    })\n\n                  ) : (\n                    <span></span>\n                  )}\n\n                </tbody>\n              </table>\n\n            </div>)}\n          {mode === \"examDone\" && (\n            <div className=\"table-responsive min-h-60 df-h-61\">\n              <table className=\"table table-head-fixed table-bordered\">\n                <thead>\n                  <tr>\n                    <th className=\"dw-3\">STT</th>\n                    <th>Mã bệnh nhân</th>\n                    <th className=\"dw-40\">Bệnh nhân</th>\n                    <th>Tên Xét nghiêm</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bodyTable\">\n                  {patientList ? (\n                    patientList.filter(p => p.order.customer.code.search(textFilter) >= 0).map((p, index) => {\n                      return (\n                        <>\n                          <tr onClick={(e) => this.onSelectJobStep(p)} className={`pointer${(this.state.selectedJob == p.id)&&examEditState.resultsExam.length ? ' active' : ''}`} key={p.id} >\n                            <td className=\"dw-3\">\n                              {index + 1}\n                            </td>\n                            <td>{p.order.customer.code}</td>\n                            <td className=\"dw-40\">\n                              <div>\n                                {p.order.customer.full_name}\n                              </div>\n                            </td>\n                            <td className=\"status-cus\">\n                              <p title={comboTest}\n                              >ComBo xét nghiệm</p>\n                            </td>\n                          </tr>\n                          {comboTest && comboTest.map((item, index1) => {\n                            return (\n                              <tr className={p.id == this.state.currentPatient.id ? \"active\" : \"inactive\"}>\n                                <td colSpan='1'>{index + 1}.{index1 + 1}</td>\n                                <td colSpan=\"3\">{item}</td>\n                              </tr>\n                            )\n                          })}\n                        </>\n                      );\n                    })\n\n                  ) : (\n                    <span></span>\n                  )}\n\n                </tbody>\n              </table>\n\n            </div>)}\n\n          {mode === \"other\" && (\n            <div className=\"table-responsive min-h-60 df-h-60\">\n              <table className=\"table table-head-fixed table-bordered\">\n                <thead>\n                  <tr>\n                    <th className=\"dw-10\">STT</th>\n                    <td>Mã bệnh nhân</td>\n                    <th>Bệnh nhân</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bodyTable\">\n                  {patientList ? (\n                    patientList.filter(p => p.order.customer.code.search(textFilter) >= 0).map((p, index) => {\n                      return (\n                        <tr onClick={(e) => this.onSelectJobStep(p)} className={`pointer${(this.state.selectedJob == p.id)}`} key={p.id} >\n                          <td className=\"dw-10\">\n                            {index + 1}\n                          </td>\n                          <td>{p.order.customer.code}</td>\n                          <td className=\"dw-40\">\n                            <div >\n                              {p.order.customer.full_name}\n                            </div>\n                          </td>\n                        </tr>\n                      );\n                    })\n                  ) : (\n                    <span></span>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PatientList;\n","import React, { useEffect, useState } from 'react';\nimport { Table, Input } from \"reactstrap\";\nconst BS200E = (props) => {\n    const { result, device } = props;\n    const {activeTab} = props.examEditState;\n    useEffect(() => {\n    }, [result])\n    if (Object.entries(result).length > 0 && device == 'BS-200E') {\n        return (\n            <div className=\"patientResult customCard \">\n                <div className=\"table-responsive min-h-80 df-h-58\">\n                    {\n                        activeTab === '1'?\n                            <div className=\"text-left\">\n                                {Object.keys(result).map(key => (\n                                    (key == 'device' || key == 'sample_id' || key=='ctime') ? <></> :\n                                        <table className=\"table table-head-fixed table-bordered\">\n                                            <thead>\n                                                <tr>\n                                                    <th>{key}</th>\n                                                </tr>\n                                            </thead>\n                                        </table>\n                                ))}\n                            </div>\n                            :\n                            <div className=\"text-left\">\n                                <table className=\"table table-head-fixed table-bordered\">\n                                    <thead>\n                                        <tr>\n                                            <th colspan=\"5\">Tên máy XN : {device}</th>\n                                        </tr>\n                                        <tr>\n                                            <th className=\"dw-3\"> STT </th>\n                                            <th className=\"dw-30\"> Tên Xét Nghiệm </th>\n                                            <th className=\"dw-14\"> Kết quả </th>\n                                            <th className=\"dw-24\">Chỉ số bình thường</th>\n                                            <th className=\"dw-16\"> Đơn vị </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"bodyTable\">\n                                        {Object.entries(result).map((key, index) => {\n                                            return (key[0] == 'ctime' || key[0] == 'device' || key[0] == 'sample_id' || key[0] == 'name') ? <></> : <tr >\n                                                <td>{index - 1}</td>\n                                                <td>{key[0]}</td>\n                                                <td\n                                                 style={{\n                                                    color: key[1].value > key[1].range[1]\n                                                      ? 'red'\n                                                      : key[1].value < key[1].range[0]\n                                                        ? 'blue'\n                                                          : '#333',\n                                                  }}\n                                                >{key[1].value}</td>\n                                                <td>{((key[1].range[0]) ==null &&(key[1].range[1])==  null) ? '' :  ((key[1].range[0] + '-' + key[1].range[1])) }</td>\n                                                <td>{key[1].unit}</td>\n                                            </tr>\n                                        })}\n\n                                    </tbody>\n                                </table>\n                            </div>\n                    }\n                </div>\n            </div >\n        )\n    }\n}\nexport default BS200E;","import React, { useEffect, useState } from 'react';\nimport { Table, Input } from \"reactstrap\";\nconst BS200E = (props) => {\n    const { result, device } = props;\n    const {activeTab} = props.examEditState;\n    useEffect(() => {\n    }, [result])\n    if (Object.entries(result).length > 0 && device == 'BC-2800') {\n        return (\n            <div className=\"patientResult customCard \">\n                <div className=\"table-responsive min-h-80 df-h-58\">\n                    {\n                        activeTab === '1' ?\n                            <div className=\"text-left\">\n                                {Object.keys(result).map(key => (\n                                    (key == 'device' || key == 'sample_id'|| key == 'ctime') ? <></> :\n                                        <table className=\"table table-head-fixed table-bordered\">\n                                            <thead>\n                                                <tr>\n                                                    <th>{key}</th>\n                                                </tr>\n                                            </thead>\n                                        </table>\n                                ))}\n                            </div>\n                            :\n                            <div className=\"text-left\">\n                                <table className=\"table table-head-fixed table-bordered\">\n                                    <thead>\n                                        <tr>\n                                            <th colspan=\"5\">Tên máy XN : {device}</th>\n                                        </tr>\n                                        <tr>\n                                            <th className=\"dw-3\"> STT </th>\n                                            <th className=\"dw-30\"> Tên Xét Nghiệm </th>\n                                            <th className=\"dw-14\"> Kết quả </th>\n                                            <th className=\"dw-24\">Chỉ số bình thường</th>\n                                            <th className=\"dw-16\"> Đơn vị </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"bodyTable\">\n                                        {Object.entries(result).map((key, index) => {\n                                            return (key[0] == 'ctime' || key[1].value == '' || key[0] == 'device' || key[0] == 'sample_id' || key[0] == 'name') ? <></> : <tr >\n                                                <td>{index - 1}</td>\n                                                <td>{key[0]}</td>\n                                                <td\n                                                 style={{\n                                                    color: key[1].value > key[1].range[1]\n                                                      ? 'red'\n                                                      : key[1].value < key[1].range[0]\n                                                        ? 'blue'\n                                                          : '#333',\n                                                  }}\n                                                >{key[1].value}</td>\n                                                <td>{((key[1].range[0]) ==null &&(key[1].range[1])==  null) ? '' :  ((key[1].range[0] + '-' + key[1].range[1])) }</td>\n                                                <td>{key[1].unit}</td>\n                                            </tr>\n                                        })}\n\n                                    </tbody>\n                                </table>\n                            </div>\n                    }\n                </div>\n            </div >\n        )\n    }\n}\nexport default BS200E;","import React, { useEffect, useState } from 'react';\nimport { Table, Input } from \"reactstrap\";\nconst UA66 = (props) => {\n    const { result, device } = props;\n    const { activeTab } = props.examEditState;\n    useEffect(() => {\n    }, [result])\n    return (\n        <>\n            {Object.entries(result).length > 0 && device == 'UA-66' &&\n                <div className=\"patientResult customCard \">\n                    <div className=\"table-responsive min-h-80 df-h-58\">\n                        {\n                            activeTab === '1' ?\n                                <div className='text-left'>\n                                    <table className=\"table table-head-fixed table-bordered\">\n                                        <thead>\n                                            <tr>\n                                                <th>Tổng phân tích nước tiểu</th>\n                                            </tr>\n                                        </thead>\n                                    </table>\n                                </div>\n                                :\n                                <div className=\"text-left\">\n                                    <table className=\"table table-head-fixed table-bordered\">\n                                        <thead>\n                                            {/* <tr>\n                                                <th colspan=\"4\">Tên máy XN : {device}</th>\n                                            </tr> */}\n                                            <tr>\n                                                <th className=\"dw-3\"> STT </th>\n                                                <th className=\"dw-30\"> Tên Xét Nghiệm </th>\n                                                <th className=\"dw-14\"> Kết quả </th>\n                                                <th className=\"dw-24\">Chỉ số bình thường</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody className=\"bodyTable\">\n                                            {Object.entries(result).map((key, index) => {\n                                                return (\n                                                    key[0] == 'ctime' || key[1].value == '' || key[0] == 'device' || key[0] == 'sample_id' || key[0] == 'name') ? <></> : <tr >\n                                                    <td>{index}</td>\n                                                    <td>{key[0]}</td>\n                                                    <td\n                                                        style={{\n                                                            color: ((key[0] === 'URO' && key[1].value != 'norm.') || (key[0] === 'SG' && key[1].value > key[1].range[1]) || (key[0] === 'pH' && key[1].value > key[1].range[1]) || key[1].value === '+' || key[1].value === '2+' || key[1].value === '3+'|| key[1].value === '4+')\n                                                                ? 'red'\n                                                                : (key[0] === 'SG' && key[1].value < key[1].range[0]) || (key[0] === 'pH' && key[1].value < key[1].range[0])\n                                                                    ? 'blue'\n                                                                    : '#333',\n                                                        }}\n                                                    >{key[1].value}</td>\n                                                    <td>{((key[1].range[0]) === 'Negative') ? (key[1].range[0]) : ((key[1].range[0]) === 'Normal') ? (key[1].range[0]) : (key[1].range[0] + '-' + key[1].range[1])} </td>\n                                                </tr>\n                                            })}\n\n                                        </tbody>\n                                    </table>\n                                </div>\n                        }\n                    </div>\n                </div >\n\n            }\n        </>\n    )\n}\nexport default UA66;","import React, { useEffect, useState } from 'react';\nimport { Table, Input } from \"reactstrap\";\nconst Test = (props) => {\n    const { result, device } = props;\n    const { activeTab } = props.examEditState;\n    useEffect(() => {\n    }, [result])\n    if (Object.entries(result).length > 0 && device == 'Test') {\n        return (\n            <div className=\"patientResult customCard \">\n                <div className=\"table-responsive min-h-80 df-h-58\">\n                    {\n                        activeTab === '1' ?\n                            <div className=\"text-left\">\n                                {Object.keys(result).map(key => (\n                                    (key == 'device' || key == 'sample_id') ? <></> :\n                                        <table className=\"table table-head-fixed table-bordered\">\n                                            <thead>\n                                                <tr>\n                                                    <th>{key}</th>\n                                                </tr>\n                                            </thead>\n                                        </table>\n                                ))}\n                            </div> :\n                            <div className=\"text-left\">\n                                <table className=\"table table-head-fixed table-bordered\">\n                                    <thead>\n                                        <tr>\n                                            <th className=\"dw-3\"> STT </th>\n                                            <th className=\"dw-30\"> Tên Xét Nghiệm </th>\n                                            <th className=\"dw-14\"> Kết quả </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"bodyTable\">\n                                        {Object.entries(result).map((key, index) => {\n                                            return (key[0] == 'ctime' || key[0] == 'device' || key[0] == 'sample_id') ? <></> : <tr >\n                                                <td>{index}</td>\n                                                <td>{key[0]}</td>\n                                                <td>  <Input\n                                                    value={key[1].value}\n                                                    placeholder=\"nhập kết quả XN\"\n                                                    onChange={e => props.setValueService(e, key[0], \"Test\")}\n                                                ></Input>\n                                                </td>\n                                            </tr>\n                                        })}\n\n                                    </tbody>\n                                </table>\n                            </div>\n                    }\n                </div>\n            </div >\n        )\n    }\n}\nexport default Test;","import React, { useEffect, useState } from 'react';\nimport { Table, Input } from \"reactstrap\";\nimport { OTHER_DATA } from \"../../../../Constances/const\"\nimport { Barcode } from \"react-barcode\"\nconst Other = (props) => {\n    const { resultIndex, device} = props;\n    useEffect(() => {\n        let resultsExam = props.examEditState.resultsExam;\n        Object.keys(props.examEditState.resultsExam[resultIndex]).forEach(key => {\n            if (key !== \"device\" && key !== 'sample_id' && !resultsExam[resultIndex][key]) {\n                 resultsExam[resultIndex][key] = OTHER_DATA[key]\n            }\n        });\n        props.examEditSetState({\n            resultsExam: resultsExam\n        })\n    }, [])\n\n    const handleInputChange = (patientKey, key, e) => {\n        let resultsExam = props.examEditState.resultsExam;\n        resultsExam[resultIndex][patientKey][key] = e.target.value;\n        props.examEditSetState({\n            resultsExam: resultsExam\n        })\n    }\n\n    const handleTriInputChange = (patientKey, key, k, e) => {\n        let resultsExam = props.examEditState.resultsExam;\n        resultsExam[resultIndex][patientKey][key][k] = e.target.value;\n        props.examEditSetState({\n            resultsExam: resultsExam\n        })\n    }\n\n    const { resultsExam, activeTab } = props.examEditState;\n    return (\n        <div>\n            {device == 'Other' &&\n                Object.keys(resultsExam[resultIndex]).map(parentKey => (\n                    (parentKey !== \"device\" && parentKey !== 'sample_id' && parentKey !== 'ctime') ?\n                        <div>\n                            {activeTab === '1' ?\n                                <table className=\"table table-head-fixed table-bordered\">\n                                    <thead>\n                                        <tr>\n                                            <th className=\"dw-14\"> {parentKey} </th>\n                                        </tr>\n                                    </thead>\n                                </table>\n                                :\n                                <div className=\"patientResult customCard \">\n                                    <div className=\"table-responsive \">\n                                        <div className=\"text-left\">\n                                            <table className=\"table table-head-fixed table-bordered\">\n                                                <thead>\n                                                    <tr>\n                                                        <th className=\"dw-14\" colSpan={2} style={{maxWidth:\"15vh\"}}> {parentKey} </th>\n                                                        <th className=\"dw-30\"> Kết quả </th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody className=\"bodyTable\">\n                                                    {\n                                                        resultsExam[resultIndex][parentKey] ? Object.keys(resultsExam[resultIndex][parentKey]).map((key) => (\n                                                            typeof resultsExam[resultIndex][parentKey][key] === \"object\" ?\n                                                                <>\n                                                                    <tr >\n                                                                        <td rowSpan={Object.keys(resultsExam[resultIndex][parentKey][key]).length + 1}>{key}</td>\n                                                                    </tr>\n                                                                    {Object.keys(resultsExam[resultIndex][parentKey][key]).map(k => (\n                                                                        <tr>\n                                                                            <td>{k}</td>\n                                                                            <td>\n                                                                                <Input\n                                                                                    value={resultsExam[resultIndex][parentKey][key][k] ? resultsExam[resultIndex][parentKey][key][k] : ''}\n                                                                                    onChange={(e) => handleTriInputChange(parentKey, key, k, e)}\n                                                                                />\n                                                                            </td>\n                                                                        </tr>\n                                                                    ))}\n                                                                </> :\n                                                                <tr >\n                                                                    <td colSpan={2}>{key}</td>\n                                                                    <td>\n                                                                        <Input\n                                                                            value={resultsExam[resultIndex][parentKey][key] ? resultsExam[resultIndex][parentKey][key] : ''}\n                                                                            onChange={(e) => handleInputChange(parentKey, key, e)}\n                                                                        />\n                                                                    </td>\n                                                                </tr>\n                                                        )) : \"\"\n                                                    }\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </div >\n                            }\n                        </div>\n                        : \"\"\n                ))}\n        </div>\n    )\n}\nexport default Other;","import React, { useEffect, useState } from 'react';\nimport { Table, Input } from \"reactstrap\";\nconst IMMUNE = (props) => {\n    const { result, device } = props;\n    const {activeTab} = props.examEditState;\n    useEffect(() => {\n    }, [result])\n    if (Object.entries(result).length > 0 && device == 'Immune') {\n        return (\n            <div className=\"patientResult customCard \">\n                <div className=\"table-responsive min-h-80 df-h-58\">\n                    {\n                        activeTab === '1'?\n                            <div className=\"text-left\">\n                                {Object.keys(result).map(key => (\n                                    (key == 'device' || key == 'sample_id' || key=='ctime') ? <></> :\n                                        <table className=\"table table-head-fixed table-bordered\">\n                                            <thead>\n                                                <tr>\n                                                    <th>{key}</th>\n                                                </tr>\n                                            </thead>\n                                        </table>\n                                ))}\n                            </div>\n                            :\n                            <div className=\"text-left\">\n                                <table className=\"table table-head-fixed table-bordered\">\n                                    <thead>\n                                        <tr>\n                                            <th colspan=\"5\">Tên máy XN : {device}</th>\n                                        </tr>\n                                        <tr>\n                                            <th className=\"dw-3\"> STT </th>\n                                            <th className=\"dw-30\"> Tên Xét Nghiệm </th>\n                                            <th className=\"dw-14\"> Kết quả </th>\n                                            <th className=\"dw-24\">Chỉ số bình thường</th>\n                                            <th className=\"dw-16\"> Đơn vị </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"bodyTable\">\n                                        {Object.entries(result).map((key, index) => {\n                                            return (key[0] == 'ctime' || key[0] == 'device' || key[0] == 'sample_id' || key[0] == 'name') ? <></> : <tr >\n                                                <td>{index - 1}</td>\n                                                <td>{key[0]}</td>\n                                                <td\n                                                 style={{\n                                                    color: key[1].value > key[1].range[1]\n                                                      ? 'red'\n                                                      : key[1].value < key[1].range[0]\n                                                        ? 'blue'\n                                                          : '#333',\n                                                  }}\n                                                >{key[1].value}</td>\n                                                <td>{((key[1].range[0]) ==null &&(key[1].range[1])==  null) ? '' :  ((key[1].range[0] + '-' + key[1].range[1])) }</td>\n                                                <td>{key[1].unit}</td>\n                                            </tr>\n                                        })}\n\n                                    </tbody>\n                                </table>\n                            </div>\n                    }\n                </div>\n            </div >\n        )\n    }\n}\nexport default IMMUNE;","import React, { useEffect, useState } from 'react';\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\nimport classnames from 'classnames';\nimport BS200E from '../ExamResult/BS200E'\nimport BC2800 from '../ExamResult/BC2800'\nimport UA66 from '../ExamResult/UA66'\nimport Test from '../ExamResult/Test'\nimport Other from './Other';\nimport IMMUNE from './IMMUNE';\nconst ExamResult = (props) => {\n  const { resultsExam, nameDeviceObj, devices = [], setDeviceValue } = props;\n  const [deviceBC2800, setDeviceBC2800] = useState();\n  const [deviceIMMUNE, setDeviceIMMUNE] = useState();\n  const [activeTab, setActiveTab] = useState(0);\n  useEffect(() => {\n    devices.forEach(element => {\n      if (element.name == 'BC-2800') {\n        setDeviceBC2800(element)\n      } else if (element.name == 'Immune') {\n        setDeviceIMMUNE(element)\n      }\n    });\n\n  }, [devices]);\n\n  const selectExamResultTab = (index)=>{\n    setActiveTab(index)\n  }\n  const examResultsCard = () => {\n    return (\n      <>\n        <Nav tabs className=\"selectTabs\">\n          {\n            resultsExam.map((e, index) => (\n              <NavItem className=\"titleTabs\">\n                <NavLink className={classnames({ active: activeTab === index })} onClick={() => { selectExamResultTab(index); }}>\n                  <b className=\"title-card\">{e.device}</b>\n                </NavLink>\n              </NavItem>\n            ))\n          }\n\n        </Nav>\n        <TabContent activeTab={activeTab}>\n          {\n            resultsExam.map((e, index) => (\n              <TabPane tabId={index} className=\"customCard\">\n                <div className=\"text-left\">\n                  {e.device == \"Test\" && <Test setValueService={props.setValueService} examEditState={props.examEditState} device={e.device} result={e} />}\n                  {e.device == \"BS-200E\" && e.device == nameDeviceObj.BS200E && <BS200E examEditState={props.examEditState} device={e.device} result={e} />}\n                  {e.device == \"BC-2800\" && e.device == nameDeviceObj.BC2800 && <BC2800 examEditState={props.examEditState} deviceBC2800={deviceBC2800} setDeviceValue={setDeviceValue} device={e.device} result={e} />}\n                  {e.device == \"Immune\" && e.device == nameDeviceObj.IMMUNE && <IMMUNE examEditState={props.examEditState} deviceIMMUNE={deviceIMMUNE} setDeviceValue={setDeviceValue} device={e.device} result={e} />}\n                  {e.device == \"UA-66\" && e.device == nameDeviceObj.UA66 && <UA66 examEditState={props.examEditState} device={e.device} result={e} />}\n                  {e.device == \"Other\" && e.device == nameDeviceObj.Other && <Other device={e.device} resultIndex={index} examEditSetState={(data) => props.examEditSetState(data)} examEditState={props.examEditState} />}\n                </div>\n              </TabPane>\n            ))\n          }\n        </TabContent>\n      </>\n    )\n  }\n\n  if (resultsExam.length > 0) {\n    return examResultsCard();\n  } else {\n    return (\n      <></>\n    )\n  }\n}\nexport default ExamResult;","import React, { useEffect, useState } from 'react';\nimport { Table, Input } from \"reactstrap\";\nconst UA66 = (props) => {\n    const { result, device } = props;\n    useEffect(() => {\n    }, [result])\n    return (\n        <>\n            {Object.entries(result).length > 0 && device == 'UA-66' &&\n                <div className=\"patientResult  \">\n                    <div>\n                        <div className=\"text-left\" style={{padding:'10px'}}>\n                            <table className=\"table table-head-fixed table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th colSpan={5}>Xét nghiệm nước tiểu</th>\n                                    </tr>\n                                    <tr>\n                                        <th className=\"dw-3\"> STT </th>\n                                        <th className=\"dw-30\"> Tên Xét Nghiệm </th>\n                                        <th className=\"dw-14\"> Kết quả </th>\n                                        <th className=\"dw-24\">Chỉ số bình thường</th>\n                                        <th className=\"dw-16\"> Ghi chú </th>\n                                    </tr>\n                                </thead>\n                                <tbody className=\"bodyTable\">\n                                    {Object.entries(result).map((key, index) => {\n                                        return (\n                                            key[0] == 'ctime' || key[1].value == '' || key[0] == 'device' || key[0] == 'sample_id' || key[0] == 'name') ? <></> : <tr >\n                                                    <td className='examPrint'>{index}</td>\n                                                    <td className='examPrint'>{key[0]}</td>\n                                                    <td className='examPrint'\n                                                        style={{\n                                                            color: ((key[0] === 'URO' && key[1].value != 'norm.') || (key[0] === 'SG' && key[1].value > key[1].range[1]) || (key[0] === 'pH' && key[1].value > key[1].range[1]) || key[1].value === '+' || key[1].value === '2+' || key[1].value === '3+'|| key[1].value === '4+')\n                                                                ? 'red'\n                                                                : (key[0] === 'SG' && key[1].value < key[1].range[0]) || (key[0] === 'pH' && key[1].value < key[1].range[0])\n                                                                    ? 'blue'\n                                                                    : '#333',\n                                                        }}\n                                                    >{key[1].value}</td>\n                                                    <td className='examPrint'>{((key[1].range[0]) === 'Negative') ? (key[1].range[0]) : ((key[1].range[0]) === 'Normal') ? (key[1].range[0]) : (key[1].range[0] + '-' + key[1].range[1])} </td>\n                                                    <td className='examPrint'></td>\n                                                </tr>\n                                            })}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div >\n        \n    }\n        </>\n    )\n}\nexport default UA66;","import React, { useEffect, useState } from 'react';\nimport { Table, Input } from \"reactstrap\";\nconst Test = (props) => {\n    const { result, device } = props;\n    useEffect(() => {\n        console.log(result,'result');\n    }, [])\n    if (Object.entries(result).length > 0 && device == 'Test') {\n        return (\n            <div className=\"patientResult  \">\n                <div className=\"table-responsive \">\n                    <div className=\"text-left\" style={{padding:'10px'}} >\n                        <table className=\"table table-head-fixed table-bordered\">\n                            <thead>\n                                <tr >\n                                    <th className=\"dw-3\"> STT </th>\n                                    <th className=\"dw-16\"> Tên Xét Nghiệm </th>\n                                    <th className=\"dw-28\"> Kết quả </th>\n                                    <th className=\"dw-16\"> Ghi chú </th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"bodyTable\">\n                                {Object.entries(result).map((key, index) => {\n                                    return (key[0] == 'ctime' || key[0] == 'device' ||key[0] == 'sample_id' ) ? <></> : <tr style={{height:'90px'}}>\n                                        <td>{index }</td>\n                                        <td>{key[0]}</td>\n                                        <td>{key[1].value}</td>\n                                        <td></td>\n                                    </tr>\n                                })}\n\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\nexport default Test;","import React, { useEffect, useState } from 'react';\nimport { Table, Input, Col, Row } from \"reactstrap\";\nimport { OTHER_DATA } from \"../../../../../Constances/const\"\nconst Other = (props) => {\n    const { resultIndex, device,data } = props;\n    const resultsExam = data;\n    useEffect(() => {\n        console.log(1123)\n    }, [])\n    return (\n        <div>\n            {device == 'Other' &&\n                Object.keys(resultsExam[resultIndex]).map(parentKey => (\n                    (parentKey !== \"device\" && parentKey !== 'sample_id'&& parentKey !== 'ctime') ?\n                        <div className=\"patientResult\">\n                            <div className=\" min-h-20 \">\n                                <div className=\"text-left\"style={{padding:'10px'}}>\n                                    <table style={{border:'1px solid #333'}}>\n                                        <thead>\n                                            <tr>\n                                                <th className=\"dw-14\" colSpan={2}> {parentKey} </th>\n                                                <th className=\"dw-30\"> Kết quả </th>\n                                                <th className=\"dw-20\"> Ghi chú </th>\n                                            </tr>\n                                        </thead>\n                                        <tbody className=\"bodyTable\">\n                                            {\n                                                resultsExam[resultIndex][parentKey] ? Object.keys(resultsExam[resultIndex][parentKey]).map((key) => (\n                                                    typeof resultsExam[resultIndex][parentKey][key] === \"object\" ?\n                                                        <>\n                                                            <tr >\n                                                                <td rowSpan={Object.keys(resultsExam[resultIndex][parentKey][key]).length+1}>{key}</td>\n                                                            </tr>\n                                                            {Object.entries(resultsExam[resultIndex][parentKey][key]).map(e=>(\n                                                                <tr>\n                                                                    <td>{e[0]}</td>\n                                                                    <td>{e[1]}</td>\n                                                                    <td></td>\n                                                                </tr>\n                                                            ))}\n                                                        </> :\n                                                        <tr >\n                                                            <td colSpan={2}>{key}</td>\n                                                            <td>\n                                                                {resultsExam[resultIndex][parentKey][key] ? resultsExam[resultIndex][parentKey][key] : ''}\n                                                            </td>\n                                                            <td></td>\n                                                        </tr>\n                                                )) : \"\"\n                                            }\n\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div > : \"\"\n                ))\n            }\n        </div>\n    )\n}\nexport default Other;","import React, { useEffect, useState } from 'react';\nimport { Table, Input } from \"reactstrap\";\nconst IMMUNE = (props) => {\n    const { result, device, deviceIMMUNE, show_form_input = true } = props;\n    useEffect(() => {\n    }, [deviceIMMUNE])\n    const render_row = (attr, idx) => {\n        if (attr.value && attr.value.range) {\n            return (attr.name == 'ctime' || attr.value.value == '' || attr.label == 'device' || attr.label == 'sample_id' || attr.name == 'name') ? undefined : <tr>\n                <td className='examPrint'>{idx}</td>\n                <td className='examPrint'>{attr.label2}</td>\n                <td className='examPrint'\n                //  style={{\n                //     color: attr.value.value > attr.value.range[1]\n                //       ? 'red'\n                //       : attr.value.value < attr.value.range[0]\n                //         ? 'blue'\n                //           : '#333',\n                //   }}\n                >{attr.value.value}</td>\n                <td className='examPrint'>{((attr.value.range[0]) == null && (attr.value.range[1]) == null) ? '' : ((attr.value.range[0] + '-' + attr.value.range[1]))}</td>\n                <td className='examPrint'>{attr.value.unit}</td>\n            </tr>\n        }\n        return (attr.name == 'ctime' ||  attr.label == 'device' || attr.label == 'sample_id' || attr.name == 'name') ? undefined : <tr>\n            <td className='examPrint'>{idx}</td>\n            <td className='examPrint'>{attr.label2}</td>\n            <td className='examPrint'></td>\n            <td className='examPrint'></td>\n            <td className='examPrint'></td>\n        </tr>\n    }\n    if (Object.entries(result).length > 0 && device == 'Immune') {\n        return (\n            <div className=\"patientResult  \">\n                <div className=\"table-responsive min-h-80 \">\n\n                    <div className=\"text-left\">\n                        <table className=\"table table-head-fixed table-bordered\">\n                        <thead>\n                                <tr>\n                                    <th className=\"dw-3\"> STT </th>\n                                    <th className=\"dw-30\"> Tên Xét Nghiệm </th>\n                                    <th className=\"dw-14\"> Kết quả </th>\n                                    <th className=\"dw-24\">Chỉ số bình thường</th>\n                                    <th className=\"dw-16\"> Ghi chú </th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"bodyTable\">\n                                {deviceIMMUNE && deviceIMMUNE.attr.map((attr, idx) => render_row(attr, idx))}\n                            </tbody>\n                        </table>\n                        <div >\n                            {show_form_input &&  deviceIMMUNE && deviceIMMUNE.attr.map((attr, index) => {\n                                return attr.isInput ? <div key={index}>\n                                    <label for={`IMMUNE${attr.name}`}>{attr.label}</label>\n                                    <Input\n                                        id={`IMMUNE${attr.name}`}\n                                        className=\"note-time\"\n                                        value={attr.value.value}\n                                        onChange={(e) =>{ props.setDeviceValue(e, deviceIMMUNE, attr)}}\n                                    ></Input>\n                                </div> : <></>\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n    return <>\n        \n    </>\n}\nexport default IMMUNE;","import React, { useEffect, useState } from 'react';\nimport { Table, Input } from \"reactstrap\";\nconst BS200Eprint = (props) => {\n    const { result, device } = props;\n    useEffect(() => {\n    }, [result])\n    if (Object.entries(result).length > 0 && device == 'BC-2800') {\n        return (\n            <div className=\"patientResult  \">\n                <div>\n                    <div className=\"text-left\" style={{ padding: '10px' }}>\n                        <table className=\"table table-head-fixed table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th colSpan={5}>\n                                        Xét nghiệm huyết học\n                                    </th>\n                                </tr>\n                                <tr>\n                                    <th className=\"dw-30\"> Tên Xét Nghiệm </th>\n                                    <th className=\"dw-14\"> Kết quả </th>\n                                    <th className=\"dw-24\">Chỉ số bình thường</th>\n                                    <th className=\"dw-16\"> Đơn vị </th>\n                                    <th className=\"dw-16\"> Ghi chú </th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"bodyTable\">\n                                {Object.entries(result).map((key, index) => {\n                                    return (key[0] == 'ctime' || key[1] == '' || key[0] == 'RDW_CV' || key[0] == 'LYMPH' || key[0] == 'MID' || key[0] == 'GRAN' || key[0] == 'MPV' || key[0] == 'PDW' || key[0] == 'PCT' || key[0] == 'device' || key[0] == 'Xét nghiệm số lượng và độ tập trung tiểu cầu' || key[0] == 'sample_id' || key[0] == 'name') ? <></> : <tr >\n                                        <td className='examPrint'>{key[0]}</td>\n                                        <td className='examPrint'\n                                            style={{\n                                                color: key[1].value > key[1].range[1]\n                                                    ? 'red'\n                                                    : key[1].value < key[1].range[0]\n                                                        ? 'blue'\n                                                        : '#333',\n                                            }}\n                                        >{key[1].value}</td>\n                                        <td className='examPrint'>{key[1].range[0] + '-' + key[1].range[1]}</td>\n                                        <td className='examPrint'>{key[1].unit}</td>\n                                        <td className='examPrint'></td>\n                                    </tr>\n                                })}\n\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\nexport default BS200Eprint;","import React, { useEffect, useState } from 'react';\nimport { Table, Input } from \"reactstrap\";\nconst BS200Eprint = (props) => {\n    const { result, device } = props;\n    useEffect(() => {\n    }, [result])\n    if (Object.entries(result).length > 0 && device == 'BS-200E') {\n        return (\n            <div className=\"patientResult  \">\n                <div>\n                    <div className=\"text-left\" style={{ padding: '10px' }}>\n                        <table className=\"table table-head-fixed table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th colSpan={6}>BS-200E</th>\n                                </tr>\n                                <tr>\n                                    <th className=\"dw-3\"> STT </th>\n                                    <th className=\"dw-30\"> Tên Xét Nghiệm </th>\n                                    <th className=\"dw-14\"> Kết quả </th>\n                                    <th className=\"dw-24\">Chỉ số bình thường</th>\n                                    <th className=\"dw-16\"> Đơn vị </th>\n                                    <th className=\"dw-16\"> Ghi chú </th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"bodyTable\">\n                                {Object.entries(result).map((key, index) => {\n                                    return (key[0] == 'ctime' || key[1] == '' || key[0] == 'device' || key[0] == 'sample_id' || key[0] == 'name') ? <></> : <tr >\n                                        <td className='examPrint'>{index - 1}</td>\n                                        <td className='examPrint'>{key[0]}</td>\n                                        <td className='examPrint'\n                                            style={{\n                                                color: key[1].value > key[1].range[1]\n                                                    ? 'red'\n                                                    : key[1].value < key[1].range[0]\n                                                        ? 'blue'\n                                                        : '#333',\n                                            }}\n                                        >{key[1].value}</td>\n                                        <td className='examPrint'>{key[1].range[0] + '-' + key[1].range[1]}</td>\n                                        <td className='examPrint'>{key[1].unit}</td>\n                                        <td className='examPrint'></td>\n                                    </tr>\n                                })}\n\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\nexport default BS200Eprint;","import React, { useEffect, useState } from \"react\";\nimport { ShareService } from \"../../../../Shared\";\nimport { Row, Col, Table } from \"reactstrap\";\nimport logo from '../../../../Asset/Img/logo.png'\nimport ExamService from \"../../Shared/ExamService\"\nimport UA66print from \"../ExamResultPaper/Device/UA66print\";\nimport Testprint from \"../ExamResultPaper/Device/Testprint\";\nimport Otherprint from \"../ExamResultPaper/Device/Otherprint\";\nimport Immuneprint from \"../ExamResultPaper/Device/Immuneprint\";\nimport BC2800print from \"../ExamResultPaper/Device/BC2800print\";\nimport BS200Eprint from \"../ExamResultPaper/Device/BS200Eprint\";\nconst ExamResult = (props) => {\n    const { style, resultsExam, selectedJobStepRunning, prognostic, textDiagnosis, nameDeviceObj, devices = [], setDeviceValue, sendReq } = props;\n    const [display, setDisplay] = useState({})\n    const [deviceBC2800, setDeviceBC2800] = useState()\n    const [deviceIMMUNE, setDeviceIMMUNE] = useState()\n    const [ctime, setCtime] = useState({})\n    const [mtime, setMtime] = useState({})\n    const [printOtherAndTest, setPrintOtherAndTest] = useState([])\n    const [printDevices, setPrintDevices] = useState([])\n    useEffect(() => {\n        if (resultsExam && resultsExam.length > 0) {\n            let findOtherAndTest = resultsExam.filter(e => {\n                return e.device === 'Other' || e.device === 'Test'\n            })\n            setPrintOtherAndTest(findOtherAndTest)\n            let resultDevices = resultsExam.filter(e => {\n                return e.device === 'BC-2800' || e.device === 'BS-200E' || e.device === 'Immune' || e.device === 'UA-66'\n            })\n            setPrintDevices(resultDevices)\n        }\n    }, [resultsExam])\n    useEffect(() => {\n        devices.forEach(element => {\n            if (element.name == 'BC-2800') {\n                setDeviceBC2800(element)\n            } else if (element.name == 'Immune') {\n                setDeviceIMMUNE(element)\n            }\n        });\n    }, [devices])\n    useEffect(() => {\n        if (Object.entries(selectedJobStepRunning).length > 0) {\n            setCtime(new Date(selectedJobStepRunning.ctime).toLocaleString())\n            setMtime(new Date(selectedJobStepRunning.mtime).toLocaleString())\n        }\n        if (style) {\n            setDisplay(style)\n        }\n    }, [selectedJobStepRunning, style])\n    const jobStep = selectedJobStepRunning || {};\n    const order = jobStep.order || {};\n    const customer = order.customer || {};\n    const current = new Date();\n    let date = new Date(customer.birthday);\n    let address = customer.contacts ? customer.contacts[0].address : {};\n    const ward = address.ward ? `  -${address.ward}` : '';\n    const district = address.district ? `-${address.district}` : '';\n    const province = address.province ? `-${address.province}` : '';\n    let phone = customer.contacts ? customer.contacts[0].phone : \"\";\n    let doctorInfo = JSON.parse(window.sessionStorage.getItem('user'));\n    return (\n        <div className=\"border border-secondary font-print\" style={{display:display}}>\n            <div id=\"printExam\" className='printExamResult position-relative mt-3'>\n                {printDevices && printDevices.length > 0 &&\n                    <div className=\"resultDevice\" style={{ height: \"297mm\" }}>\n                        {printDevices.map((e, index) => {\n                            if (e.device)\n                                return (\n                                    <div className=\"absolute\" style={{ height: \"297mm\" }} >\n                                        <Row style={{ marginBot: '0px' }}>\n                                            <Col sm=\"8\">\n                                                <Row className=\"text-left m-0\">\n                                                    <Col sm=\"4\">\n                                                        <Row>\n                                                            <img className=\"image\" src={logo} height=\"90px\"></img>\n                                                        </Row>\n                                                    </Col>\n                                                    <Col sm=\"8\">\n                                                        <Row className=\"m-0\">Phòng Khám Đa Khoa Việt Đoàn</Row>\n                                                        <Row className=\"m-0\"> Bách Môn,Việt Đoàn, Tiên Du, Bắc Ninh</Row>\n                                                        <Row className=\"m-0\">hotline: 0869.968.688</Row>\n                                                    </Col>\n                                                </Row>\n                                            </Col>\n                                            <Col className=\"end\">\n                                            </Col>\n                                        </Row>\n                                        <h5 className=\"text-center m-0 ,resultDevice\">\n                                            <b> KẾT QUẢ XÉT NGHIỆM</b>\n                                        </h5>\n\n                                        <Row className=\"cusInfo\">\n                                            <Col className='asign-left'>\n                                                Họ tên: <b><span className=\"text-uppercase font-weight-bold\">{customer.full_name}</span></b><br />\n                                                <span >Ngày sinh: {customer.birthday} </span>\n                                                <span className=\"mr-3 \">Giới tính: {customer.gender ? customer.gender === \"male\" ? \"Nam\" : \"Nữ\" : null}</span><br></br>\n                                                Số điện thoại: {phone} <br></br>\n                                                Địa chỉ : {`${ward}${district}${province}`}<br></br>\n                                                Phòng khoa : <b>KHOA XÉT NGHIỆM</b><br></br>\n                                            </Col>\n                                            <Col className='asign-right'>\n                                                Người lấy mẫu : Tạ Thị Hòa   <br></br>\n                                                Thời gian lấy mẫu: {ctime}  <br></br>\n                                                Người nhận mẫu : {doctorInfo.full_name}<br></br>\n                                                Thời gian nhận mẫu: {mtime}<br></br>\n                                                Chẩn đoán : <b>{(prognostic) ? prognostic.textDiagnosis : textDiagnosis}</b><br></br>\n                                            </Col>\n                                        </Row>\n                                        <div className=\"text-left text-center m-0 ,resultDevice\">\n                                            {e.device == \"BS-200E\" && <BS200Eprint deviceBC2800={deviceBC2800} device={e.device} result={e} />}\n                                            {e.device == \"Immune\" && e.device == nameDeviceObj.IMMUNE && <Immuneprint\n                                                deviceIMMUNE={deviceIMMUNE}\n                                                show_form_input={false}\n                                                setDeviceValue={setDeviceValue}\n                                                device={e.device} result={e} />}\n                                            {e.device == \"BC-2800\" && <BC2800print\n                                                xscroll={false}\n                                                show_form_input={false}\n                                                deviceBC2800={deviceBC2800}\n                                                setDeviceValue={setDeviceValue}\n                                                device={e.device} result={e} />}\n                                            {e.device == \"UA-66\" && <UA66print device={e.device} result={e} />}\n\n                                        </div>\n\n                                        <div className=\"d-flex footer mt-1\">\n                                            <div className=\"text-center mr-auto ml-5\">\n                                                <strong>Bác sĩ điều trị</strong><br></br>\n                                                <i>(ký, ghi rõ họ tên)</i> <br></br><br></br><br></br><br></br>\n                                            </div>\n                                            <div className=\"text-center mr-auto ml-5\">\n                                                <strong>Phòng Xét Nghiệm</strong><br></br>\n                                                <i>(ký, ghi rõ họ tên)</i> <br></br><br></br><br></br><br></br>\n                                                <b className=\"mt-5\">{doctorInfo.full_name}</b>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                        })}\n                    </div>\n                }\n                {printOtherAndTest && printOtherAndTest.length > 0 &&\n                    <div className=\"absolute resultDevice\" style={{ height: \"297mm\" }} >\n                        <div  >\n                            <Row style={{ marginBot: '0px' }}>\n                                <Col sm=\"8\">\n                                    <Row className=\"text-left m-0\">\n                                        <Col sm=\"4\">\n                                            <Row>\n                                                <img className=\"image\" src={logo} height=\"90px\"></img>\n                                            </Row>\n                                        </Col>\n                                        <Col sm=\"8\">\n                                            <Row className=\"m-0\">Phòng Khám Đa Khoa Việt Đoàn</Row>\n                                            <Row className=\"m-0\"> Bách Môn,Việt Đoàn, Tiên Du, Bắc Ninh</Row>\n                                            <Row className=\"m-0\">hotline: 0869.968.688</Row>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                                <Col className=\"end\">\n                                </Col>\n                            </Row>\n                        </div>\n                        <h5 className=\"text-center m-0 ,resultDevice\">\n                            <b> KẾT QUẢ XÉT NGHIỆM</b>\n                        </h5>\n\n                        <Row className=\"cusInfo\">\n                            <Col className='asign-left'>\n                                Họ tên: <b><span className=\"text-uppercase font-weight-bold\">{customer.full_name}</span></b><br />\n                                <span >Ngày sinh: {customer.birthday} </span>\n                                <span className=\"mr-3 \">Giới tính: {customer.gender ? customer.gender === \"male\" ? \"Nam\" : \"Nữ\" : null}</span><br></br>\n                                Số điện thoại: {phone} <br></br>\n                                Địa chỉ : {`${ward}${district}${province}`}<br></br>\n                                Phòng khoa : <b>KHOA XÉT NGHIỆM</b><br></br>\n                            </Col>\n                            <Col className='asign-right'>\n                                Người lấy mẫu : Tạ Thị Hòa   <br></br>\n                                Thời gian lấy mẫu: {ctime}  <br></br>\n                                Người nhận mẫu : {doctorInfo.full_name}<br></br>\n                                Thời gian nhận mẫu: {mtime}<br></br>\n                                Chẩn đoán : <b>{(prognostic) ? prognostic.textDiagnosis : textDiagnosis}</b><br></br>\n                            </Col>\n                        </Row>\n                        <div style={{ padding: '10px', fontWeight: '600' }}>KẾT QUẢ XÉT NGHIỆM</div>\n                        {printOtherAndTest.length > 0 && printOtherAndTest.map((f, index) => {\n                            return <div>\n                                {\n                                    f.device == \"Test\" && <Testprint\n                                        resultsExam={resultsExam}\n                                        setValueService={props.setValueService}\n                                        device={f.device} result={f} />\n                                }\n                                {\n                                    f.device == 'Other' && <Otherprint device={f.device} result={f}\n                                        resultIndex={index}\n                                        examEditSetState={(data) => props.examEditSetState(data)}\n                                        data={printOtherAndTest}\n                                    />\n                                }\n                            </div>\n                        })}\n                        <div className=\"d-flex footer mt-1\">\n                            <div className=\"text-center mr-auto ml-5\">\n                                <strong>Bác sĩ điều trị</strong><br></br>\n                                <i>(ký, ghi rõ họ tên)</i> <br></br><br></br><br></br><br></br>\n                            </div>\n                            <div className=\"text-center mr-auto ml-5\">\n                                <strong>Phòng Xét Nghiệm</strong><br></br>\n                                <i>(ký, ghi rõ họ tên)</i> <br></br><br></br><br></br><br></br>\n                                <b className=\"mt-5\">{doctorInfo.full_name}</b>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n\n        </div>\n    )\n\n}\nexport default ExamResult;","const readThreeDigits = (number) => {\n  const digitText = [\n    \"không\",\n    \"một\",\n    \"hai\",\n    \"ba\",\n    \"bốn\",\n    \"năm\",\n    \"sáu\",\n    \"bảy\",\n    \"tám\",\n    \"chín\",\n  ];\n  let word = \"\";\n  let numberDigits = Array.from(number.toString()).map(Number).reverse();\n\n  if (numberDigits[2]) {\n    word += digitText[numberDigits[2]] + \" trăm\";\n  }\n  if (numberDigits[1]) {\n    if (numberDigits[1] === 1) {\n      word += \" mười\";\n    } else {\n      word += \" \" + digitText[numberDigits[1]] + \" mươi\";\n    }\n  } else if (numberDigits[2] && numberDigits[0]) {\n    word += \" linh\";\n  }\n  if (numberDigits[0]) {\n    if (numberDigits[0] === 5 && numberDigits[1]) {\n      word += \" lăm\";\n    } else if (\n      numberDigits[0] === 1 &&\n      numberDigits[1] &&\n      numberDigits[1] !== 1\n    ) {\n      word += \" mốt\";\n    } else {\n      word += \" \" + digitText[numberDigits[0]];\n    }\n  }\n  return word;\n};\n\nexport const moneyToWord = (money) => {\n  if (!money) return 'Không đồng'\n  let word = \"\";\n  const unit = [\"nghìn\", \"triệu\", \"tỷ\"];\n  let moneyTemp = money;\n\n  let i = 0;\n  let threeDigitsNumberArr = [];\n  while (moneyTemp > 0) {\n    threeDigitsNumberArr.push(moneyTemp % 1000);\n    moneyTemp = Math.floor(moneyTemp / 1000);\n  }\n  if (threeDigitsNumberArr[0]) {\n    word += readThreeDigits(threeDigitsNumberArr[0]) + \" \";\n  }\n  if (threeDigitsNumberArr[1]) {\n    word = readThreeDigits(threeDigitsNumberArr[1]) + \" nghìn \" + word;\n  }\n  if (threeDigitsNumberArr[2]) {\n    word = readThreeDigits(threeDigitsNumberArr[2]) + \" triệu \" + word;\n  }\n  if (threeDigitsNumberArr[3]) {\n    word = readThreeDigits(threeDigitsNumberArr[3]) + \" tỷ \" + word;\n  }\n  if (threeDigitsNumberArr[4]) {\n    word = readThreeDigits(threeDigitsNumberArr[4]) + \" nghìn \" + word;\n  }\n  if (threeDigitsNumberArr[5]) {\n    word = readThreeDigits(threeDigitsNumberArr[5]) + \" triệu \" + word;\n  }\n\n  if (!(money % 1000000000000)) {\n    word += \"tỷ \";\n  }\n  if (threeDigitsNumberArr[6] !== undefined) {\n    return \"Money too much\";\n  }\n\n  return word + \"đồng\";\n};\n\nexport function numberWithCommas(x) {\n  if(x)\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  else\n    return 0;\n}\n\nexport function getAge(dateString) {\n  let today = new Date();\n  let birthDate = toDate(dateString);\n  let age = today.getFullYear() - birthDate.getFullYear();\n  let m = today.getMonth() - birthDate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  if (age === 0) return diff_weeks(today, birthDate) + \" tuần tuổi\";\n  return age + \" tuổi\";\n}\n\n// convert dd/mm/yyyy string to date\nfunction toDate(dateStr) {\n  const [day, month, year] = dateStr.split(\"/\");\n  return new Date(year, month - 1, day);\n}\n\n// eg 12031999 -> 12/03/1999\nexport function autoAddSlashDate(rawDate) {\n  let result = rawDate\n  if (result[2] && result[2] !== '/') {\n    result = result.slice(0, 2) + \"/\" + result.slice(2);\n  }\n\n  if (result[5] && result[5] !== '/') {\n    result = result.slice(0, 5) + \"/\" + result.slice(5);\n  }\n  return result\n}\n\n// dd/mm/yyyy to yyyy-mm-dd\nexport function convertToNormDate(dateStr) {\n  let dateArr = dateStr.split(\"/\").reverse();\n  let day = dateArr[0];\n  let month = dateArr[1];\n  if (day.length === 1) dateArr[0] = \"0\" + day;\n  if (month.length === 1) dateArr[1] = \"0\" + month;\n  return dateArr.join(\"-\");\n}\nexport function convertToStrDate(normDate) {\n  if (!normDate) {\n    return \"\";\n  }\n  let strDate = normDate.split(\"-\").reverse().join(\"/\");\n  return strDate;\n}\n\nexport function daysBetween(StartDate, EndDate) {\n  // The number of milliseconds in all UTC days (no DST)\n  const oneDay = 1000 * 60 * 60 * 24;\n\n  // A day in UTC always lasts 24 hours (unlike in other time formats)\n  const start = Date.UTC(EndDate.getFullYear(), EndDate.getMonth(), EndDate.getDate());\n  const end = Date.UTC(StartDate.getFullYear(), StartDate.getMonth(), StartDate.getDate());\n\n  // so it's safe to divide by 24 hours\n  return (start - end) / oneDay;\n}\n\nexport function stringToSlug(str) {\n  // remove accents\n  let from = \"àáãảạăằắẳẵặâầấẩẫậèéẻẽẹêềếểễệđùúủũụưừứửữựòóỏõọôồốổỗộơờớởỡợìíỉĩịäëïîöüûñçýỳỹỵỷ\",\n      to   = \"aaaaaaaaaaaaaaaaaeeeeeeeeeeeduuuuuuuuuuuoooooooooooooooooiiiiiaeiiouuncyyyyy\";\n  for (let i=0, l=from.length ; i < l ; i++) {\n    str = str.replace(RegExp(from[i], \"gi\"), to[i]);\n  }\n\n  str = str.toLowerCase()\n        .trim()\n        .replace(/[^a-z0-9\\-]/g, '-')\n        .replace(/-+/g, '-');\n\n  return str;\n}\n\nfunction diff_weeks(dt2, dt1) {\n  let diff = (dt2.getTime() - dt1.getTime()) / 1000;\n  diff /= 60 * 60 * 24 * 7;\n  return Math.abs(Math.round(diff));\n}\n","import React, { Component, Fragment } from \"react\";\nimport { Table, Input, Row, Col } from \"reactstrap\";\nimport logo from \"../../../Asset/Img/logo.png\"\nclass HeaderPrint extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n    render() {\n        return (\n            <div className=\"HeaderPrint\">\n           \n                <div className=\"logo\">\n                    <img alt=\"\" className=\"image\" src={logo}></img>\n                    <p className=\"address\">Phòng Khám Đa Khoa Việt Đoàn <br></br>\n                        Phố Bách Môn, Việt Đoàn, Tiên Du, Bắc Ninh<br></br>\n                        SĐT: 0869 968 688</p>\n                </div>\n            </div>\n        )\n    }\n}\nexport default HeaderPrint;\n","import { Http } from '../../../Helper/Http'\nclass ReceptionService {\n    constructor() {\n        if (ReceptionService._instance) {\n            return ReceptionService._instance\n        }\n        ReceptionService._instance = this;\n    }\n\n    getJobByCustomerId(customer_id) {\n        return Http.get(`/job/job/list`, { customer_id })\n    }\n    getBookList(status) {\n        return Http.get(`/accounting/book/list`, { status });\n    }\n    getOrder(code) {\n        return Http.get(`/order/order/get`, { code });\n    }\n    postTransaction(payload) {\n        return Http.post(`/accounting/transaction/create`, payload);\n    }\n    getLocationAllCity(type, parent_id) {\n        return Http.get(`/region/region/list`, { type, parent_id })\n    }\n    getLocationAllDistrict(type, parent_id) {\n        return Http.get(`/region/region/list`, { type, parent_id })\n    }\n    getLocationAllWard(type, parent_id) {\n        return Http.get(`/region/region/list`, { type, parent_id })\n    }\n    postAddress(customer_id) {\n        return Http.post(`/customer/contact/add`, customer_id)\n    }\n    postJob(job) {\n        return Http.post(`/job/job/customer/service`, job)\n    }\n    postJobTest(job){\n        return Http.post(`/job/job/customer/test`, job)\n    }\n\n\n    getRetailOrder(code) {\n        return Http.get(`/retail/get`, { code })\n    }\n    getCmbyCode(code) {\n        return Http.get(`/customer/customer/get`, { code })\n    }\n\n    getContactByCmId(customer_id) {\n        return Http.get(`/customer/contact/get`, { customer_id })\n    }\n\n    getLocationByService(serviceId) {\n        return Http.get(`/location/service/location`, { id: serviceId })\n    }\n\n    getCmList(payload) {\n        return Http.get(`/customer/customer/list`, payload)\n    }\n\n    getExamHistory(customer_id,type) {\n        return Http.get(`/job/job/list`, { customer_id,type })\n    }\n    getExamHistoryWithType(customer_id, type) {\n        return Http.get(`/job/job/list`, { customer_id, type })\n    }\n    getJobStepList(location_id,status,type){\n        return Http.get(`/job/step/list`,{location_id,status,type})\n    }\n\n    getJobById(id) {\n        return Http.get(`/job/job/get`, { id })\n    }\n\n    searchCustomer(text) {\n        return Http.get(`/customer/customer/search`, { text })\n    }\n}\n\nconst instance = new ReceptionService();\n\nexport default instance;","import React, { useEffect, useState } from 'react';\nimport { Fragment } from 'react';\nimport { Button } from 'reactstrap';\nimport SharedService from '../../../../../Shared/Services/SharedService';\nimport { moneyToWord } from '../../../../Reception/Shared/Util';\nimport HeaderPrint from '../../../../../Shared/Components/HeaderPrint/HeaderPrint';\nimport { ReceptionService } from '../../../Shared';\nimport { convertToStrDate, convertToNormDate } from \"../../../Shared/Util\";\nconst PrintMedicalHistory = (props) => {\n    const [customer, setCustomer] = useState({})\n    let { item, submidPrint } = props;\n    const step = item ? item.steps ? item.steps : [] : [];\n    const infoCm = item ? item.ref_value : {};\n    const nameCm = infoCm ? infoCm.full_name : \"\";\n    const birthdayCm = infoCm ? infoCm.birthday : \"\";\n    const genderCm = infoCm ? infoCm.full_name : \"\";\n    const customerCode = infoCm ? infoCm.code : \"\";\n    let customerPhone = customer ? customer.contacts ? customer.contacts[0].phone : \"\" : \"\";\n    let address = customer ? customer.contacts ? customer.contacts[0].address : {} : {};\n    const street = address.street ? `${address.street}` : '';\n    const ward = address.ward ? `  -${address.ward}` : '';\n    const district = address.district ? `-${address.district}` : '';\n    const province = address.province ? `-${address.province}` : '';\n    useEffect(() => {\n        if (customerCode) {\n\n            ReceptionService.getCmbyCode(customerCode).then(res => {\n                setCustomer(res.data)\n            })\n            step.map((el, index) => {\n                SharedService.createEtccode(customerCode, \"customerCode\" + index)\n            })\n        }\n    }, [customerCode])\n    let doctorInfo = JSON.parse(window.sessionStorage.getItem('user'));\n    const current = new Date();\n    return (\n        <Fragment>\n            <div className=\"d-flex justify-content-center font-print mt-3\">\n                <div className=\"border border-secondary historyMedicalPrint\">\n                    <div className=\"p-2 position-relative\" id=\"historyMedicalPrint\">\n                        {step.map((el, index) => {\n                            let totalPrice = 0;\n                            let origin_total = 0;\n                            el.order.items.filter(e => e.quantity > 0).map(ev => totalPrice += parseInt(ev.price))\n                            el.order.items.filter(e => e.quantity > 0).map(e => origin_total += e.origin_price)\n                            let discount_price = parseInt(origin_total) - parseInt(totalPrice);\n                            return (\n                                <div className=\"receiptFromPrint\">\n                                    <div className=\"absolute\">\n                                        <div className=\"text-right\">\n                                            <canvas id={\"customerCode\" + index} style={{ height: \"13mm\" }}></canvas>\n                                        </div>\n                                    </div>\n                                    <HeaderPrint></HeaderPrint>\n                                    <h4 className=\"text-center font-weight-bold mb-0\">\n                                        <b>BIÊN LAI THU TIỀN</b>\n                                    </h4>\n                                    <div className=\"text-center\">\n                                        <i>{current.getHours()} giờ {current.getMinutes()} phút,Ngày {current.getDate()} Tháng {current.getMonth() + 1} Năm {current.getFullYear()}</i>\n                                    </div>\n                                    <div className=\"d-block\">\n                                        Họ tên: <b><span className=\"text-uppercase font-weight-bold\">{nameCm}</span></b>\n                                        <span className=\"ml-25\">NS:  {convertToStrDate(birthdayCm)}</span>\n                                        <span className=\"ml-25 \">GT: {genderCm === \"male\" ? \" Nam\" : \" Nữ\"} </span>\n                                        <span className=\"ml-25\">SĐT:  {customerPhone}</span>\n                                        <br />\n                                        <span>Địa chỉ: {`${street}${ward}${district}${province}`}</span>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between f-flex\">\n                                        <div>\n                                            Dịch vụ :<b style={{ fontSize: \"13px\" }}> {el.order.items.filter(e => e.quantity > 0).map(el => el.ref_value.name).join(\",\")}\n                                            </b>\n                                            <br></br>\n                                            Giá gốc : <span className=\"font-weight-bold\"><b>{new Intl.NumberFormat('de-DE').format(origin_total)} VNĐ</b></span>\n                                            <span className=\"font-weight-bold ml-20 \"> Tổng tiền khuyến mãi:\n                                             <b className=\"d-inline discount_price\">{new Intl.NumberFormat('de-DE').format(discount_price)} VNĐ   </b></span><br></br>\n                                            <span className=\"font-weight-bold\"> Tổng số tiền thanh toán: <b>{new Intl.NumberFormat('de-DE').format(totalPrice)} VNĐ </b></span><br></br>\n                                            Viết bằng chữ: <span className=\"font-weight-bold\"><b>{moneyToWord(totalPrice || 0)}</b></span>\n                                        </div>\n                                    </div>\n                                    <br></br>\n                                    <div className=\"d-flex justify-content-between px-1 \">\n                                        <div className=\"text-center mr-auto ml-5 nt\">\n                                            <b>Người nộp tiền</b><br></br>\n                                            <i>(ký, họ tên)</i>\n                                        </div>\n                                        <div className=\"text-center mr-5 tt\">\n                                            <strong>Người thu tiền</strong><br></br>\n                                            <i className=\"mb-2\">(ký, ghi rõ họ tên)</i> <br></br><br></br><br></br>\n                                            <b className=\"mt-5\">{doctorInfo.full_name}</b>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    );\n}\n\nexport default PrintMedicalHistory;","import React, { useEffect, useState } from 'react';\nimport { Button, Table, Modal, ModalHeader, ModalBody, ModalFooter, } from 'reactstrap';\nimport { DATE } from \"../../../../Constances/const\";\nimport { ShareService } from '../../../../Shared';\nimport PrintMedicalHistory from \"./PrintHistory/PrintMedicalHistory\";\nconst MedicalHistoryTable = (props) => {\n  let { items } = props;\n  const [itemPrint, setItemPrint] = useState({});\n  // const [submidPrint, setSunmitPrint] = useState(0);\n  const [showPrint, setShowPrint] = useState(false);\n  useEffect(() => {\n  }, [items])\n  const printMedicalHistory = (item) => {\n    setItemPrint(item)\n    setShowPrint(true);\n  }\n  const submitPrint = () => {\n    ShareService.printhorizontal(\"historyMedicalPrint\")\n  }\n  return (\n    <div className=\"MedicalHistoryTable\">\n      <Table hover bordered className=\"historyMedical\">\n        <thead>\n          <tr>\n            <th>STT</th>\n            <th className=\"nameCm\">Tên bệnh nhân</th>\n            <th className=\"testDay\">Ngày khám</th>\n            <th>Dịch vụ</th>\n            <th>Mã dịch vụ</th>\n            <th className=\"optionHistory\">Tùy chọn</th>\n          </tr>\n        </thead>\n        <tbody>\n\n          {items?.map((item, index) => {\n            const stepExam = item.steps;\n\n            const service = (sv) => {\n\n              if (sv.order.items.length > 0) {\n                let serviceList = [sv.order.items.map(el => el.ref_value.name).join(\",\")]\n\n                return <div>{serviceList}</div>\n              }\n            }\n            const code = (sv) => {\n              if (sv.order) {\n                let codeList = [sv.order.code]\n\n                return <div key={codeList}>{codeList}</div>\n              }\n            }\n            const codeExam = stepExam.map(code)\n            const serviceExam = stepExam.map(service)\n            return <tr key={item.id}>\n              <th scope=\"row\">{index + 1}</th>\n              <td>{item.ref_value.full_name}</td>\n              <td>{DATE(item.date, \"DDMMYYYY\")}</td>\n              <td>{serviceExam}</td>\n              <td >{codeExam}</td>\n              <td><Button onClick={() => printMedicalHistory(item)}>in</Button></td>\n            </tr>\n          })}\n        </tbody>\n      </Table>\n      <Modal isOpen={showPrint}>\n        <ModalBody>\n          <PrintMedicalHistory item={itemPrint}></PrintMedicalHistory>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"danger\" onClick={() => setShowPrint(false)}>Hủy</Button>\n          <Button onClick={() => submitPrint()}>In</Button>\n        </ModalFooter>\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default MedicalHistoryTable;","import React from 'react';\n class Asterisk extends React.Component {\n\n    render() {\n        return (\n            <>\n                <span className=\"text-danger\">*</span>\n            </>\n        )\n    }\n    \n}\nexport default Asterisk","import React from \"react\";\nimport Barcode from \"react-barcode\"\nexport default class PrintBarcode extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n    componentDidUpdate = (preProps) => {\n        let { customerCode, customerName } = this.props;\n    }\n    render() {\n        let { customerCode, customerName } = this.props;\n        return (\n            <div style={{ display: \"none\" }}>\n                <div id=\"barcodeCanvas\" >\n                    <div style={{ display: \"flex\", flexDirection: \"row\", minHeight: \"94px\"}}>\n                        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", textAlign: \"center\" }}>\n                            <small>{customerName}</small>\n                            <Barcode fontSize=\"15px\" value={customerCode} height=\"35px\" />\n\n                        </div>\n                        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", textAlign: \"center\" }}>\n                            <small>{customerName}</small>\n                            <Barcode fontSize=\"15px\" value={customerCode} height=\"35px\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport { ShareService } from \"../..\";\nexport default class CustomerForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n    componentDidMount = () => {\n        let { id } = this.props\n        ShareService.createBarcode(id)\n    }\n\n    render() {\n\n        return (\n            <div id=\"printCode\" className=\"m-0\">\n                <canvas id=\"canvas_id\" style={{ height:\"15mm\", width:\"35mm\"}} ></canvas>\n            </div>\n\n        );\n    }\n}","import React from \"react\";\nimport { FormGroup, Label, Input, Col, Row, ModalBody, Modal, ModalHeader, Button } from \"reactstrap\";\nimport MedicalHistoryTable from \"../../../Modules/Reception/Components/MedicalHistory/MedicalHistoryTable\"\nimport Asterisk from \"../../../Modules/Reception/Components/ReceptionForm/Asterisk\";\nimport { REGEX_DATE } from \"../../../Modules/Reception/Shared\";\nimport { Util } from \"../../../Helper/Util\";\nimport { REGEX_TEL } from '../../../Constances/const';\nimport { ShareService } from \"../..\";\nimport PrintBarcode from \"../../../Modules/Reception/Components/ReceptionForm/PrintBarCode\";\nimport {\n  convertToStrDate,\n  getAge,\n  autoAddSlashDate\n} from \"../../../Modules/Reception/Shared/Util\";\nimport CustomerFromPrint from \"./CustomerFromPrint\"\nexport default class CustomerForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      show: false,\n      items: [],\n      printShortKey: false,\n    }\n  }\n  componentDidUpdate = () => {\n    if (this.props.printShortKey) {\n      this.print();\n    }\n  }\n\n  CloseHistory = () => {\n    this.setState({\n      show: false\n    })\n  }\n  setHistory = (customer_id) => {\n    ShareService.getJobByCustomerId(customer_id).then(res => {\n      let data = res.data.reverse();\n      data.splice(6);\n      this.setState({\n        items: data,\n        show: true\n      })\n    })\n  }\n  printBarcode = async () => {\n    await ShareService.printBarCode(\"barcodeCanvas\");\n  }\n  print = () => {\n    ShareService.printBarCode(\"printCode\");\n    this.props.staShortKey();\n  };\n\n  render() {\n    let data = this.props.data || {};\n    let { cm_code, cm_full_name, cm_gender, cm_birthday, dirty, contact_phone_number } = data;\n    let { reExamination, officialsExam, _setValue, mode,  } = this.props;\n    let address = data.contacts ? data.contacts[0].address : {};\n    const ward = address.ward ? `  ${address.ward}` : '';\n    const district = address.district ? `-${address.district}` : '';\n    const province = address.province ? `-${address.province}` : '';\n    return (\n      <div className=\"customerForm_container\">\n        <h5 className=\"title-card\"><span className=\"material-icons\">person</span> Thông tin bệnh nhân</h5>\n        {mode === 'pharmacy' && (\n          <Row className=\"infoCustomer \">\n            <Col sm={11} className=\"ml-10\">\n              <Row className=\"mb-1\">\n                <Col xs=\"2\">Mã bệnh nhân:</Col>\n                <Col xs=\"4\">{data.code}</Col>\n                <Col xs=\"2\">Họ tên:</Col>\n                <Col xs=\"4\">{data.full_name}</Col>\n              </Row>\n            </Col>\n            <Col sm={11} className=\"ml-10\">\n              <Row className=\"mb-1\">\n                <Col xs=\"2\">Giới tính:</Col>\n                <Col xs=\"4\">{data.gender ? data.gender === \"male\" ? \"Nam\" : \"Nữ\" : null}</Col>\n                <Col xs=\"2\">Ngày sinh:</Col>\n                <Col xs=\"4\">{convertToStrDate(data.birthday)}</Col>\n              </Row>\n            </Col>\n            <Col sm={11} className=\"ml-10\">\n              <Row className=\"mb-1\">\n                <Col xs=\"2\">Địa chỉ:</Col>\n                <Col xs=\"10\">{`${ward} ${district} ${province}` || data.address}</Col>\n              </Row>\n            </Col>\n          </Row>\n        )}\n        {mode === \"input\" && (\n          <div>\n            <FormGroup row>\n              <Label for=\"cm_code\" sm={5}>Mã bệnh nhân <Asterisk /></Label>\n              <Col sm={6}>\n                <Input\n                  placeholder=\"nhập 12 số mã bệnh nhân\"\n                  autoFocus\n                  onKeyDown={(e) => Util.onKeyDown(e)}\n                  data-index=\"1\"\n                  name=\"cm_code\"\n                  value={cm_code.value}\n                  type=\"text\"\n                  id=\"cm_code\"\n                  onChange={(ev) => _setValue(ev, \"cm_code\")}\n                  disabled={reExamination}\n                />\n              </Col>\n              <PrintBarcode\n                customerCode={cm_code.value}\n                customerName={cm_full_name.value}\n              ></PrintBarcode>\n              <Col sm={1}>\n                <Button\n                  onClick={() => this.printBarcode()}\n                >In</Button>\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label for=\"cm_full_name\" sm={5}>Họ tên <Asterisk /></Label>\n              <Col sm={7}>\n                <Input\n                  onKeyDown={(e) => Util.onKeyDown(e)}\n                  disabled={officialsExam}\n                  data-index=\"2\"\n                  type=\"text\"\n                  name=\"cm_full_name\"\n                  value={cm_full_name.value}\n                  id=\"cm_full_name\"\n                  onChange={(ev) => _setValue(ev, \"cm_full_name\")}\n                  required\n                  className=\"text-uppercase\" />\n                {dirty && (\n                  <span className=\"text-danger\">{cm_full_name.err}</span>\n                )}\n              </Col>\n            </FormGroup>\n            <FormGroup row className=\"customer-birthday\">\n              <Label for=\"cm_birthday\" sm={5}>\n                Ngày sinh <Asterisk />\n              </Label>\n              <Col sm={5}>\n                <Input\n                  onKeyDown={(e) => Util.onKeyDown(e)}\n                  disabled={officialsExam}\n                  data-index=\"3\"\n                  type=\"text\"\n                  name=\"cm_birthday\"\n                  id=\"cm_birthday\"\n                  value={cm_birthday.value}\n                  onChange={(ev) => { ev.target.value = autoAddSlashDate(ev.target.value); _setValue(ev, \"cm_birthday\") }}\n                  pattern={REGEX_DATE}\n                  placeholder=\"dd/mm/yyyy\"\n                  required\n                />\n                {dirty && (\n                  <span className=\"text-danger\">{cm_birthday.err}</span>\n                )}\n              </Col>\n              {cm_birthday.value && !cm_birthday.err && (\n                <Col sm={2}>\n                  <div className=\" align-items-center get-age\">\n                    {getAge(cm_birthday.value)}\n                  </div>\n                </Col>\n              )}\n            </FormGroup>\n            <Row className=\"gender\">\n              <Label for=\"cm_gender\" sm={5}>\n                Giới tính <Asterisk />\n              </Label>\n              <Col sm={7}>\n                <Input\n                  onKeyDown={(e) => Util.onKeyDown(e)}\n                  disabled={officialsExam}\n                  data-index=\"4\"\n                  type=\"select\"\n                  id=\"cm_gender\"\n                  value={cm_gender.value}\n                  onChange={(ev) => _setValue(ev, \"cm_gender\")}\n                  required>\n                  <option value=\"male\">Nam</option>\n                  <option value=\"female\">Nữ</option>\n                </Input>\n                {dirty && (\n                  <span className=\"text-danger\">{cm_gender.err}</span>\n                )}\n              </Col>\n            </Row>\n            <FormGroup row className=\"customer-phone\">\n              <Label for=\"contact_phone_number\" sm={5}>Số điện thoại <Asterisk /></Label>\n              <Col sm={7}>\n                <Input\n                  onKeyDown={(e) => Util.onKeyDown(e)}\n                  disabled={officialsExam}\n                  data-index=\"5\"\n                  type=\"text\"\n                  name=\"contact_phone_number\"\n                  id=\"contact_phone_number\"\n                  value={contact_phone_number.value}\n                  pattern={REGEX_TEL}\n                  onChange={(ev) => _setValue(ev, 'contact_phone_number')}\n                  required\n                />\n                {dirty && <span className=\"text-danger\">{contact_phone_number.err}</span>}\n              </Col>\n            </FormGroup>\n            <div className=\"print\">\n              <CustomerFromPrint id={cm_code.value.toString()}></CustomerFromPrint>\n            </div>\n\n\n          </div>\n        )}\n        {/* && (data.code.startsWith('CB') == true) */}\n        {mode !== \"input\" && mode !== 'pharmacy' && (\n\n          <div>\n            <Row className=\"infoCustomer \">\n              <Col sm={5} className=\"ml-10\">\n                <Row className=\"mb-1\">\n                  <Col xs=\"5\">Mã bệnh nhân:</Col>\n                  <Col xs=\"7\">{data.code}</Col>\n                </Row>\n                <Row className=\"mb-1\">\n                  <Col xs=\"5\">Họ tên:</Col>\n                  <Col xs=\"7\">{data.full_name}</Col>\n                </Row>\n                <Row className=\"mb-1\">\n                  <Col xs=\"5\">Địa chỉ:</Col>\n                  <Col xs=\"7\">{`${ward}${district}${province}` || data.address}</Col>\n                </Row>\n              </Col>\n              <Col sm={5}>\n                <Row className=\"mb-1\">\n                  <Col xs=\"5\">Giới tính:</Col>\n                  <Col xs=\"7\">{data.gender ? data.gender === \"male\" ? \"Nam\" : \"Nữ\" : null}</Col>\n                </Row>\n                <Row className=\"mb-1\">\n                  <Col xs=\"5\">Ngày sinh:</Col>\n                  <Col xs=\"5\">{convertToStrDate(data.birthday)}</Col>\n                </Row>\n              </Col>\n              {/* <Col sm=\"1\" className=\"end\">\n                <Button hidden={!this.props.data.code} className=\"btn-sm\" onClick={() => this.setHistory(data.id)}>?</Button>\n              </Col>\n              <Modal isOpen={this.state.show}>\n                <ModalHeader>Lịch sử khám</ModalHeader>\n                <ModalBody>\n                  <MedicalHistoryTable items={this.state.items}></MedicalHistoryTable>\n                  <Row>\n                    <Col sm=\"12\" className=\"end\">\n                      <Button onClick={this.CloseHistory}>Đóng</Button>\n                    </Col>\n                  </Row>\n                </ModalBody>\n              </Modal> */}\n            </Row>\n\n            {mode === \"easyInfo\" && (\n              <>\n                <Row className=\"mb-1\">\n                  <Col xs=\"5\">Giới tính:</Col>\n                  <Col xs=\"7\">{data.gender ? data.gender === \"male\" ? \"Nam\" : \"Nữ\" : null}</Col>\n                </Row>\n                <Row className=\"mb-1\">\n                  <Col xs=\"5\">Ngày sinh:</Col>\n                  <Col xs=\"5\">{convertToStrDate(data.birthday)}</Col>\n                </Row>\n                <Row className=\"mb-1\">\n                  <Col xs=\"5\">Địa chỉ:</Col>\n                  <Col xs=\"7\">{data ? data.contacts ? data.contacts[0].address.province : \"\" : \"\"}</Col>\n                </Row>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}","import { LOCALSTORAGE } from \"../../../Constances/const\";\nimport { Http } from \"../../../Helper/Http\";\n\nconst API_ENDPOINT = {\n  //////// customer ////////////////\n  GETLISTCUSTOMER: \"/job/step/list?location_id=\",\n  GETLISTSERVICES: \"/service/service/list\",\n  GETONECUSTOMER: \"/customer/customer/get?id=\",\n  GETLISTLOCATION: \"/location/list\",\n  GETLOCATIONBYSERVICE: \"/location/service/location\",\n  GETLISTPRODUCT: \"/product/list\",\n  GET_JOB_BY_ID: \"/job/job/get\",\n\n  POST_ALLERGY_TO_CUS : \"/customer/customer/allergy?id=\",\n\n  POSTUPDATECUSTOMER: \"/customer/customer/update\",\n  ADD_JOB_STEP: \"/job/step/add\",\n  POSTDIAGNOSIS: \"/job/step/finish\",\n  POSTSUBCLINICAL: \"/job/job/state\",\n  UPDATE_JOB_STEP: \"/job/step/update\",\n  GET_JOB: '/job/job/list?customer_id=',\n};\n\nclass DoctorServices {\n  constructor() {\n    if (DoctorServices._instance) {\n      return DoctorServices._instance;\n    }\n    DoctorServices._instance = this;\n  }\n\n  get location() {\n    return JSON.parse(sessionStorage.getItem(LOCALSTORAGE.LOCATION) || '{}');\n  }\n\n  set location(data) {\n    sessionStorage.setItem(LOCALSTORAGE.LOCATION, JSON.stringify(data))\n  }\n\n  ///////////////// API USER ///////////////////\n  // get data\n  // getListCustomer(id) {\n  //   return Http.get(API_ENDPOINT.GETLISTCUSTOMER + id);\n  // }\n  getOneCustomer(id) {\n    return Http.get(API_ENDPOINT.GETONECUSTOMER + id);\n  }\n  getListServices() {\n    return Http.get(API_ENDPOINT.GETLISTSERVICES);\n  }\n\n  postUpdateCustomer() {\n    return Http.post(API_ENDPOINT.POSTUPDATECUSTOMER);\n  }\n  postAllergyToCus(id, data) {\n    return Http.post(API_ENDPOINT.POST_ALLERGY_TO_CUS + id, data);\n  }\n  //post diagnostic - yeucau kham benh\n  addJobStep(data) {\n    return Http.post(API_ENDPOINT.ADD_JOB_STEP, data);\n  }\n  finishDiagnosis(data) {\n    return Http.post(API_ENDPOINT.POSTDIAGNOSIS, data);\n  }\n  updateJobStep(data) {\n    return Http.post(API_ENDPOINT.UPDATE_JOB_STEP, data)\n  }\n  ///////////////// API LOCATION ///////////////////\n  // get location\n  getListLocation() {\n    return Http.get(API_ENDPOINT.GETLISTLOCATION);\n  }\n\n  getLocationsByService(serviceId) {\n    return Http.get(`${API_ENDPOINT.GETLOCATIONBYSERVICE}?id=${serviceId}`);\n  }\n  ////////////// API PRODUCT ///////////////\n  getListProduct() {\n    return Http.get(API_ENDPOINT.GETLISTPRODUCT);\n  }\n  getInfoService(id) {\n    return Http.get(API_ENDPOINT.GETINFOSERVICE + id);\n  }\n  ////////// API SUBCLINICAL\n  postSubclinical(data) {\n    return Http.post(API_ENDPOINT.POSTSUBCLINICAL, data)\n  }\n\n  //GET JOB BY ID\n  getJobById = async (id) => {\n    return (await Http.get(API_ENDPOINT.GET_JOB_BY_ID, id)).data\n  }\n  searchCustomer(text) {\n    return Http.get(`/customer/customer/search`, { text })\n  }\n  getJob(customerId){\n    return Http.get(API_ENDPOINT.GET_JOB + customerId);\n  }\n}\nconst instance = new DoctorServices();\n\nexport default instance;\n","import React, { Component } from \"react\";\nimport { Row, Col, Button, TabContent, TabPane, Nav, NavItem, NavLink, Input, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport PatientList from \"../../../../Shared/Components/PatientList/PatientList\";\nimport ExamResult from \"../ExamResult/ExamResult\";\nimport ExamResultPaper1 from \"../ExamResultPaper/ExamResultPaper1\";\nimport ModalConfirm from \"../../../../Shared/Components/ModalConfirm/ModalConfirm\";\nimport CustomerForm from \"../../../../Shared/Components/CustomerForm/CustomerForm\";\nimport PrintBarcode from \"../ExamResultPaper/CustomerFromPrint\"\nimport DoctorServices from \"../../../Doctor/Shared/DoctorService\"\nimport ExamService from \"../../Shared/ExamService\";\nimport SharedService from \"../../../../Shared/Services/SharedService\";\nimport { STATUS, SERVICE_TYPE } from \"../../../../Constances/const\";\nimport classnames from 'classnames';\nimport { ShareService } from \"../../../../Shared\";\nimport { FormParent, ModalNoti } from \"../../../Reception/Shared\";\nclass ExamEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nameDevice: [],\n      sendReq: false,\n      otherData: {},\n      inWaitingData: false,\n      doctor_write: '',\n      notiMessage: '',\n      devices: [\n        {\n          name: 'Immune',\n          attr: [\n            {\n              name: 'Beta HCG',\n              label2: 'Beta HCG',\n              label: 'Beta HCG',\n              value: {\n                value: '',\n                unit: '',\n                range: [0, 0]\n              },\n              isInput: true\n            },\n            {\n              name: 'T3',\n              label2: 'T3',\n              label: 'T3',\n              value: {\n                value: '',\n                unit: '',\n                range: [0, 0]\n              },\n              isInput: true\n            },\n            {\n              name: 'FT3',\n              label2: 'FT3',\n              label: 'FT3',\n              value: {\n                value: '',\n                unit: '',\n                range: [0, 0]\n              },\n              isInput: true\n            },\n\n            {\n              name: 'HbA1c',\n              label2: 'HbA1c',\n              label: 'HbA1c',\n              value: {\n                value: '',\n                unit: '',\n                range: [0, 0]\n              },\n              isInput: true\n            },\n            {\n              name: 'TESTOSTERON',\n              label2: 'TESTOSTERON',\n              label: 'TESTOSTERON',\n              value: {\n                value: '',\n                unit: '',\n                range: [0, 0]\n              },\n              isInput: true\n            },\n            {\n              name: 'PROGESTERON',\n              label2: 'PROGESTERON',\n              label: 'PROGESTERON',\n              value: {\n                value: '',\n                unit: '',\n                range: [0, 0]\n              },\n              isInput: true\n            },\n            {\n              name: 'FT4',\n              label2: 'FT4',\n              label: 'FT4',\n              value: {\n                value: '',\n                unit: '',\n                range: [0, 0]\n              },\n              isInput: true\n            },\n            {\n              name: 'T4',\n              label: 'T4',\n              label2: 'T4',\n              value: {\n                value: '',\n                unit: '',\n                range: [0, 0]\n              },\n              isInput: true\n            },\n            {\n              name: 'FSH',\n              label2: 'FSH',\n              label: 'FSH',\n              value: {\n                value: '',\n                unit: '',\n                range: [0, 0]\n              },\n              isInput: true\n            },\n            {\n              name: 'TSH',\n              label2: 'TSH',\n              label: 'TSH',\n              value: {\n                value: '',\n                unit: '',\n                range: [0, 0]\n              },\n              isInput: true\n            },\n            {\n              name: 'AFP',\n              label2: 'AFP',\n              label: 'AFP',\n              value: {\n                value: '',\n                unit: '',\n                range: [0, 0]\n              },\n              isInput: true\n            },\n            {\n              name: 'Phosphat AFP',\n              label2: 'Phosphat AFP',\n              label: 'Phosphat AFP',\n              value: {\n                value: '',\n                unit: '',\n                range: [0, 0]\n              },\n              isInput: true\n            },\n            {\n              name: 'ESTRADIOL',\n              label2: 'ESTRADIOL',\n              label: 'ESTRADIOL',\n              value: {\n                value: '',\n                unit: '',\n                range: [0, 0]\n              },\n              isInput: true\n            },\n            {\n              name: 'LH',\n              label2: 'LH',\n              label: 'LH',\n              value: {\n                value: '',\n                unit: '',\n                range: [0, 0]\n              },\n              isInput: true\n            },\n            {\n              name: 'Cortisol',\n              label2: 'Cortisol',\n              label: 'Cortisol',\n              value: {\n                value: '',\n                unit: '',\n                range: [0, 0]\n              },\n              isInput: true\n            },\n            {\n              name: 'CRP',\n              label2: 'CRP',\n              label: 'CRP',\n              value: {\n                value: '',\n                unit: '',\n                range: [0, 0]\n              },\n              isInput: true\n            },\n          ]\n        },\n      ],\n      resultsExam: [],\n      examName: \"\",\n      subclinical: \"\",\n      ctime: '',\n      jobStepReady: [],\n      jobStepRunning: [],\n      selectedJob: [],\n      examResultId: \"\",\n      selectedJobStepRunning: {},\n      selectecPatientReady: {},\n      stepID: \"\",\n      showBarcode: false,\n      order_id: \"\",\n      activeTab: '1',\n      activeDevice: '4',\n      titleWaitForExam: \"Danh sách bệnh nhân chờ xét nghiệm:\",\n      titleWaitForExamDone: \"Danh sách bệnh nhân có kết quả xét nghiệm:\",\n      titleWaitForResult: \"Danh sách bệnh nhân chờ kết quả:\",\n      modalConfirm: {\n        message: \"\",\n        saveExamResult: false,\n      },\n      printResult: \"none\",\n    };\n  }\n\n  setNotiMessage = (notiMessage) => {\n    this.setState({ notiMessage });\n  };\n  setShowBarcode = (showBarcode) => {\n    this.setState({ showBarcode });\n  }\n\n  readyJobListAction = {\n    refresh: null,\n  }\n\n  runningJobListAction = {\n    refresh: null,\n  }\n\n  setValueService = (e, target, machineName) => {\n    let { resultsExam } = this.state\n    let value = e.target.value\n    this.state.resultsExam.forEach((result) => {\n      if (result.device == machineName) {\n        result[target] = {\n          value: e.target.value,\n          unit: '',\n          range: [null, null]\n        }\n      }\n    })\n    this.setState({ resultsExam: resultsExam })\n    console.log(this.state.resultsExam, 'fak ne');\n  }\n\n  refreshJobList = () => {\n    this.readyJobListAction.refresh();\n    this.runningJobListAction.refresh();\n  }\n\n  setDeviceValue = (e, device, attr) => {\n    if (e && e.target) {\n      let resultsExam = this.state.resultsExam\n      let devices = this.state.devices\n      devices.forEach(d => {\n        if (d.name == device.name) {\n          d.attr.forEach(a => {\n            if (a.name == attr.name) {\n              a.value.value = e.target.value\n              a.value.unit = a.value.unit\n              a.value.range = a.value.range\n            }\n          })\n        }\n      })\n      this.setState({ devices: devices })\n      resultsExam.forEach(el => {\n        if (el.device == 'Immune' && device.name == 'Immune') {\n          el[attr.label2] = {\n            value: e.target.value,\n            unit: '',\n            range: [null, null]\n          }\n        }\n        else if (el.device == 'Test' && device.name == 'Test') {\n          el[attr.label2] = {\n            value: e.target.value,\n            unit: '',\n            range: [null, null]\n          }\n        }\n      })\n      this.setState({ resultsExam: resultsExam })\n    }\n  }\n  selectTypeStatusTest = (tab) => {\n    this.setState({\n      resultsExam: {},\n      nameDeviceObj: {},\n      TestId: [],\n      nameDevice: [],\n      inWaitingData: false\n    });\n    let { activeTab } = this.state\n    if (activeTab !== tab) this.setState({ activeTab: tab })\n  }\n  selectTypeStatusDevice = (tab) => {\n    this.setState({\n      inWaitingData: false\n    });\n    let { activeDevice } = this.state\n    if (activeDevice !== tab) this.setState({ activeDevice: tab })\n  }\n\n  myRef = React.createRef();\n  handleClickOutside = e => {\n    if (!this.myRef.current.contains(e.target)) {\n      this.setState({ navActiveListPeople: false });\n    }\n  }\n\n  handleShowBarcode = () => { this.setShowBarcode(true) };\n\n  handleSwitchStatus = async () => {\n    let step = {\n      id: this.state.IdUpdate,\n      status: STATUS.RUNNING\n    }\n    await ExamService.takeSample(step)\n  }\n\n  handleResultExam = (resultExam) => {\n    let TestId = [], nameDevice = [], resultsExam = [], nameDeviceObj = {};\n    for (let i = resultExam.length - 1; i >= 0; i--) {\n      let re = resultExam[i]\n      if (re.sample_id) {\n        if (re.device == 'BC-2800' && typeof nameDeviceObj.BC2800 === \"undefined\") {\n          nameDeviceObj.BC2800 = 'BC-2800';\n          TestId.push(re.sample_id);\n          nameDevice.push(re.device);\n          resultsExam.push(re);\n        } else if (re.device == 'BS-200E' && typeof nameDeviceObj.BS200E === \"undefined\") {\n          nameDeviceObj.BS200E = 'BS-200E';\n          TestId.push(re.sample_id);\n          nameDevice.push(re.device);\n          resultsExam.push(re);\n        } else if (re.device == 'UA-66' && typeof nameDeviceObj.UA66 === \"undefined\") {\n          nameDeviceObj.UA66 = 'UA-66';\n          TestId.push(re.sample_id);\n          nameDevice.push(re.device);\n          resultsExam.push(re);\n        } else if (re.device == 'Test' && typeof nameDeviceObj.Test === \"undefined\") {\n          nameDeviceObj.Test = 'Test';\n          TestId.push(re.sample_id);\n          nameDevice.push(re.device);\n          resultsExam.push(re);\n        } else if (re.device == 'Other' && typeof nameDeviceObj.Other === \"undefined\") {\n          nameDeviceObj.Other = 'Other';\n          TestId.push(re.sample_id);\n          nameDevice.push(re.device);\n          resultsExam.push(re);\n        } else if (re.device == 'Immune' && !nameDeviceObj.IMMUNE) {\n          nameDeviceObj.IMMUNE = 'Immune';\n          TestId.push(re.sample_id);\n          nameDevice.push(re.device);\n          resultsExam.push(re);\n        }\n      }\n    }\n    if (this.state.activeTab === \"3\") {\n      TestId = [];\n      nameDevice = [];\n    }\n    this.setState({\n      resultsExam: resultsExam,\n      nameDeviceObj: nameDeviceObj,\n      TestId: TestId,\n      nameDevice: nameDevice,\n    });\n    console.log(this.state.resultsExam, 'exam nè');\n  }\n\n  checkSample(resultsExam) {\n    for (let re of resultsExam) {\n      if (re.sample_id) {\n        return true;\n      }\n    }\n  }\n\n  handleDataTable = async (examResultId) => {\n    let res = await ExamService.getResultsByStepId(examResultId);\n    console.log('handleDataTable', res)\n    let TestTotal = res.data;\n    let IdUpdate = res.data.id\n    let nameServiceTest = res.data.order.items.map(e => e.ref_value.name);\n    this.setState({\n      nameServiceTest: nameServiceTest,\n      TestTotal: TestTotal,\n      IdUpdate: IdUpdate\n    });\n    let resultsExam = res.data.results;\n    if (!this.checkSample(resultsExam)) {\n      await ExamService.createSampleIdByRef(this.state.order_id);\n      return this.handleDataTable(examResultId);\n    }\n    this.handleResultExam(resultsExam)\n    resultsExam.forEach(resultExam => {\n      let deviceName = resultExam.device\n      this.state.devices.forEach(device => {\n        if (device.name == deviceName) {\n          Object.entries(resultExam).map((key) => {\n            let exist = false;\n            device.attr.forEach(e => {\n              if (e.label2 == key[0]) {\n                exist = true\n                e.value = key[1]\n              }\n            });\n            if (!exist) {\n              let attr = {\n                name: key[0],\n                label: key[0],\n                label2: key[0],\n                value: {\n                  value: key[1].value,\n                  unit: key[1].unit,\n                  range: key[1].range\n                },\n                isInput: false\n              }\n              device.attr.unshift(attr);\n            }\n          });\n        }\n      });\n    });\n  }\n\n  createSample = async (order_id) => {\n    await ExamService.createSampleIdByRef(order_id);\n    await this.handleDataTable(this.state.examResultId)\n  }\n\n  updateJobId = async (patient) => {\n    let ctime = new Date().toLocaleString('en-GB');\n    let res = await DoctorServices.getJobById({ id: patient.job_id });\n    res.state.subclinical = res.state.subclinical || {};\n    this.setState({\n      selectedJob: res,\n      prognostic: res.state,\n      ctime: ctime,\n      subclinical: res.state.textDiagnosis,\n      selectedJobStepRunning: patient,\n      order_id: patient.order_id,\n      examResultId: patient.id,\n      selectecPatientReady: patient.order.customer,\n      stepID: patient.id,\n    });\n  }\n\n  onSelectJobRunning = async (patient) => {\n    this.setState({\n      inWaitingData: false\n    });\n    if (patient) {\n      await this.updateJobId(patient)\n      await this.handleDataTable(this.state.examResultId);\n    }\n    this.setState({\n      inWaitingData: true\n    })\n  }\n\n  handleResetForm = () => {\n    this.setState({ resultsBC2800: undefined })\n    this.setState({ resultsUA66: undefined })\n    this.setState({ resultsBS200E: undefined })\n  }\n\n  handleConfirm = (text) => {\n    this.setState((state) => ({\n      ...state,\n      modalConfirm: {\n        ...state.modalConfirm,\n        message: text,\n      },\n    }));\n  }\n\n  handleUpdateResult = async (argument) => {\n    let { resultsExam, devices } = this.state;\n    let id = this.state.stepID;\n    // for(let i=0; i< resultsExam.length; i++){\n    //   let res = resultsExam[i];\n    //    if(res.device===\"Immune\"){\n    //     let immune = devices.find(e=>e.name==='Immune');\n    //     for(let j = immune.attr.length - 1; j > immune.attr.length - 5; j--){\n    //       let attr = immune.attr[j];\n    //       resultsExam[i][attr.label2] = attr.value;\n    //     }\n    //   }\n    // }\n    let data = {\n      id: id,\n      results: resultsExam\n    }\n    if (argument) {\n      try {\n        this.setState((state) => ({\n          ...state,\n          modalConfirm: {\n            ...state.modalConfirm,\n            message: \"\",\n          },\n        }));\n        ExamService.updateExamResult(data).then((res) => {\n          this.refreshJobList()\n        }).catch(err => {\n          console.log(err)\n        })\n        await this.setState((state) => ({\n          ...state,\n          printResult: \"block\",\n        }));\n        await this.print(\"printExam\");\n        await this.setState((state) => ({\n          ...state,\n          printResult: \"none\",\n        }));\n      } catch (error) {\n        throw error;\n      }\n    } else {\n      this.setState((state) => ({\n        ...state,\n        modalConfirm: {\n          ...state.modalConfirm,\n          message: \"\",\n        },\n      }));\n    }\n  }\n\n  handleChangeGetValue = (e) => {\n    let doctor_write = e.target.value\n    this.setState({ doctor_write: doctor_write })\n  }\n\n  printBarcode = async () => {\n    this.setState({ inWaitingData: true })\n    await ShareService.printBarCode(\"barcodeCanvas\");\n    await this.handleSwitchStatus()\n    this.setState({\n      inWaitingData: false,\n      resultsExam: [],\n      nameDeviceObj: {},\n      TestId: [],\n      nameDevice: [],\n    })\n  }\n\n  print = (id) => {\n    ExamService.print(id);\n  }\n\n  handleChangeResult = (index, id, value) => {\n    const newItems = this.state.examResult.result;\n    newItems[index].ref_value.service_step.map(el => {\n      if (el.id === id) {\n        el.resultValue = value;\n        return el\n      }\n    })\n    this.setState({\n      result: newItems\n    })\n\n  }\n\n  render() {\n    const location_id = ExamService.location.id;\n    let { activeTab, notiMessage, inWaitingData, nameDevice } = this.state;\n\n    return (\n      <div className=\"examEdit\">\n        <ModalNoti\n          message={notiMessage}\n          done={() => this.setNotiMessage(\"\")}\n        />\n        <Row className=\"mb-5 title-card\">\n          <Col xs=\"6\">{ExamService.location?.name}</Col>\n          <Col xs=\"6\" className=\"end pointer pr-30\" onClick={() => {\n            ExamService.location = {};\n            window.location.replace('/app/exam')\n          }}><u>Chuyển phòng</u></Col>\n        </Row>\n        <Row className=\"content\">\n          <Col sm=\"8\" className=\"content-left\">\n            <Row className=\"info-customer customCard\">\n              {inWaitingData ? <CustomerForm data={this.state.selectecPatientReady} ></CustomerForm> : <CustomerForm />}\n            </Row>\n            {\n              (inWaitingData)\n                ? <ExamResult\n                  nameDeviceObj={this.state.nameDeviceObj}\n                  prognostic={this.state.prognostic}\n                  setValueService={this.setValueService}\n                  devices={this.state.devices}\n                  setDeviceValue={this.setDeviceValue}\n                  resultsExam={this.state.resultsExam}\n                  examEditSetState={(data) => this.setState(data)}\n                  examEditState={this.state}\n                />\n                : \"\"\n            }\n          </Col>\n          <Col sm=\"4\" className=\"content-right\">\n            <div ref={this.myRef}>\n              <Nav tabs className=\"selectTabs\">\n                <NavItem className=\"titleTabs\">\n                  <NavLink className={classnames({ active: activeTab === '1' })} onClick={() => { this.selectTypeStatusTest('1'); }}><b className=\"title-card\">Bệnh nhân chờ lấy mẫu</b></NavLink>\n                </NavItem>\n                <NavItem className=\"titleTabs\">\n                  <NavLink className={classnames({ active: activeTab === '3' })} onClick={() => { this.selectTypeStatusTest('3'); }}><b className=\"title-card\">Bệnh nhân đang chờ XN</b></NavLink>\n                </NavItem>\n                <NavItem className=\"titleTabs\">\n                  <NavLink className={classnames({ active: activeTab === '2' })} onClick={() => { this.selectTypeStatusTest('2'); }}><b className=\"title-card\">Bệnh nhân có kết quả</b></NavLink>\n                </NavItem>\n              </Nav>\n\n              <TabContent activeTab={activeTab} >\n                <TabPane tabId=\"1\" className=\"customCard\">\n                  <PatientList\n                    examEditState={this.state}\n                    examEditSetState={(data) => this.setState(data)}\n                    selectedJob={this.state.selectedJob}\n                    order_id={this.state.order_id}\n                    titleOfList={this.state.titleWaitForExam}\n                    onSelectJobStep={(jobStep) => this.onSelectJobRunning(jobStep)}\n                    location_id={location_id}\n                    status={[STATUS.READY]}\n                    action={this.readyJobListAction}\n                    type={SERVICE_TYPE.TEST}\n                    mode=\"exam\"\n                  />\n                </TabPane>\n                <TabPane tabId=\"3\" className=\"customCard\">\n                  <PatientList\n                    checkSelectBarcode={true}\n                    examEditState={this.state}\n                    examEditSetState={(data) => this.setState(data)}\n                    selectedJob={this.state.selectedJob}\n                    order_id={this.state.order_id}\n                    titleOfList={this.state.titleWaitForExam}\n                    onSelectJobStep={(jobStep) => this.onSelectJobRunning(jobStep)}\n                    location_id={location_id}\n                    status={[STATUS.RUNNING]}\n                    action={this.readyJobListAction}\n                    type={SERVICE_TYPE.TEST}\n                    mode=\"exam\"\n                  />\n                </TabPane>\n                <TabPane tabId=\"2\" className=\"customCard\">\n                  <PatientList\n                    examEditState={this.state}\n                    examEditSetState={(data) => this.setState(data)}\n                    selectedJob={this.state.selectedJob}\n                    order_id={this.state.order_id}\n                    titleOfList={this.state.titleWaitForExamDone}\n                    onSelectJobStep={(jobStep) => this.onSelectJobRunning(jobStep)}\n                    location_id={location_id}\n                    status={[STATUS.DONE]}\n                    action={this.readyJobListAction}\n                    type={SERVICE_TYPE.TEST}\n                    mode=\"exam\"\n                  />\n                </TabPane>\n              </TabContent>\n            </div>\n            <Row className=\"btn-Comfirm end\" style={{ marginTop: \"10px\" }}>\n              <Col sm=\"12\">\n                {\n                  (inWaitingData && nameDevice.length && (activeTab === '3' || activeTab === '1'))\n                    ? <Button outline color=\"primary\"\n                      onClick={() => {\n                        this.printBarcode()\n                      }}\n                    >\n                      Lấy mẫu\n                    </Button>\n                    : \"\"\n                }\n                {\" \"}\n                <Modal isOpen={this.state.showBarcode} >\n                  <ModalHeader>\n                    Lịch sử Khám\n                  </ModalHeader>\n                  <ModalBody>\n                  </ModalBody>\n                  <ModalFooter><Button>Close</Button></ModalFooter>\n                </Modal>\n\n                {\n                  (inWaitingData && (activeTab === '2' || activeTab === '3'))\n                    ? <Button color=\"primary\" onClick={() => {\n                      this.handleUpdateResult()\n                      this.handleConfirm(\"Bạn chắc chắn muốn cập nhật kết quả?\")\n                    }}\n                    >\n                      Gửi kết quả\n                    </Button>\n                    : \"\"\n                }\n              </Col>\n            </Row>\n          </Col>\n\n        </Row>\n\n        <Row>\n          <Col sm={12}>\n            <ExamResultPaper1\n              sendReq={this.state.sendReq}\n              examEditSetState={(data) => this.setState(data)}\n              examEditState={this.state}\n              setDeviceValue={this.setDeviceValue}\n              devices={this.state.devices}\n              nameDeviceObj={this.state.nameDeviceObj}\n              prognostic={this.state.prognostic}\n              setValueService={this.setValueService}\n              style={this.state.printResult}\n              selectedJobStepRunning={this.state.selectedJobStepRunning}\n              ctime={this.state.ctime}\n              subclinical={this.state.subclinical}\n              resultsExam={this.state.resultsExam}\n              examEditSetState={(data) => this.setState(data)}\n              examEditState={this.state}\n            />\n          </Col>\n        </Row>\n        <PrintBarcode\n          TestId={this.state.TestId}\n          nameDevice={this.state.nameDevice}\n          cm_name={this.state.selectecPatientReady.full_name}\n        ></PrintBarcode>\n        <ModalConfirm\n          message={this.state.modalConfirm.message}\n          answer={this.handleUpdateResult}\n        />\n      </div>\n    )\n  }\n}\n\nexport default ExamEdit;","import React, { Component } from \"react\";\nimport { Row, Col, Button } from \"reactstrap\";\nimport { LOCALSTORAGE } from \"../../../Constances/const\";\n\nclass LocationSelecter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n    componentDidMount() {\n\n    }\n    updateStorage = (locInfo) => {\n        sessionStorage.setItem(LOCALSTORAGE.LOCATION, JSON.stringify(locInfo));\n    }\n\n    render() {\n        let { list, onSelect } = this.props;\n\n        return (\n            <div className=\"locationSelecterContainer customCard\">\n                <h1 className=\"header\">Mời chọn phòng</h1>\n                <Row>\n                    {\n                        list && list.length ? list.map(el => {\n                            return (\n                                <Col sm='3' className=\"item\">\n                                    <Button outline color=\"primary\" onClick={() => {\n                                        onSelect(el.id, el.name);\n                                        this.updateStorage(el);\n                                    }}>{el.name}</Button>\n                                </Col>\n                            )\n                        }) : <p>----------------------</p>\n                    }\n                </Row>\n\n                  </div>\n    );\n  }\n}\n\nexport default LocationSelecter;\n","import React from \"react\";\nimport { Form } from \"../../../../Shared\";\nimport instance from \"../../Shared/ExamService\";\nimport LocationSelecter from \"../../../../Shared/Components/LocationSelecter/LocationSelecter\";\nimport { withRouter } from \"react-router\";\nimport {LOCATION_TYPE} from '../../../../Constances/const'\n\nclass SelectRoom extends Form {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationList: [],\n      selectedLocation: -1,\n    };\n  }\n  componentDidMount = async () => {\n    const listLoc = await instance.getListLocation();\n    const result = listLoc.filter((item) => item.type === LOCATION_TYPE.TESTING);\n    \n    this.setState({\n        locationList: result,\n    })\n    // this.setState({\n    //   locationList: listLoc,\n    // });\n  };\n\n  onSelect = (id) => {\n    this.props.history.push(\"exam/room/\" + id);\n  };\n\n  render() {\n    return (\n      <div style={{ padding: \"20px\" }}>\n        <LocationSelecter list={this.state.locationList} onSelect={this.onSelect}></LocationSelecter>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SelectRoom);\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { AuthService } from \"../../Shared\";\nimport { ROLE } from \"../../Constances/const\";\nimport ExamService from \"./Shared/ExamService\";\nimport ExamEdit from \"./Components/Exam/ExamEdit\";\nimport SelectRoom from \"./Components/SelectRoom/SelectRoom\";\nimport { LOCATION_TYPE } from \"../../Constances/const\";\nimport ExamResultPaper1 from '../Exam/Components/ExamResultPaper/ExamResultPaper1'\nclass Exam extends Component {\n  render() {\n    const { path } = this.props.match;\n    return (\n      <div className=\"Exam\">\n        <Switch>\n          <Route exact path={`${path}/`} render={() => {\n            if (!AuthService.hasRole(ROLE.TEST_OPERATOR) && !AuthService.hasRole(ROLE.ADMIN)) {\n              return (<Redirect to=\"/app/org/notauthorized\" ></Redirect>)\n            }\n            if (!ExamService.location.id || ExamService.location.type !== LOCATION_TYPE.TESTING) {\n              return (<SelectRoom></SelectRoom>)\n            } else {\n              return (<Redirect to={`${path}/room/${ExamService.location.id}`} ></Redirect>)\n            }\n          }} />\n          <Route exact path={`${path}/room/:id`} component={ExamEdit} />\n          <Route exact path={`${path}/12345`} component={ExamResultPaper1} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Exam;\n","import React, { Component } from 'react';\nimport { Col, Row, Input, Label } from 'reactstrap';\n\nclass CustomerBasic extends Component {\n\n    checkMale = gender => {\n        if (gender === 'Nam') return true;\n        else return false;\n    }\n\n    checkFemale = gender  => {\n        if (gender === 'Nữ') return true;\n        else return false;\n    }\n\n    render() {\n        const { full_name, idnum, gender, birthday } = this.props.customer;\n        const { onChangeName, onChangeBirthday, onChangeGender, onChangeIdent } = this.props;\n        return (\n            <div className=\"customer-basic\">\n                <p>1. Thông tin cơ bản:</p>\n                <Row>\n                    <Col xs=\"4\">Họ tên <span className=\"customer-basic-important\">*</span>: </Col>\n                    <Col><Input type=\"text\" placeholder=\"\" value={full_name} \n                                onChange = {e => onChangeName(e.target.value)}>\n                        </Input>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs=\"4\">CMND/Thẻ CC: </Col>\n                    <Col><Input type=\"text\" placeholder=\"\" value={idnum}\n                                onChange = {e => onChangeIdent(e.target.value)}>\n                        </Input>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs=\"4\">Giới tính <span className=\"customer-basic-important\">*</span>: </Col>\n                    <Col className=\"customer-basic-select\">\n                        <Label check><Input type=\"checkbox\" \n                            onChange = {e => onChangeGender(e.target.value)}\n                            value=\"Nam\" checked={this.checkMale(gender)}/> Nam\n                        </Label>\n                        <Label check><Input type=\"checkbox\"\n                            onChange = {e => onChangeGender(e.target.value)}\n                            value=\"Nữ\" checked={this.checkFemale(gender)}/> Nữ\n                        </Label>  \n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs=\"4\">Ngày sinh <span className=\"customer-basic-important\">*</span>: </Col>\n                    <Col><Input type=\"date\" placeholder=\"\" value={birthday}\n                                onChange = {e => onChangeBirthday(e.target.value)}>\n                        </Input>\n                    </Col>\n                </Row>\n                <p><span className=\"customer-basic-important\">*</span> : Các thông tin bắt buộc. </p>\n            </div>\n        );\n    }\n}\n\nexport default CustomerBasic;","import React, { Component } from 'react';\nimport { Col, Row, Input } from 'reactstrap';\n\nclass CustomerContact extends Component {\n\n    render() {\n        const { full_name, phone_number, address, email, relation } = this.props.customer_contact;\n        const { onChangeName, onChangePhone, onChangeAddress,\n                onChangeEmail, onChangeRelation, onSearchPhone } = this.props;\n        return (\n            <div className=\"customer-contact\">\n                <p> 2. Thông tin liên hệ (khách hàng hoặc người thân):</p>\n                    <Row>\n                        <Col xs=\"4\">Họ tên <span className=\"customer-contact-important\">*</span>: </Col>\n                        <Col><Input type=\"text\" placeholder=\"\" value={full_name} \n                                    onChange = {e => onChangeName(e.target.value)}>\n                            </Input>\n                         </Col>\n                    </Row>\n                    <Row>\n                        <Col xs=\"4\">Số ĐT <span className=\"customer-contact-important\">*</span>: </Col>\n                        <Col><Input type=\"text\" placeholder=\"\" value={phone_number}\n                                    onChange = {e => onChangePhone(e.target.value)}\n                                    onBlur= {() => onSearchPhone(phone_number)}>\n                            </Input>\n                            </Col>\n                    </Row>\n                    <Row>\n                        <Col xs=\"4\">Địa chỉ: </Col>\n                        <Col><Input type=\"text\" placeholder=\"\" value={address}\n                                    onChange = {e => onChangeAddress(e.target.value)}>   \n                            </Input>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs=\"4\">Email: </Col>\n                        <Col><Input type=\"email\" placeholder=\"\" value={email}\n                                    onChange = {e => onChangeEmail(e.target.value)}>\n                            </Input>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs=\"4\">Quan hệ: </Col>\n                        <Col><Input type=\"text\" placeholder=\"Bố, mẹ, anh, chị,... (nếu có)\" value={relation}\n                                    onChange = {e => onChangeRelation(e.target.value)}>   \n                            </Input>\n                        </Col>          \n                    </Row>\n            </div>\n        );\n    }\n}\n\nexport default CustomerContact;","import React, { Component } from 'react';\nimport { Col, Row, Button } from 'reactstrap';\n\nclass CustomerResult extends Component {\n\n    render() {\n        const { full_name, idnum } = this.props.search_customer;\n        const { showHistory, onHistory, onMatchHistory } = this.props;\n        const { time } = this.props.search_history;\n\n        return (\n            <div className=\"customer-result\">\n                <div className=\"customer-result-header\">\n                    <Button className=\"history-btn\" color=\"success\" onClick={() => onHistory()}>Kết quả tìm kiếm: </Button>\n                </div>\n                { showHistory ?\n                    (   \n                        <div className=\"history-table\">\n                            <p> Thông tin cơ bản: </p>\n                            <Row>\n                                <Col xl=\"3\" lg=\"3\" md=\"3\" sm=\"12\" xs=\"12\">\n                                    <Row>\n                                        <Col xl=\"6\" lg=\"6\" md=\"6\" sm=\"12\" xs=\"12\">Họ tên: </Col>\n                                        <Col>{full_name}</Col>\n                                    </Row>\n                                </Col>\n                                <Col xl=\"3\" lg=\"3\" md=\"3\" sm=\"12\" xs=\"12\">\n                                    <Row>\n                                        <Col xl=\"5\" lg=\"5\" md=\"5\" sm=\"12\" xs=\"12\">CMND/CC: </Col>\n                                        <Col>{idnum}</Col>\n                                    </Row>\n                                </Col>\n                                <Col xl=\"6\" lg=\"6\" md=\"6\" sm=\"12\" xs=\"12\">\n                                    <Row>\n                                        <Col xl=\"5\" lg=\"5\" md=\"5\" sm=\"12\" xs=\"12\">Ngày đã khám: </Col>\n                                        <Col>{time}</Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                            \n                            <div className=\"customer-result-footer\">\n                                <Button className=\"history-btn\" color=\"info\"\n                                    onClick={() => onMatchHistory()}>Lấy dữ liệu vào bảng</Button>\n                            </div>\n                        </div>\n                    ) : (<span></span>)\n                } \n            </div>\n        );\n    }\n}\n\nexport default CustomerResult;","import { Http } from '../../../Helper/Http';\nimport UtilService from '../../../Shared/Services/UtilService';\n\nconst API_ENDPOINT = {\n    addCm: \"/customer/customer/create\",\n    addCmContact: \"/customer/contact/add\",\n    modifyCm: \"/customer/customer/update\",\n    modifyCmContact: \"/customer/contact/update\",\n    getCmByPhone: \"/customer/customer/search\"\n}\n\nclass CustomerService extends UtilService {\n    constructor() {\n        super()\n        if (CustomerService._instance) {\n            return CustomerService._instance\n        }\n        CustomerService._instance = this;\n    }\n\n    getCmByPhone = async phone_number =>\n        (await Http.post(API_ENDPOINT.getCmByPhone, {phone_number})).data\n    \n\n    addCm = async customer => \n        (await Http.post(API_ENDPOINT.addCm, customer)).data\n\n    addCmContact = async customer_contact => \n        (await Http.post(API_ENDPOINT.addCmContact, customer_contact)).data\n\n    modifyCm = async customer => \n        (await Http.post(API_ENDPOINT.modifyCm, customer)).data\n    \n\n    modifyCmContact = async customer_contact =>\n        (await Http.post(API_ENDPOINT.modifyCmContact, customer_contact)).data\n\n    \n}\n\nconst instance = new CustomerService();\n\nexport default instance;","import React, { Component, Fragment } from 'react';\nimport { Col, Row, Button } from 'reactstrap';\n// import { addCm, modifyCm, addCmContact, modifyCmContact, getCmByPhone } from '../Shared/CustomerAPI';\nimport ModalConFirm from '../../../../Shared/Components/ModalConfirm/ModalConfirm';\nimport CustomerBasic from '../CustomerBasic/CustomerBasic';\nimport CustomerContact from '../CustomerContact/CustomerContact';\nimport CustomerResult from '../CustomerResult/CustomerResult';\nimport instance from '../../Shared/CustomerService';\n\nconst initialState = {\n    customer: {\n        full_name: '', idnum: '',\n        gender: '', birthday: ''\n    },\n    customer_contact: {\n        full_name: '', phone_number: '',\n        address: '', email: '', relation: ''\n    },\n    search_customer: {\n        full_name: '', idnum: '',\n        gender: '', birthday: '', id: ''\n    },\n    search_contact: {\n        full_name: '', phone_number: '',\n        address: '', email: '', relation: ''\n    },\n    search_history: {\n        time: '',\n    },\n    old_customer: false,\n    showHistory: true,\n    modalConfirm: { \n        message: '',\n        modalMatchDataDisplay: false,\n        modalCancelDisplay: false , \n        modalSaveDisplay: false\n    }\n}\n\nclass Customer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n        this.doAddOrModifyCustomer = this.doAddOrModifyCustomer.bind(this);\n    }\n\n\n    changeName = full_name => {\n        this.setState(state => ({\n            ...state,\n            customer: {\n                ...state.customer,\n                full_name\n            }\n        }));\n    }\n\n    changeIdent = idnum => {\n        this.setState(state => ({\n            ...state,\n            customer: {\n                ...state.customer,\n                idnum\n            }\n        }));\n    }\n\n    changeGender = gender => {\n        this.setState(state => ({\n            ...state,\n            customer: {\n                ...state.customer,\n                gender\n            }\n        }));\n    }\n\n    changeBirthday = birthday => {\n        this.setState(state => ({\n            ...state,\n            customer: {\n                ...state.customer,\n                birthday\n            }\n        }));\n    }\n\n    handleCancel = () => {\n        this.setState(state => ({\n            ...state,\n            modalConfirm: {\n                ...state.modalConfirm,\n                message: 'Chắc chắn huỷ ?',\n                modalCancelDisplay: true\n            }\n        }));  \n    }\n\n    doCancel = argument => {\n        if (argument) {\n            this.setState(initialState);\n        } else {\n            this.setState(state => ({\n                ...state,\n                modalConfirm: {\n                    ...state.modalConfirm,\n                    message: '',\n                    modalCancelDisplay: false\n                }\n            }));\n        }\n    }\n\n    handleSave = () => {\n        this.setState(state => ({\n            ...state,\n            modalConfirm: {\n                ...state.modalConfirm,\n                message: 'Chắc chắn lưu ?',\n                modalSaveDisplay: true\n            }\n        })); \n    }\n\n    doAddOrModifyCustomer = async argument => {\n        const { id } = this.state.search_customer.id;\n        if (argument) {\n            try {\n                if (!id) {\n                    await instance.addCm(this.state.customer);\n                    await instance.addCmContact(this.state.customer_contact);\n                    \n                }\n                if (id) {\n                    await instance.modifyCm(id, this.state.customer);\n                    await instance.modifyCmContact(id, this.state.customer_contact);\n                } \n                \n                \n            } catch (err) {\n                throw (err);\n            } finally {\n                this.setState(initialState);\n            }\n        } else {\n            this.setState(state => ({\n                ...state,\n                modalConfirm: {\n                    ...state.modalConfirm,\n                    message: '',\n                    modalSaveDisplay: false\n                }\n            }));\n        }\n    }\n\n    showOrHideHistory = () => {\n        this.setState(state => ({\n            ...state,\n            showHistory: !state.showHistory\n        }));\n    }\n\n    handleMatchHistory = () => {\n        this.setState(state => ({\n            ...state,\n            modalConfirm: {\n                message: 'Chắc chắn lấy dữ liệu vào bảng ?',\n                modalMatchDataDisplay: true,\n                modalCancelDisplay: false,\n                modalSaveDisplay: false,\n            }\n        })); \n    }\n\n    matchHistory = argument => {\n        if (argument) {\n            const { full_name, idnum,\n                birthday, gender } = this.state.search_customer;\n\n\n            this.setState(state => ({\n                ...state,\n                customer: {\n                    full_name, idnum, birthday, gender\n                },\n                customer_contact: {\n                    full_name: this.state.search_contact.full_name,\n                    phone_number: this.state.search_contact.phone_number,\n                    address: this.state.search_contact.address,\n                    email: this.state.search_contact.email,\n                    relation: this.state.search_contact.relation,\n                },\n                modalConfirm: {\n                    ...state.modalConfirn,\n                    modalMatchDataDisplay: false,\n                }\n            }));\n        } else {\n            this.setState(state => ({\n                ...state,\n                modalConfirm: {\n                    ...state.modalConfirn,\n                    modalMatchDataDisplay: false,\n                }\n            }));\n        }\n    } \n\n    changeContactName = full_name => {\n        this.setState(state => ({\n            ...state,\n            customer_contact: {\n                ...state.customer_contact,\n                full_name\n            }\n        }));\n    }\n\n    changeContactPhone = phone_number => {\n        this.setState(state => ({\n            ...state,\n            customer_contact: {\n                ...state.customer_contact,\n                phone_number\n            }\n        }));\n    }\n    \n    changeContactAddress = address => {\n        this.setState(state => ({\n            ...state,\n            customer_contact: {\n                ...state.customer_contact,\n                address\n            }\n        }));\n    }\n\n    changeContactEmail = email => {\n        this.setState(state => ({\n            ...state,\n            customer_contact: {\n                ...state.customer_contact,\n                email\n            }\n        }));\n    }\n\n    changeContactRelation = relation => {\n        this.setState(state => ({\n            ...state,\n            customer_contact: {\n                ...state.customer_contact,\n                relation\n            }\n        }));\n    }\n\n    match_search_customer = result => {\n        if (result !== null) {\n            const { full_name, gender, birthday, idnum, id } = result;\n            this.setState(state => ({\n            ...state,\n            search_customer: {\n                full_name, gender, birthday, idnum, id\n            }}));\n        } return\n        \n    }\n    \n\n    match_search_contact = result => {\n        if (result !== null) {\n            const { full_name, phone_number, address, email, relation } = result;\n            this.setState(state => ({\n            ...state,\n            search_contact: {\n                full_name, phone_number, address, email, relation\n            }}));\n        } else return \n        \n    }\n\n    match_search_history = result => {\n        if (result !== null) {\n            const { time } = result;\n            this.setState(state => ({\n            ...state,\n            search_history: {\n                time: new Date(time).toLocaleDateString('en-CA')\n            }}));\n        } else return\n        \n    }\n\n    matchResponseToSearch = response => {\n        this.match_search_customer(response[0]);\n        this.match_search_contact(response[1]);\n        this.match_search_history(response[2]);\n    }\n\n    handleSearchPhone = async phone => {\n        try {\n            const response = await instance.getCmByPhone(phone);\n            if (response) {\n                this.matchResponseToSearch(response);\n                this.setState(state => ({\n                    ...state,\n                    old_customer: true\n                }));\n            }\n            else {\n                this.setState(state => ({\n                    ...state,\n                    old_customer: false\n                }));\n            }\n        } catch (err) {\n            throw (err);\n        }\n    }\n\n    render() {\n        const { customer, search_customer, customer_contact, search_contact,\n                search_history, old_customer, showHistory } = this.state;\n        const { message, modalMatchDataDisplay, \n            modalCancelDisplay, modalSaveDisplay } = this.state.modalConfirm;\n\n        return (\n            <Fragment>\n                <div className=\"customer\">\n                    <h2>Thông tin bệnh nhân</h2>\n                    <Row>\n                        <Col xl=\"6\" lg=\"6\" md=\"6\" sm=\"12\" xs=\"12\">\n                            <CustomerBasic search_customer={search_customer} customer={customer}\n                            onChangeName={this.changeName} onChangeGender={this.changeGender}\n                            onChangeBirthday={this.changeBirthday} onChangeIdent={this.changeIdent}\n                             />\n                        </Col>\n                        <Col xl=\"6\" lg=\"6\" md=\"6\" sm=\"12\" xs=\"12\">\n                            <CustomerContact \n                            customer_contact={customer_contact}\n                            search_contact={search_contact}\n                            onChangeName={this.changeContactName} \n                            onChangePhone={this.changeContactPhone}\n                            onChangeAddress={this.changeContactAddress}\n                            onChangeEmail={this.changeContactEmail}\n                            onChangeRelation={this.changeContactRelation}\n                            onSearchPhone={this.handleSearchPhone}\n                             />\n                        </Col>\n                    </Row>\n                    <Row className=\"row\">\n                        <Col className=\"customer-button-area\">\n                            <Button className=\"cancel-btn\" outline color=\"primary\"\n                             title=\"cancel\" onClick = {this.handleCancel}>Huỷ</Button>\n                            <Button onClick={this.handleSave}outline color=\"primary\" title=\"save\">Lưu</Button>\n                        </Col>\n                    </Row>\n                    { old_customer ? <CustomerResult onHistory={this.showOrHideHistory}\n                                    showHistory={showHistory} search_customer={search_customer}\n                                    search_history={search_history} onMatchHistory={this.handleMatchHistory}\n                    /> : <span></span> }\n                </div>\n                {\n                    modalMatchDataDisplay ?  <ModalConFirm message={message} answer={this.matchHistory}/> \n                    : <span></span>\n                }\n                {\n                    modalCancelDisplay ?  <ModalConFirm message={message} answer={this.doCancel}/> \n                    : <span></span>\n                }\n                {\n                    modalSaveDisplay ?  <ModalConFirm message={message} answer={this.doAddOrModifyCustomer}/> \n                    : <span></span>\n                }\n            </Fragment>\n        )\n    }\n}\n\nexport default Customer","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\n\n\nclass ItemLocation extends Component {\n\n  onDelete = (id) => {\n    this.props.onDelete(id);\n  };\n\n  render() {\n    let { list_location, index } = this.props;\n    return (\n        <tr key={index}>\n          <td>{index + 1}</td>\n          <td>{list_location.location_type_name}</td>\n          <td>{list_location.code}</td>\n          <td>{list_location.name}</td>\n          <td>\n            <div className=\"btnControl\">\n              <Link to={`./location/${list_location.id}`} className=\"btn btn-primary btn-sm\">\n                Sửa\n              </Link>{' '}\n              <Button className=\"btnDanger btn-sm\" color=\"danger\" onClick={() => this.onDelete(list_location.id)}>\n                Xóa\n              </Button>\n            </div>\n          </td>\n        </tr>\n    );\n  }\n}\n\nexport default ItemLocation;\n","import { Http } from \"../../../../Helper/Http.js\";\n\nconst API_ENDPOINT = {\n  //////// LOCATION\n  LISTLOCATION: '/location/list',\n  CREATELOCATION: '/location/create',\n  EDITLOCATION: '/location/update',\n  GETEDITLOCATION: '/location/get?id=',\n  DELETELOCATION: '/location/delete',\n  GETLISTTYPELOCATION: '/location/type/list',\n\n  //// TYPE\n\n  CREATELOCATION_TYPE: '/location/type/create',\n  EDITLOCATION_TYPE: '/location/type/update',\n  GETEDITLOCATION_TYPE: '/location/type/get?id=',\n  DELETELOCATION_TYPE: '/location/type/delete',\n\n}\n\nclass LocationService {\n  constructor() {\n    if (LocationService._instance) {\n      return LocationService._instance;\n    }\n    LocationService._instance = this;\n\n    // ... Your rest of the constructor code goes after this\n  }\n\n  ///////////////// API LOCATION ///////////////////\n\n\n  // get data\n  listLocation() {\n    return Http.get(API_ENDPOINT.LISTLOCATION);\n  }\n  // get Delete\n  deleteLocation(data) {\n    return Http.post(API_ENDPOINT.DELETELOCATION, data);\n  }\n\n  // creat Location\n  createLocation(data) {\n    return Http.post(API_ENDPOINT.CREATELOCATION, data);\n  }\n\n  // update Location\n  updateLocation(data) {\n    return Http.post(API_ENDPOINT.EDITLOCATION, data)\n  }\n\n  // getUpdateLocation \n  getUpdateLocation(id) {\n    return Http.get(API_ENDPOINT.GETEDITLOCATION + id)\n  }\n\n  listTypeLocation() {\n    return Http.get(API_ENDPOINT.GETLISTTYPELOCATION)\n  }\n\n\n  /////////////// API_TYPE /////////////////////////\n\n  // get Delete\n  deleteLocationType(data) {\n    return Http.post(API_ENDPOINT.DELETELOCATION_TYPE, data);\n  }\n\n  // creat Location\n  createLocationType(data) {\n    return Http.post(API_ENDPOINT.CREATELOCATION_TYPE, data);\n  }\n\n  // update Location\n  updateLocationType(data) {\n    return Http.post(API_ENDPOINT.EDITLOCATION_TYPE, data)\n  }\n\n  // get data update\n  getUpdateLocationType(id) {\n    return Http.get(API_ENDPOINT.GETEDITLOCATION_TYPE + id)\n  }\n\n}\n\nconst instance = new LocationService();\n\nexport default instance;\n","import React, { Component } from \"react\";\nimport { Table, Container, Button } from \"reactstrap\";\nimport ItemLocation from \"./ItemLocation\";\nimport { Link } from \"react-router-dom\";\nimport LocationService from \"../Shared/LocationService\";\nimport ModalConfirm from \"../../../../Shared/Components/ModalConfirm/ModalConfirm\";\n\nclass ListLocation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      list_location: [],\n      notiConfirm: \"\",\n      list_type_location: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  // list data location\n  getData() {\n    let promiseArr = [];\n    promiseArr.push(LocationService.listLocation());\n    promiseArr.push(LocationService.listTypeLocation());\n    Promise.all(promiseArr).then(([listLocation, listType]) => {\n      let list_location = listLocation.data;\n      let list_type_location = listType.data;\n      list_location.map(lo => {\n        let found = list_type_location.find(t => {\n          return lo.type === t.code;\n        })\n        lo.location_type_name = found ? found.name : 'NA';\n        return lo;\n      })\n      \n      this.setState({\n        list_location,\n        list_type_location,\n      });\n    })\n      .catch((err) => {\n        this.setState({\n          notiMessage: \"Lỗi vui lòng bạn thử lại sau !!\",\n        });\n        console.log(err);\n      });\n  }\n\n  onDelete = (id) => {\n    this.setState({\n      notiConfirm: \"Bạn có chắc chắn muốn xóa !!\",\n      id: id,\n    });\n  };\n\n  answer = (isYes) => {\n    if (isYes) {\n      let data = {\n        id: this.state.id,\n      };\n      LocationService.deleteLocation(data)\n        .then(() => {\n          this.setState({ notiConfirm: \"\" });\n          this.getData();\n          window.location.href = \"./location\";\n        })\n        .catch((err) => {\n          this.setState({\n            notiMessage: \"Lỗi vui lòng bạn thử lại sau !!\",\n          });\n          console.log(err);\n        });\n    } else {\n      this.setState({ notiConfirm: \"\" });\n    }\n  };\n\n  render() {\n    let { list_location } = this.state;\n    this.state.list_location.sort((a,b) => a.code.localeCompare(b.code));\n    let itemList = list_location.map((lists_location, index) => {\n      return (\n        <ItemLocation\n          index={index}\n          list_location={lists_location}\n          key={index}\n          onDelete={this.onDelete}\n        />\n      );\n    });\n    return (\n      <Container className=\"customCard mr-top-20\">\n        <div className=\"titleLocation\">\n          <h4 className=\"title-card-lg\">Quản Lý Phòng Ban</h4>\n        </div>\n        <div className=\"addLocation\">\n          <Link to={`/app/location/create`}>\n            <Button color=\"primary\" outline>\n              <span className=\"titleAddNew\">Thêm Mới</span>\n            </Button>\n          </Link>\n        </div>\n        <div className=\"tableManager\">\n          <Table className=\"locationTable text-center\" striped bordered>\n            <thead>\n              <tr>\n                <th>STT</th>\n                <th>Loại Phòng</th>\n                <th>Mã Phòng</th>\n                <th>Tên Phòng</th>\n                <th>Thao Tác</th>\n              </tr>\n            </thead>\n            <tbody className=\"bodyTable\">\n              {itemList}\n            </tbody>\n          </Table>\n        </div>\n        <ModalConfirm\n          message={this.state.notiConfirm}\n          answer={this.answer}\n        ></ModalConfirm>\n      </Container>\n    );\n  }\n}\n\nexport default ListLocation;\n","import React, { Component } from \"react\";\nimport LocationService from \"../Shared/LocationService\";\nimport ModalNoti from '../../../../Shared/Components/ModalNoti/ModalNoti';\nimport {\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Container,\n} from \"reactstrap\";\n\n\nclass ActionLocation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      code: '',\n      nameRoom: '',\n      typeRoom: '',\n      notiMessage: '',\n      dataType: [],\n    };\n  }\n\n  componentDidMount() {\n    LocationService.listTypeLocation()\n      .then((response) => {\n        this.setState({\n          dataType: response.data\n        })\n      }).catch((error) => { console.log(error) });\n    let { match } = this.props;\n    let id = match.params.id\n    if (id) {\n      LocationService.getUpdateLocation(id)\n        .then((response) => {\n          let dataEdit = response.data;\n          this.setState({\n            id: dataEdit.id,\n            nameRoom: dataEdit.name,\n            typeRoom: dataEdit.location_type,\n          });\n        }).catch((error) => {\n          console.log(error)\n        });\n    }\n    return;\n  }\n\n  onBack = () => {\n    window.history.back();\n  }\n\n  // data\n  onchange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  // create and update data\n  onSubmit = () => {\n    let { id, nameRoom, typeRoom, code } = this.state;\n\n    if (id) {\n      // update\n      let data = {\n        id: id,\n        name: nameRoom,\n        location_type: typeRoom,\n        code: code,\n      };\n      LocationService.updateLocation(data)\n        .then((response) => {\n          if (response.status === 200) {\n            this.setState({\n              notiMessage: 'Cập nhật thành công'\n            })\n          }\n        }).catch((err) => {\n          this.setState({\n            notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n          })\n          console.log(err);\n        });\n    } else {\n      let data = {\n        name: nameRoom,\n        location_type: typeRoom,\n        code: code,\n      };\n      LocationService.createLocation(data)\n        .then(() => {\n          this.setState({\n            notiMessage: 'Thêm mới thành công'\n          })\n        }).catch((err) => {\n          this.setState({\n            notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n          })\n          console.log(err);\n        });\n    }\n  };\n\n  doneAlert = () => {\n    if (this.state.notiMessage) {\n      window.history.back();\n    } else {\n      this.setState({ notiMessage: '' })\n    }\n  }\n\n  render() {\n    let { id, nameRoom, typeRoom, dataType, code } = this.state;\n    let _dataType = dataType.map((data, i) => {\n      return <option value={data.id} key={i}>{data.name}</option>\n    })\n    return (\n      <section className=\"location\">\n        <Container>\n          <Row>\n            <Col xs={{ size: 8, offset: 2 }}>\n              <div className=\"titleNameRoom title-card-lg\">\n                <h4>{id === '' ? 'Thêm mới phòng ban' : 'Cập nhật phòng ban'}</h4>\n              </div>\n              <Form className=\"location_form\" id=\"location_form\">\n                <FormGroup>\n                  <Label for=\"code\">Mã phòng</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"code\"\n                    value={code}\n                    placeholder=\"Nhập mã phòng\"\n                    onChange={this.onchange}\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"nameRoom\">Tên phòng</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"nameRoom\"\n                    value={nameRoom}\n                    placeholder=\"Nhập tên phòng\"\n                    onChange={this.onchange}\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"type\">Chọn loại phòng</Label>\n                  <Input type=\"select\" name=\"typeRoom\" value={typeRoom} onChange={this.onchange}>\n                    <option disable=\"true\">Chọn Loại Phòng</option>\n                    {_dataType}\n                  </Input>\n                </FormGroup>\n                <div className=\"editLocation\">\n                <Button color=\"danger btnDanger\" onClick={this.onBack} >\n                  Hủy Bỏ\n                </Button>\n                &nbsp;&nbsp;\n                <Button outline color=\"primary\" onClick={this.onSubmit}>\n                  {id === '' ? 'Thêm mới' : 'Cập nhật'}\n                </Button>\n                </div>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n        <ModalNoti message={this.state.notiMessage} done={this.doneAlert}></ModalNoti>\n      </section>\n    );\n  }\n}\nexport default ActionLocation;\n","import React, { Component } from 'react';\nimport LocationService from '../Shared/LocationService';\nimport ModalNoti from '../../../../Shared/Components/ModalNoti/ModalNoti'\nimport {\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Container,\n} from 'reactstrap';\n\n\nclass ActionLocationType extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      code: '',\n      nameRoom: '',\n      typeRoom: '',\n      notiMessage: '',\n      dataType: [],\n    };\n  }\n\n\n\n  componentDidMount() {\n    let { match } = this.props;\n    let id = match.params.id\n    if (id) {\n      LocationService.getUpdateLocationType(id)\n        .then((response) => {\n          let dataEdit = response.data;\n          this.setState({\n            id: dataEdit.id,\n            nameRoom: dataEdit.name,\n            code: dataEdit.code,\n          });\n        }).catch((error) => {\n          console.log(error)\n        });\n    }\n    return;\n  }\n\n  onBack = () => {\n    window.history.back();\n  }\n\n  // data\n  onchange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    },\n    );\n  };\n  // create and update data\n  onSubmit = () => {\n    let { id, code, nameRoom } = this.state;\n    if (id) {\n      let data = {\n        id: id,\n        code: code,\n        name: nameRoom,\n      };\n      LocationService.updateLocationType(data)\n        .then(() => {\n          this.setState({\n            notiMessage: 'Cập nhật thành công'\n          })\n        })\n        .catch((err) => {\n          this.setState({\n            notiMessage: 'Lỗi vui lòng thử lại sau !!'\n          })\n          console.log(err);\n        });\n    } else {\n      let data = {\n        code: code,\n        name: nameRoom,\n      };\n      LocationService.createLocationType(data)\n        .then(() => {\n          this.setState({\n            notiMessage: 'Thêm mới thành công'\n          })\n        }).catch((err) => {\n            this.setState({\n              notiMessage: 'Lỗi vui lòng thử lại sau !!'\n            })\n            console.log(err);\n        });\n    }\n  };\n\n  doneAlert = () => {\n    if (this.state.notiMessage) {\n      window.history.back();\n    } else {\n      this.setState({ notiMessage: '' })\n    }\n  }\n\n\n\n  render() {\n    let { id, code, nameRoom } = this.state;\n    return (\n      <section className=\"location\">\n        <Container>\n          <Row>\n            <Col xs={{ size: 8, offset: 2 }}>\n              <div className=\"titleNameRoom\">\n                <h2>{id === '' ? 'Thêm mới loại phòng ban' : 'Cập nhật loại phòng ban'}</h2>\n              </div>\n              <Form className=\"location_form\" id=\"location_form\">\n                <FormGroup>\n                  <Label for=\"code\">Mã loại phòng</Label>\n                  <Input\n                    id=\"code\"\n                    type=\"text\"\n                    name=\"code\"\n                    value={code}\n                    placeholder=\"Nhập mã loại phòng\"\n                    onChange={this.onchange}\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"nameRoom\">Tên loại phòng</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"nameRoom\"\n                    value={nameRoom}\n                    placeholder=\"Nhập tên loại phòng\"\n                    onChange={this.onchange}\n                  />\n                </FormGroup>\n                <Button color=\"danger btnDanger\" onClick={this.onBack} >\n                  Hủy Bỏ\n                </Button>\n                <Button color=\"success\" onClick={this.onSubmit}>\n                  {id === '' ? 'Thêm mới' : 'Cập nhật'}\n                </Button>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n        <ModalNoti message={this.state.notiMessage} done={this.doneAlert}></ModalNoti>\n      </section>\n\n    );\n  }\n}\nexport default ActionLocationType;\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\n\n\nclass ItemLocationType extends Component {\n\n  onDelete = (id) => {\n    this.props.onDelete(id);\n  };\n\n  render() {\n    let { typeList, index } = this.props;\n    return (\n      <tbody key={index}>\n        <tr>\n          <th scope=\"row\">{index + 1}</th>\n          <td>{typeList.code}</td>\n          <td>{typeList.name}</td>\n          <td>\n            <div className=\"btnControl\">\n              <Link to={`./type/${typeList.id}`} className=\"btn btn-primary btnPrimary\">\n                Sửa\n              </Link>\n              <Button color=\"danger\" onClick={() => this.onDelete(typeList.id)}>\n                Xóa\n              </Button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    );\n  }\n}\n\nexport default ItemLocationType;\n","import React, { Component } from \"react\";\nimport { Table, Container, Button } from \"reactstrap\";\nimport ItemLocationType from \"../Location_Type/ItemLocationType\";\nimport { Link } from \"react-router-dom\";\nimport LocationService from \"../Shared/LocationService\";\nimport ModalConfirm from \"../../../../Shared/Components/ModalConfirm/ModalConfirm\";\n\nclass ListLocationType extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      typeList: [],\n      notiConfirm: '',\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n  // list data location\n  getData() {\n    LocationService.listTypeLocation()\n      .then((response) => {\n        this.setState({\n          typeList: response.data,\n        })\n      }).catch((err) => {\n        console.log(err);\n      });\n  }\n\n  onDelete = (id) => {\n    this.setState({\n      notiConfirm: 'Bạn có chắc chắn muốn xóa !!',\n      id: id\n    })\n  };\n\n  answer = (isYes) => {\n    if (isYes) {\n      let data = {\n        id: this.state.id\n      }\n      LocationService.deleteLocationType(data)\n        .then(() => {\n          this.setState({ notiConfirm: '' })\n          this.getData();\n          window.location.href = './type'\n        }).catch((err) => {\n          this.setState({\n            notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n          })\n          console.log(err);\n        });\n    } else {\n      this.setState({ notiConfirm: '' })\n    }\n  }\n\n  render() {\n    let { typeList } = this.state;\n    let itemList = typeList.map((tasksType, index) => {\n      return (\n        <ItemLocationType\n          index={index}\n          typeList={tasksType}\n          key={index}\n          onDelete={this.onDelete}\n        />\n      );\n    });\n    return (\n      <Container>\n        <div className=\"titleLocation\">\n          <h1>Quản Lý Loại Phòng Ban</h1>\n        </div>\n        <div className=\"addLocation\">\n          <Link to={`/app/location/type/create`}>\n            <Button color=\"success\">\n              <span className=\"titleAddNew\">Thêm Mới</span>\n            </Button>\n          </Link>\n        </div>\n        <div className=\"tableManager\">\n          <Table hover bordered>\n            <thead>\n              <tr>\n                <th width=\"5%\">#</th>\n                <th width=\"15%\">Loại Phòng</th>\n                <th width=\"50%\">Tên Phòng</th>\n                <th width=\"15%\">Thao Tác</th>\n              </tr>\n            </thead>\n            {itemList}\n          </Table>\n        </div>\n        <ModalConfirm message={this.state.notiConfirm} answer={this.answer}></ModalConfirm>\n      </Container>\n    );\n  }\n}\n\nexport default ListLocationType;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ListLocation from \"./Components/Location/ListLocation\";\nimport ActionLocation from \"./Components/Location/ActionLocation\";\nimport ActionLocationType from \"./Components/Location_Type/ActionLocationType\";\nimport ListLocationType from \"./Components/Location_Type/ListLocationType\";\n\nclass Location extends Component {\n\n  render() {\n    const { path } = this.props.match;\n    return (\n      <div className=\"Location\">\n        <Switch>\n          <Route\n            path={`${path}/type/create`}\n            exact\n            component={ActionLocationType}\n          />\n          <Route\n            path={`${path}/type/:id`}\n            exact\n            component={ActionLocationType}\n          />\n          <Route path={`${path}/type`} exact component={ListLocationType} />\n          <Route path={`${path}/create`} exact component={ActionLocation} />\n          <Route path={`${path}/:id`} exact component={ActionLocation} />\n          <Route path={`${path}`} exact component={ListLocation} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Location;\n","import React, { Component } from 'react';\n\nclass NotAuthorized extends Component {\n\n    render() {\n        return (\n            <div className=\"notAuthContainer\">\n                <h4>Bạn không có quyền truy cập tính năng này</h4>\n            </div>\n        );\n    }\n}\n\nexport default NotAuthorized;","import React, { Component } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport NotAuthorized from './Components/NotAuthorized/NotAuthorized'\n\nclass Org extends Component {\n\n    render() {\n        const { path } = this.props.match;\n        return (\n            <div className=\"org\">\n                <Switch>\n                    <Route exact path={`${path}/notauthorized`} component={NotAuthorized} />\n                </Switch>\n            </div>\n        )\n    }\n}\n\nexport default Org","import { Http } from \"../../../Helper/Http\";\nconst API_ENDPOINT = {\n    BASE: '/service/service',\n    GET_LIST_LOCATION: '/location/list',\n    GET_LOCATION_SERVICE: '/location/service/location?id=',\n    ADD_STEP_SERVICE: '/service/step/create',\n    DELETE_STEP_SERVICE: '/service/step/delete',\n    ADD_LOCATION_SERVICE: '/location/service/add',\n    REMOVE_LOCATION_SERVICE: '/location/service/remove',\n    UPDATE_STEP_SERVICE: '/service/step/update',\n\n    UPDATE_PRICE_SERVICE: \"/service/service/update\",\n    UPDATE_DISCOUNT_PRICE: \"/service/service/discount\"\n}\n\nclass ServiceService {\n    constructor() {\n        if (ServiceService._instance) {\n            return ServiceService._instance\n        }\n        ServiceService._instance = this;\n\n        // ... Your rest of the constructor code goes after this\n\n    }\n\n    // service service\n    postService(payload) {\n        return Http.post(`${API_ENDPOINT.BASE}/create`, payload)\n    }\n    getServiceList() {\n        return Http.get(`${API_ENDPOINT.BASE}/list`)\n    }\n    getServiceById(id) {\n        return Http.get(`${API_ENDPOINT.BASE}/get`, { id })\n    }\n    delService(id) {\n        return Http.post(`${API_ENDPOINT.BASE}/delete`, { id })\n    }\n    editService(payload) {\n        return Http.post(`${API_ENDPOINT.BASE}/update`, payload)\n    }\n    getListLocation() {\n        return Http.get(API_ENDPOINT.GET_LIST_LOCATION)\n    }\n    getLocationService(service_id) {\n        return Http.get(API_ENDPOINT.GET_LOCATION_SERVICE + service_id)\n    }\n    addStepService(data) {\n        return Http.post(API_ENDPOINT.ADD_STEP_SERVICE, data)\n    }\n    deleteStepService(data) {\n        return Http.post(API_ENDPOINT.DELETE_STEP_SERVICE, data)\n    }\n    addLocationService(data) {\n        return Http.post(API_ENDPOINT.ADD_LOCATION_SERVICE, data)\n    }\n    updateStepService(data) {\n        return Http.post(API_ENDPOINT.UPDATE_STEP_SERVICE, data)\n    }\n    removeLocationService(data) {\n        return Http.post(API_ENDPOINT.REMOVE_LOCATION_SERVICE, data)\n    }\n    updatePriceDiscount(data) {\n        return Http.post(API_ENDPOINT.UPDATE_DISCOUNT_PRICE, data)\n    }\n    updatePriceService(data) {\n        return Http.post(API_ENDPOINT.UPDATE_PRICE_SERVICE, data)\n    }\n}\n\nconst instance = new ServiceService();\n\nexport default instance;","import React, { useState, useEffect } from 'react';\nimport { Fragment } from 'react';\nimport { Button, Table, FormGroup, Label, Input, Col } from 'reactstrap';\nimport { Link } from \"react-router-dom\";\nimport ModalConfirm from \"../../../../Shared/Components/ModalConfirm/ModalConfirm\"\nimport ModalNoti from \"../../../../Shared/Components/ModalNoti/ModalNoti\"\nimport ServiceService from \"../../Shared/ServiceService\"\nimport { SERVICE_TYPE } from \"../../../../Constances/const\"\n\nconst OPTION = \"option\";\nconst ServiceList = (props) => {\n    const [serviceList, setServiceList] = useState([]);\n    const [delServiceId, setDelServiceId] = useState(null);\n    const [confirmMessage, setConfirmMessage] = useState(\"\");\n    const [notiMessage, setNotiMessage] = useState(\"\");\n    const [serviceType , setServiceType] = useState(\"\");\n    const [discountPrice , setDiscountPrice] = useState(\"\");\n    const [serviceChoice, setServiceChoice] = useState([]);\n    const [flag, setFlag] = useState(false);\n\n    useEffect(() => {{\n        ServiceService.getServiceList().then(res => {\n            setServiceList(res.data)\n            }).catch(err => {\n                setNotiMessage(\"Có lỗi xảy ra, vui lòng thử lại!\")\n            })\n        }\n    }, [flag])\n\n    const handleDelService = (service) => {\n        setDelServiceId(service.id)\n        setConfirmMessage(`Bạn có muốn xóa dịch vụ ${service.name}?`)\n    }\n\n    const answer = (answer) => {\n        if (answer) {\n            ServiceService.delService(delServiceId).then(() => {\n                setDelServiceId(null)\n                setConfirmMessage(\"\")\n                setNotiMessage(\"Bạn đã cập nhật thành công!\")\n                setFlag(!flag);\n            }).catch((err) => {\n                setNotiMessage(\"Có lỗi xảy ra, vui lòng thử lại!\")\n                console.log(err)\n            })\n\n        } else {\n            setConfirmMessage(\"\")\n        }\n    }\n\n    const done = () => {\n        setNotiMessage(\"\")\n    }\n\n    const handleSelectService = (event) => {\n        setServiceType(event.target.value);\n    }\n    \n    const handleSelectDiscount = (event) => {\n        setDiscountPrice(event.target.value);\n    }\n\n    const handleConfirmPrice = () => {\n        if (serviceType === OPTION) {\n            let data = [];\n            serviceChoice.forEach(service_id => {\n                serviceList.forEach(service => {\n                    if (service_id == service.id) {\n                        const obj = {\n                            id : service.id,\n                            price : (Math.ceil(service.origin_price * (1 - discountPrice * 0.01) * 0.001)) * 1000\n                        }\n                        data.push(obj);\n                    }\n                })\n            })\n            const promise_service = data.map(dt => ServiceService.updatePriceService(dt))\n            Promise.all(promise_service).then(\n                ()=> { \n                    setNotiMessage(\"Bạn đã cập nhật thành công!\");\n                    setFlag(!flag);\n                }).catch(err => {\n                    console.log(err)\n                    setNotiMessage(\"Có lỗi xảy ra, vui lòng thử lại!\")\n                }\n            );\n        } else {\n            const data = {\n                type : serviceType,\n                discount : parseInt(discountPrice)\n            }\n            ServiceService.updatePriceDiscount(data).then(\n                ()=> { \n                    setNotiMessage(\"Bạn đã cập nhật thành công!\") \n                    setFlag(!flag);\n                }).catch(err => {\n                    setNotiMessage(\"Có lỗi xảy ra, vui lòng thử lại!\")\n                }\n            )\n        }\n    }\n    \n    const handleCheckBox = (e) => {\n        if (e.target.checked == true) {\n            setServiceChoice(old => [...old, e.target.value]);\n        } else {\n            let services = [...serviceChoice];\n            services.splice(serviceChoice.indexOf(e.target.value),1);\n            setServiceChoice(services);\n        }\n    }\n\n    return (\n        <Fragment>\n            <div className=\"container\">\n                <ModalConfirm message={confirmMessage} answer={answer}></ModalConfirm>\n                <ModalNoti message={notiMessage} done={done}></ModalNoti>\n                <ServiceTable serviceList={serviceList} handleDelService={handleDelService} handleConfirmPrice={handleConfirmPrice} handleCheckBox={handleCheckBox}\n                    handleSelectService={handleSelectService} handleSelectDiscount={handleSelectDiscount} serviceType={serviceType} serviceChoice={serviceChoice}> </ServiceTable>\n            </div>\n        </Fragment>\n    );\n}\n\nconst ServiceTable = (props) => {\n    let { serviceList, handleDelService , handleSelectService, handleSelectDiscount,handleConfirmPrice , handleCheckBox, serviceType, serviceChoice} = props;\n    return (\n        <div className=\"customCard mt-3\">\n            <FormGroup row>\n                <Col sm={6}>\n                    <h4 className=\"title-card-lg\">Quản lý dịch vụ</h4>\n                    <Link to={`/app/service/0`}>\n                        <Button color=\"primary\" outline className=\"mb-3\">Thêm mới dịch vụ</Button>\n                    </Link>\n                </Col>\n               <Col sm={6}>\n                    <FormGroup row className = \"justify-content-md-end\">\n                        <Col sm={6}>\n                            <h4 className=\"title-card-lg \">Chiết khấu dịch vụ</h4>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row className = \"justify-content-md-end\">\n                        <Col sm={6}>\n                            <Input type=\"select\" name=\"type\" id=\"type\" onChange = {event => { handleSelectService(event) }} >\n                                <option value=\"\">Chọn loại dịch vụ</option>\n                                <option value={SERVICE_TYPE.TEST}>Xét nghiệm</option>\n                                <option value={SERVICE_TYPE.EXAM}>Khám bệnh</option>\n                                <option value={SERVICE_TYPE.ENT}>Nội soi</option>\n                                <option value={SERVICE_TYPE.ULTRASOUND}>Siêu âm</option>\n                                <option value={SERVICE_TYPE.XRAY}>X-Quang</option>\n                                <option value={SERVICE_TYPE.OTHER}>Cấp cứu</option>\n                                <option value={OPTION}>Tùy chọn DV</option>\n                            </Input>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row className = \"justify-content-md-end\">\n                        <Col sm={6}>\n                            <Input type=\"select\" name=\"type\" id=\"type\" onChange = {event => { handleSelectDiscount(event) }}>\n                                <option value=\"\">Chọn mức chiết khấu</option>\n                                <option value = \"0\"> Giá gốc</option>\n                                <option value = \"10\"> 10%</option>\n                                <option value = \"20\"> 20%</option>\n                                <option value = \"30\"> 30%</option>\n                                <option value = \"40\"> 40%</option>\n                                <option value = \"50\"> 50%</option>\n                                <option value = \"60\"> 60%</option>\n                                <option value = \"70\"> 70%</option>\n                                <option value = \"80\"> 80%</option>\n                                <option value = \"90\"> 90%</option>\n                                <option value = \"100\"> 100%</option>\n                            </Input>\n                        </Col>\n                    </FormGroup> \n                    <FormGroup row className = \"justify-content-md-end\">\n                        <Col sm = {2}>\n                            <Button color=\"primary\" outline className=\"m-2 \" onClick = {() => { handleConfirmPrice() }}>Lưu</Button>\n                    </Col>\n                </FormGroup>\n               </Col>\n                \n            </FormGroup>\n            \n            \n            <Table className=\"serviceListTable\" hover bordered striped>\n                <thead>\n                    <tr>\n                        <th>STT</th>\n                        <th>Mã dịch vụ</th>\n                        <th>Tên dịch vụ</th>\n                        <th>Loại dịch vụ</th>\n                        <th className=\"price\">Giá khuyến mại</th>\n                        <th className=\"price\">Giá gốc</th>\n                        <th>Thao tác</th>\n                    </tr>\n                </thead>\n                <tbody className=\"bodyTable\">\n                    {serviceList.map((item, index) => {\n                        return item.price == item.origin_price ? \n                        <tr key={item.id}>\n                            <th scope=\"row\">{index + 1}</th>\n                            <td>{item.code}</td>\n                            { serviceType == OPTION\n                            ? <td>\n                                <Input \n                                    className=\"mr-10 p-2\" \n                                    type=\"checkbox\" \n                                    value={item.id}\n                                    // defaultChecked={ serviceChoice.find(item => item == item.id ? true : false)}\n                                    onClick={(e) => { handleCheckBox(e) }}\n                                />   \n                                {item.name}\n                            </td> : <td>{item.name}</td> }\n                            <td>\n                                {item.type === SERVICE_TYPE.TEST && \"Xét nghiệm\"}\n                                {item.type === SERVICE_TYPE.EXAM && \"Khám bệnh\"}\n                                {item.type === SERVICE_TYPE.ULTRASOUND && \"Siêu âm\"}\n                                {item.type === SERVICE_TYPE.ENT && \"Nội soi\"}\n                                {item.type === SERVICE_TYPE.XRAY && \"Chụp X-Quang\"}\n                                {item.type === SERVICE_TYPE.OTHER&& \"Cấp cứu\"}\n                            </td> \n                            <td className=\"price\">{item.price}</td>\n                            <td className=\"price\">{item.origin_price}</td>\n                            <td >\n                                <Link to={`/app/service/${item.id}`}>\n                                    <Button color=\"primary\" className=\"btn-sm\">Sửa</Button> {\" \"}\n                                </Link>\n                                <Button color=\"danger\" className=\" btn-sm\" onClick={() => { handleDelService(item) }}>Xóa</Button>\n                            </td>\n                        </tr> : <tr key={item.id}>\n                            <th scope=\"row\">{index + 1}</th>\n                            <td>{item.code}</td>\n                            { serviceType == OPTION\n                            ? <td>\n                                <Input \n                                    className=\"mr-10 p-2\" \n                                    type=\"checkbox\" \n                                    value={item.id}\n                                    defaultChecked={true}\n                                    onClick={(e) => { handleCheckBox(e) }}\n                                />   \n                                {item.name}\n                            </td> : <td>{item.name}</td> }\n                            <td>\n                                {item.type === SERVICE_TYPE.TEST && \"Xét nghiệm\"}\n                                {item.type === SERVICE_TYPE.EXAM && \"Khám bệnh\"}\n                                {item.type === SERVICE_TYPE.ULTRASOUND && \"Siêu âm\"}\n                                {item.type === SERVICE_TYPE.ENT && \"Nội soi\"}\n                                {item.type === SERVICE_TYPE.XRAY && \"Chụp X-Quang\"}\n                                {item.type === SERVICE_TYPE.OTHER&& \"Cấp cứu\"}\n                            </td>\n                            <td className=\"price\">{item.price} *</td>\n                            <td className=\"price\" style={{fontWeight : \"bold\"}}>{item.origin_price}</td>\n                            <td >\n                                <Link to={`/app/service/${item.id}`}>\n                                    <Button color=\"primary\" className=\"btn-sm\">Sửa</Button> {\" \"}\n                                </Link>\n                                <Button color=\"danger\" className=\" btn-sm\" onClick={() => { handleDelService(item) }}>Xóa</Button>\n                            </td>\n                        </tr>\n                    })}\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nexport default ServiceList;\n\n","import React, {useState, useEffect } from 'react';\nimport { Fragment } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Col } from 'reactstrap';\nimport { useParams } from \"react-router-dom\"\nimport ModalConfirm from \"../../../../Shared/Components/ModalConfirm/ModalConfirm\"\nimport ModalNoti from \"../../../../Shared/Components/ModalNoti/ModalNoti\"\nimport ServiceService from \"../../Shared/ServiceService\"\nimport {SERVICE_TYPE , String } from \"../../../../Constances/const\"\n\nconst EditServiceForm = (props) => {\n    let { id } = useParams();\n    const [serviceList, setServiceList] = useState([])\n    useEffect(() => {{\n        ServiceService.getServiceList().then(res => {\n            setServiceList(res.data)\n            }).catch(err => {\n                setNotiMessage(\"Có lỗi xảy ra, vui lòng thử lại!\")\n            })\n        }\n    }, [])\n    const [service, setService] = useState({\n        code: \"\",\n        name: \"\",\n        origin_price: 0,\n\n        type: \"\",\n        steps: [],\n    })\n    const [step, setStep] = useState({\n        service_id: id,\n        unit: '',\n        name: '',\n        value: '',\n        device: '',        \n    })\n    const [confirmMessage, setConfirmMessage] = useState(\"\")\n    const [indexDeleteStep, setIndexDeleteStep] = useState([])\n    const [notiMessage, setNotiMessage] = useState(\"\")\n    const [locationSelected, setLocationSelected] = useState([])\n    const [listLocation, setListLocation] = useState([])\n    const [typeDone, setTypeDone] = useState(-1);\n\n    const createCode = (services ) => {\n        services.sort((a,b) => a.code.localeCompare(b.code));\n        const arrCode = services.map(el => el.code);\n        const codeName = arrCode[arrCode.length - 1].substr(0,2);\n        const codeIndex = arrCode[arrCode.length - 1].substr(2);\n        const newCodeIndex = parseInt(codeIndex) + 1;\n        return codeName+String(newCodeIndex , \"service\");\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        if (name == \"origin_price\") {\n            service.origin_price = e.target.value;\n        }\n        if (e.target.value === SERVICE_TYPE.EXAM) {\n            const examService = serviceList.filter(service => service.type === SERVICE_TYPE.EXAM);\n            service.code = createCode(examService);\n            service.type = SERVICE_TYPE.EXAM;\n        } else if (e.target.value === SERVICE_TYPE.TEST) {\n            const testService = serviceList.filter(service => service.type === SERVICE_TYPE.TEST);\n            service.code = createCode(testService);\n            service.type = SERVICE_TYPE.TEST;\n        } else if (e.target.value === SERVICE_TYPE.ENT) {\n            const entService = serviceList.filter(service => service.type === SERVICE_TYPE.ENT);\n            service.code = createCode(entService);\n            service.type = SERVICE_TYPE.ENT;\n        } else if (e.target.value === SERVICE_TYPE.XRAY) {\n            const xrayService = serviceList.filter(service => service.type === SERVICE_TYPE.XRAY);\n            service.code = createCode(xrayService);\n            service.type = SERVICE_TYPE.XRAY;\n        } else if (e.target.value === SERVICE_TYPE.ULTRASOUND){\n            const ultraService = serviceList.filter(service => service.type === SERVICE_TYPE.ULTRASOUND);\n            service.code = createCode(ultraService);\n            service.type = SERVICE_TYPE.ULTRASOUND;\n        } else if (e.target.value === SERVICE_TYPE.OTHER){\n            const emerService = serviceList.filter(service => service.type === SERVICE_TYPE.OTHER);\n            service.code = createCode(emerService);\n            service.type = SERVICE_TYPE.OTHER;\n        }\n        if (service.origin_price) {\n            service.origin_price = parseInt(service.origin_price);\n            service[\"price\"] = service.origin_price;\n        }\n        console.log(service)\n        setService((service) => ({ ...service, [name]: value }));\n    }\n\n    useEffect(() => {\n        if (id !== \"0\") {\n            fetchService();\n            getListLocationSelected();\n        }\n        getListLocation();\n    }, []);\n\n    const onCheckLocation = (locationId) => {\n        const index = locationSelected.indexOf(locationId)\n        if(index < 0){\n            locationSelected.push(locationId)\n            if(id !== \"0\") ServiceService.addLocationService({service_id: id, location_id: locationId})\n        }else{\n            locationSelected.splice(index, 1)\n            if(id !== \"0\") ServiceService.removeLocationService({service_id: id, location_id: locationId})\n        }\n        setLocationSelected([...locationSelected])\n    }   \n    const fetchService = async () => {\n        let fetchedService = await ServiceService.getServiceById(id)\n        setService(fetchedService.data)\n    }\n    const getListLocationSelected = () => {\n        ServiceService.getLocationService(id)\n        .then(res => {\n            const arr = res.data;\n            arr.forEach(a => {\n                a.type = 'old'\n                locationSelected.push(a.id)\n                setLocationSelected([...locationSelected])\n            });\n        }).catch(err => console.log(err));\n    }\n    const getListLocation = () => {\n        ServiceService.getListLocation().then(res =>{\n            setListLocation(res.data);\n        }).catch(err => console.log(err));\n    }\n\n    const handleSubmitForm = () => {\n        if (id === \"0\") {\n            ServiceService.postService(service)\n            .then((res) => {\n                const obj = {\n                    service_id: res.data.id,\n                    steps: service.steps,\n                }\n                let promiseArr = [];\n                if(service.type === SERVICE_TYPE.TEST) promiseArr.push(ServiceService.addStepService(obj))\n                locationSelected.forEach(l =>{\n                    const data = {\n                        location_id: l,\n                        service_id: res.data.id\n                    }\n                    promiseArr.push(ServiceService.addLocationService(data))\n                })\n                Promise.all(promiseArr)\n                .then(resp => {\n                    setNotiMessage(\"Thêm mới dịch vụ thành công!\")\n                    setTypeDone(0)\n                }).catch(err => {\n                    console.log(err)\n                    setNotiMessage(\"Có lỗi khi thêm trường dữ liệu!\")\n                })   \n            }).catch((err) => {\n                console.log(err)\n                setNotiMessage(\"Có lỗi xảy ra, vui lòng thử lại!\")\n            })\n        } else {\n          //cap nhat\n           ServiceService.editService(service)\n           .then(res => {\n                let arrNew = [];\n                let promiseArr = [];\n                service.steps.forEach(s => {\n                    if(s.type === 'new'){\n                        delete s.type; \n                        arrNew.push(s);\n                    }else if(s.type === 'update'){\n                        delete s.type;\n                        let data = {\n                            id: s.id,\n                            service_id: id,\n                            name: s.name,\n                            unit: s.unit,\n                            device: s.device,\n                            value: s.value\n                        }\n                        promiseArr.push(ServiceService.updateStepService(data))\n                    }\n                });\n                const objNew = {\n                    service_id: id,\n                    steps: arrNew\n                }\n                promiseArr.push(ServiceService.addStepService(objNew));\n                Promise.all(promiseArr)\n                .then((resp) => {\n                    setNotiMessage(\"Cập nhật dịch vụ thành công!\")\n                    setTypeDone(1)\n                }).catch(err => console.log(err))\n           }).catch(er => console.log(er))\n        }\n    }\n\n    const answer = (answer) => {\n        if (answer) {\n            ServiceService.deleteStepService({id: indexDeleteStep[1]})\n            .then(res => {\n                service.steps.splice(indexDeleteStep[0], 1);\n                setService({...service});\n                indexDeleteStep.splice(0,2);\n                setIndexDeleteStep(indexDeleteStep)\n                setConfirmMessage(\"\")\n                setNotiMessage(\"Xóa thành công!\")\n            }).catch(err => {\n                console.log(err);\n                setNotiMessage(\"Xóa thất bại!\")\n            })    \n        } else {\n            setConfirmMessage(\"\")\n            indexDeleteStep.splice(0,2);\n            setIndexDeleteStep(indexDeleteStep)\n        }\n    }\n    const onDeleteStep = (e, i, id) => {\n        indexDeleteStep.push(i, id)\n        setIndexDeleteStep(indexDeleteStep)\n        setConfirmMessage(\"Bạn chắc chắn muốn xóa!\")\n    }   \n    const done = () => {\n        setNotiMessage(\"\")\n        if(typeDone === 0){\n            setService({\n                code: \"\",\n                name: \"\",\n                origin_price: 0,\n                type: \"\",\n                steps: [],\n            })\n            setStep({\n                service_id: id,\n                unit: '',\n                name: '',\n                value: '',\n                device: '',  \n            })\n            setLocationSelected([])\n        }\n        if(typeDone === 1){\n            window.history.back()\n        }\n    }\n    const onAddStep = () => {\n        if(step.name){\n            step.type = 'new'\n            service.steps.push(step)\n            setService({...service})\n            setStep({\n                service_id: id,\n                unit: '',\n                name: '',\n                value: '',\n                device: '',\n            })\n        }else{\n            setNotiMessage(\"Tên trường liệu không được để trống!\")\n        }\n    }\n    const onChangeStep = (e) => {\n        const { name, value } = e.target;\n        setStep((step) => ({...step, [name]: value}))\n    }\n    // const onChangeOldStep = (e,i) => {\n    //     const { name , value } = e.target;\n    //     console.log(service.steps[i])\n    //     service.steps[i].[name] = value;\n    //     if(service.steps[i].type !== 'new'){\n    //         service.steps[i].type = 'update'\n    //     }\n    //     setService({...service})\n    // }\n    return (\n        <Fragment>\n            <div className=\"container\">\n                <ModalConfirm message={confirmMessage} answer={answer}></ModalConfirm>\n                <ModalNoti message={notiMessage} done={done}></ModalNoti>\n                <h4 className=\"title-card-lg\">{id !== \"0\" ? \"Chỉnh sửa dịch vụ\" : \"Thêm mới dịch vụ\"}</h4>\n                <Form>\n                    <FormGroup row>\n                        <Label for=\"name\" sm={2}>Tên dịch vụ</Label>\n                        <Col sm={10}>\n                            <Input type=\"email\" name=\"name\" id=\"name\" placeholder=\"Nhập tên dịch vụ\" value={service.name} onChange={(e) => handleChange(e)} />\n                        </Col>\n                    </FormGroup>\n                    {/* <FormGroup row>\n                        <Label for=\"code\" sm={2}>Mã dịch vụ</Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"code\" id=\"code\" placeholder=\"Nhập mã dịch vụ\" value={service.code} onChange={(e) => handleChange(e)} />\n                        </Col>\n                    </FormGroup> */}\n                    <FormGroup row>\n                        <Label for=\"price\" sm={2}>Giá gốc</Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"origin_price\" id=\"origin_price\" placeholder=\"Nhập giá dịch vụ\" value={service.origin_price} onChange={(e) => handleChange(e)} />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"type\" sm={2}>Loại dịch vụ</Label>\n                        <Col sm={10}>\n                            <Input type=\"select\" name=\"type\" id=\"type\" value={service.type} onChange={(e) => handleChange(e)} >\n                                <option disabled value=\"\">Chọn loại dịch vụ</option>\n                                <option value={SERVICE_TYPE.TEST}>Xét nghiệm</option>\n                                <option value={SERVICE_TYPE.EXAM}>Khám bệnh</option>\n                                <option value={SERVICE_TYPE.ENT}>Nội soi</option>\n                                <option value={SERVICE_TYPE.ULTRASOUND}>Siêu âm</option>\n                                <option value={SERVICE_TYPE.XRAY}>X-Quang</option>\n                                <option value={SERVICE_TYPE.OTHER}>Cấp cứu</option>\n                            </Input>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label sm={2}>Chọn phòng</Label>\n                        <Col sm={10} className=\"checkbox-location\">\n                            {listLocation.map(l => {\n                               return <Button onClick={() => onCheckLocation(l.id)} active={locationSelected.includes(l.id)}>{l.name}</Button>\n                            })}\n                        </Col>\n                    </FormGroup>\n                    {/* {service.type === SERVICE_TYPE.TEST ?\n                    <FormGroup row>\n                        <Label sm={2}>Thêm trường dữ liệu</Label>\n                        <Col sm={3}>\n                            <Input type=\"text\" placeholder=\"Nhập tên trường\" value={step.name} onChange={e => onChangeStep(e)} name=\"name\"/>\n                        </Col>\n                        <Col sm={2}>\n                            <Input type=\"text\" placeholder=\"Nhập đơn vị\" value={step.unit} onChange={e => onChangeStep(e)} name=\"unit\"/>\n                        </Col>\n                        <Col sm={2}>\n                            <Input type=\"text\" placeholder=\"Nhập chỉ số\" value={step.value} onChange={e => onChangeStep(e)} name=\"value\"/>\n                        </Col>\n                        <Col sm={2}>\n                            <Input type=\"text\" placeholder=\"Nhập máy xét nghiệm\" value={step.device} onChange={e => onChangeStep(e)} name=\"device\"/>\n                        </Col>\n                        <Col>\n                            <Button onClick={onAddStep}>Lưu</Button>\n                        </Col>\n                    </FormGroup> : null} */}\n                    {/* {service.type === SERVICE_TYPE.TEST ? service.steps.map((s,i) => {\n                       return <FormGroup row key={i}>\n                                <Label sm={2}></Label>\n                                <Col sm={3}>\n                                    <Input type=\"text\" placeholder=\"Nhập tên trường\" value={s.name} name=\"name\" onChange={e => onChangeOldStep(e, i)}/>\n                                </Col>\n                                <Col sm={2}>\n                                    <Input type=\"text\" placeholder=\"Nhập đơn vị\" name=\"unit\" value={s.unit} onChange={e => onChangeOldStep(e, i)}/>\n                                </Col>\n                                <Col sm={2}>\n                                    <Input type=\"text\" placeholder=\"Nhập chỉ số\" value={s.value} name=\"value\" onChange={e => onChangeOldStep(e, i)}/>\n                                </Col>\n                                <Col sm={2}>\n                                    <Input type=\"text\" placeholder=\"Nhập máy xét nghiệm\" value={s.device} name=\"device\" onChange={e => onChangeOldStep(e, i)}/>\n                                </Col>\n                                <Col>\n                                    <Button color=\"danger\" onClick={e => onDeleteStep(e, i, s.id)}>Xóa</Button>\n                                </Col>\n                            </FormGroup>\n                    }) : null} */}\n                    \n                    \n                    {/* <Row>\n                        <Col sm={{ size: 10, offset: 2 }}> */}\n                        <div className=\"addControl pb-50\">\n                            {/* <Link to=\"/app/service\">\n                                <Button color=\"danger\" className=\"mr-2\">Quay lại</Button>\n                            </Link> */}\n                            {' '}<Button color=\"primary\" outline onClick={() => handleSubmitForm()}>{id !== \"0\" ? \"Cập nhật\" : \"Thêm mới\"}</Button>\n                        </div>\n                        {/* </Col>\n                    </Row> */}\n\n                </Form>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default EditServiceForm;\n\n","import { Http } from \"../../../Helper/Http\"\nconst API_ENDPOINT = {\n    BASE: '/service/policy',\n}\n\nclass PricePolicyService {\n    constructor() {\n        if (PricePolicyService._instance) {\n            return PricePolicyService._instance\n        }\n        PricePolicyService._instance = this;\n\n        // ... Your rest of the constructor code goes after this\n\n    }\n\n    postPricePolicy(payload) {\n        return Http.post(`${API_ENDPOINT.BASE}/create`, payload)\n    }\n    getPricePolicyList() {\n        return Http.get(`${API_ENDPOINT.BASE}/list`)\n    }\n    getPricePolicyById(id) {\n        return Http.get(`${API_ENDPOINT.BASE}/get`, { id })\n    }\n    delPricePolicy(id) {\n        return Http.post(`${API_ENDPOINT.BASE}/delete`, { id })\n    }\n    editPricePolicy(payload) {\n        return Http.post(`${API_ENDPOINT.BASE}/update`, payload)\n    }\n}\n\nconst instance = new PricePolicyService();\n\nexport default instance;","import React, { useState, useEffect } from 'react';\nimport { Fragment } from 'react';\nimport { Button, Table} from 'reactstrap';\nimport { Link } from \"react-router-dom\";\nimport ModalConfirm from \"../../../../Shared/Components/ModalConfirm/ModalConfirm\"\nimport ModalNoti from \"../../../../Shared/Components/ModalNoti/ModalNoti\"\nimport PricePolicyService from \"../../Shared/PricePolicyService\"\n\nconst PolicyPriceManager = (props) => {\n    const [policyPriceList, setPolicyPriceList] = useState([])\n    const [delPolicyPriceId, setDelPolicyPriceId] = useState(null)\n    const [confirmMessage, setConfirmMessage] = useState(\"\")\n    const [notiMessage, setNotiMessage] = useState(\"\")\n\n    useEffect(() => {\n        fetchPricePolicyList()\n    }, [])\n\n    const fetchPricePolicyList = async () => {\n        let pricePolicy = await PricePolicyService.getPricePolicyList()\n        setPolicyPriceList(pricePolicy.data)\n    }\n\n    const delPolicyPrice = (id) => {\n        return PricePolicyService.delPricePolicy(id)\n    }\n\n    const handleDelPolicyPrice = (policyPriceId) => {\n        setDelPolicyPriceId(policyPriceId)\n        setConfirmMessage(\"Bạn có muốn xóa dịch vụ này?\")\n    }\n\n    const answer = (answer) => {\n        if (answer) {\n            delPolicyPrice(delPolicyPriceId).then(() => {\n                setDelPolicyPriceId(null)\n                setConfirmMessage(\"\")\n                setNotiMessage(\"Bạn đã cập nhật thành công!\")\n\n                //update policyPriceList state after delete\n                let newPolicyPriceList = [...policyPriceList]\n                let delPolicyPriceIdx = newPolicyPriceList.findIndex((e) => e.id == delPolicyPriceId)\n                newPolicyPriceList.splice(delPolicyPriceIdx, 1)\n                setPolicyPriceList(newPolicyPriceList)\n            }).catch((err) => {\n                setNotiMessage(\"Có lỗi xảy ra, vui lòng thử lại!\")\n                console.log(err)\n            })\n\n        } else {\n            setConfirmMessage(\"\")\n        }\n    }\n\n    const done = () => {\n        setNotiMessage(\"\")\n    }\n\n    return (\n        <Fragment>\n            <div className=\"container\">\n                <ModalConfirm message={confirmMessage} answer={answer}></ModalConfirm>\n                <ModalNoti message={notiMessage} done={done}></ModalNoti>\n                <h2 className=\"py-3\">Quản lý chính sách giá</h2>\n                <Link to=\"/app/service/price-policy/0\">\n                    <Button color=\"success\" className=\"mb-3\">Thêm mới chính sách giá</Button>\n                </Link>\n                <PolicyPriceTable policyPriceList={policyPriceList} handleDelPolicyPrice={handleDelPolicyPrice}></PolicyPriceTable>\n            </div>\n\n        </Fragment>\n    );\n}\n\nconst PolicyPriceTable = (props) => {\n    let { policyPriceList, handleDelPolicyPrice } = props\n\n    return (\n        <Table hover bordered>\n            <thead>\n                <tr>\n                    <th>STT</th>\n                    <th>Mã chính sách</th>\n                    <th>Tên chính sách</th>\n                    <th>Giảm giá</th>\n                    <th>Thao tác</th>\n                </tr>\n            </thead>\n            <tbody>\n                {policyPriceList.map((item, index) => (\n                    <tr key={item.id}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{item.code}</td>\n                        <td>{item.name}</td>\n                        <td>{item.discount * 100} %</td>\n                        <td>\n                            <Link to={`/app/service/price-policy/${item.id}`}>\n                                <Button color=\"primary\" className=\"mr-2\">Sửa</Button>\n                            </Link>\n                            <Button color=\"danger\" onClick={() => { handleDelPolicyPrice(item.id) }}>Xóa</Button>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </Table>\n    );\n}\n\nexport default PolicyPriceManager;\n\n","import React, { useState, useEffect } from 'react';\nimport { Fragment } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Col, Row } from 'reactstrap';\nimport { Link, useParams } from \"react-router-dom\"\nimport ModalConfirm from \"../../../../Shared/Components/ModalConfirm/ModalConfirm\"\nimport ModalNoti from \"../../../../Shared/Components/ModalNoti/ModalNoti\"\nimport PricePolicyService from \"../../Shared/PricePolicyService\"\n\n\nconst PricePolicyForm = (props) => {\n    let { id } = useParams();\n\n    const [pricePolicy, setPricePolicy] = useState({\n        code: \"\",\n        name: \"\",\n        discount: \"\",\n        type: \"xn\",\n    })\n\n    const [confirmMessage, setConfirmMessage] = useState(\"\")\n    const [notiMessage, setNotiMessage] = useState(\"\")\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setPricePolicy((pricePolicy) => ({ ...pricePolicy, [name]: value }));\n    }\n\n    useEffect(() => {\n        if (id !== \"0\") {\n            fetchPricePolicy();\n        }\n    }, [])\n\n    const fetchPricePolicy = async () => {\n        let fetchedPricePolicy = await PricePolicyService.getPricePolicyById(id)\n        setPricePolicy(fetchedPricePolicy.data)\n    }\n\n    const editPricePolicy = () => {\n        const payload = {...pricePolicy, discount: pricePolicy.discount/100}\n        return PricePolicyService.editPricePolicy(payload)\n    }\n    const postPricePolicy = () => {\n        const payload = {...pricePolicy, discount: pricePolicy.discount/100}\n        return PricePolicyService.postPricePolicy(payload)\n    }\n\n    const handleSubmitForm = () => {\n        if (id === \"0\") {\n            postPricePolicy().then(() => {\n                setNotiMessage(\"Thêm mới chính sách giá thành công!\")\n            }).catch((err) => {\n                console.log(err)\n                setNotiMessage(\"Có lỗi xảy ra, vui lòng thử lại!\")\n            })\n\n        } else {\n            //cap nhat\n            setConfirmMessage(\"Bạn đồng ý cập nhật lại chính sách giá ?\")\n        }\n    }\n\n    const answer = (answer) => {\n        if (answer) {\n            editPricePolicy().then(() => {\n                setConfirmMessage(\"\")\n                setNotiMessage(\"Bạn đã cập nhật thành công!\")\n            }).catch((err) => {\n                setNotiMessage(\"Có lỗi xảy ra, vui lòng thử lại!\")\n            })\n\n        } else {\n            setConfirmMessage(\"\")\n        }\n    }\n\n    const done = () => {\n        setNotiMessage(\"\")\n    }\n\n    return (\n\n        <Fragment>\n            <div className=\"container\">\n                <ModalConfirm message={confirmMessage} answer={answer}></ModalConfirm>\n                <ModalNoti message={notiMessage} done={done}></ModalNoti>\n                <h2 className=\"py-3\">{id !== \"0\" ? \"Chỉnh sửa chính sách giá\" : \"Thêm mới chính sách giá\"}</h2>\n                <Form>\n                    <FormGroup row>\n                        <Label for=\"name\" sm={2}>Tên chính sách</Label>\n                        <Col sm={10}>\n                            <Input type=\"email\" name=\"name\" id=\"name\" placeholder=\"Nhập tên chính sách\" value={pricePolicy.name} onChange={(e) => handleChange(e)} />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"code\" sm={2}>Mã chính sách</Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"code\" id=\"code\" placeholder=\"Nhập mã chính sách\" value={pricePolicy.code} onChange={(e) => handleChange(e)} />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"discount\" sm={2}>Phần trăm giảm giá</Label>\n                        <Col sm={10}>\n                            <Input type=\"number\" name=\"discount\" id=\"discount\" placeholder=\"Nhập % giảm giá\" value={pricePolicy.discount} onChange={(e) => handleChange(e)} />\n                        </Col>\n                    </FormGroup>\n                    <Row>\n                        <Col sm={{ size: 10, offset: 2 }}>\n                            <Link to=\"/app/service/price-policy\">\n                                <Button className=\"mr-2\">Quay lại</Button>\n                            </Link>\n                            <Button color=\"success\" onClick={() => handleSubmitForm()}>{id !== \"0\" ? \"Cập nhật\" : \"Thêm mới\"}</Button>\n                        </Col>\n                    </Row>\n\n                </Form>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default PricePolicyForm;\n\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ServiceList from \"./Components/ServiceList/ServiceList\";\nimport ServiceForm from \"./Components/ServiceForm/ServiceForm\";\nimport PricePolicy from \"./Components/PricePolicy/PricePolicy\";\nimport PricePolicyForm from \"./Components/PricePolicyForm/PricePolicyForm\";\nimport EditServiceForm from \"./Components/ServiceForm/ServiceForm\";\n\nclass Service extends Component {\n  \n  render() {\n    const { path } = this.props.match;\n    return (\n      <div className=\"Service\">\n        <Switch>\n          <Route\n            path={`${path}/price-policy/:id`}\n            component={PricePolicyForm}\n          />\n          <Route path={`${path}/price-policy`} component={PricePolicy} />\n          <Route path={`${path}/:id`} component={ServiceForm} />\n          <Route path={`${path}`} component={ServiceList} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Service;\n","import { Http } from '../../../Helper/Http';\n\nconst API_ENDPOINT = {\n  //////// ORG/USER ////////////////\n  GETLISTUSER: '/org/user/list',\n  CREATEUSER: '/org/user/create',\n  EDITUSER: '/org/user/update?id=',\n  GETEDITUSER: '/org/user/get?id=',\n  DELETEUSER: '/org/user/delete?id=',\n  /////////  AUTH ///////////////////\n  UPDATE_PASSWORD: '/auth/user/set_password',\n  ///////// ORG/ORG ////////////////\n  GETLISTORG: '/org/org/list',\n}\n\nclass UserServices {\n    constructor() {\n        if (UserServices._instance) {\n            return UserServices._instance\n        }\n        UserServices._instance = this;\n    }\n\n    ///////////////// API USER ///////////////////\n  // get data\n  getListUser() {\n    return Http.get(API_ENDPOINT.GETLISTUSER);\n  }\n  // get Delete\n   getDeleteUser(data) {\n      return Http.post(API_ENDPOINT.DELETEUSER + data );\n    }\n\n  // creat User\n  postCreateUser(data) {\n    return Http.post(API_ENDPOINT.CREATEUSER,data);\n  }\n\n  // Edit User\n  postEditUser(id ,data) {\n    return Http.post(API_ENDPOINT.EDITUSER + id, data)\n  }\n\n  // getEditUser\n  getEditUser(id) {\n    return Http.get(API_ENDPOINT.GETEDITUSER + id )\n  }\n\n  ///////////////// API ORG ///////////////////\n  getListOrg(){\n    return Http.get(API_ENDPOINT.GETLISTORG)\n  }\n\n  //UPDATE PASSWORD\n  postUpdatePassword(data) {\n    return Http.post(API_ENDPOINT.UPDATE_PASSWORD, data);\n  }\n}\nconst instance = new UserServices();\n\nexport default instance;","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport { BrowserRouter as Link } from 'react-router-dom';\nimport ModalConfirm from '../../../../../../Shared/Components/ModalConfirm/ModalConfirm';\nimport ModalNoti from '../../../../../../Shared/Components/ModalNoti/ModalNoti';\nimport UserService from '../../../../Shared/UserService';\nimport { EQUAL_ARRAY, ROLE } from '../../../../../../Constances/const';\n\nexport default class AddUpdateUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      org_id: '',\n      full_name: '',\n      roles: [],\n      phone: '',\n      birthday: '',\n      gender : '',\n\n      listOrg: [],\n      listRole: [],\n      setRole: [],\n      confirmMessage: ''\n    }\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    ////////// get user ////////////\n    if (id !== 'create') {\n      UserService.getEditUser(id)\n        .then(response => {\n          let { full_name, username, org_id, phone, birthday, roles, gender } = response.data\n          let setRole = roles.map(el => el);\n          this.setState({\n            full_name, username, org_id, phone, roles, birthday, gender, roles, setRole\n          });\n\n        }).catch(error => {\n          console.log(error);\n        });\n    }\n    ////////// get list org ///////////\n    UserService.getListOrg()\n      .then(response => {\n        this.setState({\n          listOrg: response.data,\n          org_id: response.data[0].id\n        })\n      }).catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  onHandleChange = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  onHandleCheckBox = (e) => {\n    if (e.target.checked == true) {\n      this.state.setRole.push(e.target.value);\n    } else {\n      this.state.setRole.splice(this.state.setRole.indexOf(e.target.value), 1);\n    }\n  }\n\n  onSubmit = () => {\n    let id = this.props.match.params.id;\n    if (id !== 'create') {\n      this.setState({\n        confirmMessage: 'Bạn muốn cập nhập thông tin này không ?'\n      });\n    } else {\n      this.setState({\n        confirmMessage: 'Bạn muốn thêm mới thành viên này không ?'\n      });\n    }\n  }\n\n  onSelectGender = (e) => {\n    let gender = e.target.value;\n    this.setState({ gender });\n  } \n\n  answer = (answer) => {\n    console.log(this.state.gender, \"92\")\n    let id = this.props.match.params.id;\n    let { full_name, username, phone, org_id, birthday, gender, roles, setRole } = this.state;\n    let obj = {};\n    if (EQUAL_ARRAY(setRole.sort(), roles.sort())) {\n      obj = { full_name, username, phone, org_id, birthday, gender }\n    } else {\n      obj = { full_name, username, phone, org_id, birthday, gender, roles: setRole }\n    }\n    if (answer) {\n      let method = (id !== 'create') ? UserService.postEditUser(id, obj) : UserService.postCreateUser(obj);\n      let notiMessage = (id !== 'create') ? 'Cập nhât thành công' : 'Tạo mới thành công'\n      method.then(response => {\n        if (response.status === 200) {\n          this.setState({\n            notiMessage\n          });\n        }\n      });\n    } else {\n      this.setState({\n        confirmMessage: ''\n      })\n    }\n  }\n\n  doneAlret = () => {\n    if (this.state.notiMessage) {\n      window.location.replace('/app/user')\n    } else {\n      this.setState({ notiMessage: '' })\n    }\n  }\n\n  onCancel = () => {\n    window.location.assign('/app/user')\n  }\n\n\n  render() {\n    let { full_name, username, roles, phone, org_id, birthday, listOrg , gender} = this.state\n    let id = this.props.match.params.id;\n    return (\n      <div className=\"addUpdate \">\n        <h4 className=\"text-center title-card-lg\">\n          {id !== 'create' ? \"Cập nhập thông tin thành viên\" : \"Tạo mới nhân viên\"}\n        </h4>\n        <Form\n          style={{ width: \"700px\", margin: \"40px auto\" }}\n          onSubmit={this.onHandleSubmit}\n        >\n          <Row form>\n            <Col>\n              <FormGroup sm={6}>\n                <Label for=\"first_name\">Họ Tên</Label>\n                <Input\n                  type=\"text\"\n                  className=\"full_name\"\n                  name=\"full_name\"\n                  value={full_name}\n                  onChange={(e) => this.onHandleChange(e)}\n                />\n              </FormGroup>\n            </Col>\n          </Row>\n          <FormGroup>\n            <Label for=\"username\">Tên tài khoản</Label>\n            <Input\n              readOnly={id !== 'create' ? true : false}\n              type=\"text\"\n              className=\"username\"\n              name=\"username\"\n              value={username}\n              onChange={(e) => this.onHandleChange(e)}\n            />\n          </FormGroup>\n          {/* <FormGroup >\n              <Label>Chức vụ</Label>\n              <Input\n                readOnly\n                type=\"select\"\n                id=\"role\"\n                name=\"role\"\n                value={roles}\n                onChange={(e) => this.onHandleChange(e)}\n              >\n                {Object.keys(ROLE).map((k, i) => (<option key={i} value={ROLE[k].value}>{ROLE[k].name}</option>))}\n              </Input>\n            </FormGroup> */}\n          <FormGroup>\n            <Label for=\"phone\">Số điện thoại</Label>\n            <Input\n              type=\"text\"\n              className=\"phone\"\n              name=\"phone\"\n              value={phone}\n              onChange={(e) => this.onHandleChange(e)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"birthday\">Ngày sinh</Label>\n            <input\n              type=\"date\"\n              className=\"birthday form-control\"\n              // min=\"1890-04-01\"\n              // max=\"2050-04-20\"\n              name=\"birthday\"\n              min=\"01-04-1890\"\n              max=\"01-04-2050\"\n              value={birthday}\n              onChange={(e) => this.onHandleChange(e)}\n              required=\"required\"\n            ></input>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"birthday\">Giới tính</Label>\n            <Input type=\"select\" name=\"gender\" id=\"gender\" onChange={(e) => this.onSelectGender(e) } >\n              <option value=\"\">Chọn giới tính</option>\n              <option value=\"male\">Nam</option>\n              <option value=\"female\">Nữ</option>\n            </Input>\n          </FormGroup>\n          {this.state.roles.includes(ROLE.ADMIN.value) === false ?\n            <FormGroup>\n              <Label for=\"position\">Vai trò</Label>\n              <Row sm={4}>\n                {Object.values(ROLE).map((k, i) => {\n                  if (k.value !== ROLE.ADMIN.value) {\n                    return (\n                      <div>\n                        <Col sm={12}>\n                          <Label sm={9} className=\"mt-1\" for=\"position\">{k.name}</Label>\n                          <Input\n                            sm={3} className=\"mt-3\"\n                            key={i} type=\"checkbox\"\n                            value={k.value}\n                            defaultChecked={roles.find(role => role == k.value ? true : false)}\n                            onClick={(e) => this.onHandleCheckBox(e)}\n                          // onClick={(e) => this.unCheck(e)}\n                          />\n                        </Col>\n                      </div>\n                    )\n                  }\n                })}\n              </Row>\n            </FormGroup>\n            : null}\n\n\n          <div className=\"addControl\">\n            <Button\n              outline\n              color=\"primary\"\n              onClick={this.onSubmit}\n            >\n              {id !== 'create' ? \"Cập nhập\" : \"Thêm mới\"}\n            </Button>{\" \"}\n            <Link to=\"../user/\">\n              <Button\n                color=\"danger\"\n                onClick={this.onCancel}\n              >\n                Hủy\n              </Button>\n            </Link>\n          </div>\n        </Form>\n        <ModalConfirm\n          message={this.state.confirmMessage}\n          answer={this.answer}\n        ></ModalConfirm>\n        <ModalNoti\n          message={this.state.notiMessage}\n          done={this.doneAlret}\n        ></ModalNoti>\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { Fragment, Row } from \"react\";\nimport { ROLE, DATE} from \"../../../../../../Constances/const\";\nimport { AuthService } from '../../../../Shared';\n\nclass RowTable extends Component {\n  onDelete = (id) => {\n    id = this.props.user.id;\n    this.props.onDelete(id);\n  };\n  edit = (id) => {\n    let url = \"/app/user/\" + id;\n    window.location.assign(url);\n  };\n  render() {\n    let user = this.props.user;\n    let { id, full_name, username, roles, phone, birthday } = this.props.user;\n    const ctime = new Date(user.ctime).toLocaleDateString(\"en-gb\" , { day : \"2-digit\", month : \"2-digit\", year : \"numeric\"}).split(\"/\");\n    const values = Object.values(ROLE).map(v => v);\n    const role_name = roles.map(role => {\n      return values.find(v => {\n        if (v.value == role) {\n          return v.name\n        }\n      })\n    })\n\n    return (\n      <Fragment>\n        <tr>\n          <td className=\"dw-5\" scope=\"row\">\n            {this.props.index + 1}\n          </td>\n          <td width=\"10%\">{username}</td>\n          <td>{full_name}</td>\n          {/* <td>{ROLE[roleKey]?.name}</td> */}\n          <td>{role_name?.map(key => key === role_name[role_name?.length - 1] ? key?.name : key?.name + \" - \")} </td>\n          <td>\n            {`${ctime[0]}-${ctime[1]}-${ctime[2]}`}\n          </td>\n          <td>{phone}</td>\n          <td>\n            {DATE(birthday, \"DDMMYYYY\")}\n          </td>\n          <td width=\"15%\">\n            <Button\n              outline\n              color=\"primary\"\n              className=\"btn-sm\"\n              onClick={() => this.edit(user.id)}\n            >\n              <span>Sửa</span>\n            </Button>{\" \"}\n            <Button\n              color=\"danger\"\n              className=\"btn-sm\"\n              onClick={this.onDelete}\n            >\n              Xóa\n            </Button>{\" \"}\n            {AuthService.isRole(ROLE.ADMIN.value) ?\n              <Button\n                outline\n                color=\"primary\"\n                className=\"btn-sm\"\n                onClick={() => window.location.assign(`/app/user/setpassword/${id}`)}\n              >\n                Đổi mật khẩu\n              </Button>\n              : null\n            }\n          </td>\n        </tr>\n      </Fragment>\n    );\n  }\n}\nexport default RowTable;\n","import React, { Component } from 'react';\nimport { Table, Row, Col } from 'reactstrap';\nimport RowTable from './RowTable';\n\nclass TableUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            confirmMessage: '',\n            notiMessage: '',\n        }\n    }\n\n    render() {\n        let { userList } = this.props;\n        let user = userList.map((user, index) => {\n            return <RowTable key={user.id} user={user} index={index}\n                onDelete={this.props.onDelete}\n            ></RowTable>\n        })\n        return (\n            <div className=\"table-responsive min-h-100 df-h-75\">\n                <table className=\"table table-head-fixed table-bordered\">\n                    <thead>\n                        <tr>\n                            <th className=\"dw-5\">STT</th>\n                            <th>Tên Đăng Nhập</th>\n                            <th>Tên Người dùng</th>\n                            <th >Vai trò</th>\n                            <th>Ngày Bắt Đầu</th>\n                            <th>Số Điện Thoại</th>\n                            <th>Ngày sinh</th>\n                            <th>Tùy Chỉnh</th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"bodyTable\">\n                        {user}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\nexport default TableUser\n","import React, { Component } from 'react';\nimport { Col, Row, Button, Input } from 'reactstrap';\nimport './Main.scss';\nimport TableUser from '../TableUser/TableUser';\nimport ModalConfirm from '../../../../../../Shared/Components/ModalConfirm/ModalConfirm';\nimport ModalNoti from '../../../../../../Shared/Components/ModalNoti/ModalNoti';\nimport UserService from '../../../../Shared/UserService';\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userList: [],\n            id: '',\n            confirmMessage: '',\n            notiMessage: '',\n            textFilter: '',\n        }\n    }\n\n    componentDidMount=()=>{\n        this.getUserList();\n    }\n    //list user\n    getUserList=()=>{\n        UserService.getListUser().then(\n            response => {\n                this.setState({userList: response.data});\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    onDelete=(id)=>{\n        this.setState({\n            id,\n            confirmMessage: 'Bạn muốn xóa thông tin người dùng này không'\n        })      \n    }\n    answer = (answer) => {  \n        if (answer){\n            let id = this.state.id;\n            UserService.getDeleteUser(id)\n                .then(response => {\n                    if (response.status === 200) {\n                        this.setState({\n                            notiMessage : 'Bạn xóa thành công'\n                        });\n                    }\n                }); \n            this.getUserList();\n        }   \n        this.props.history.push('/app/user');\n        this.setState({\n            confirmMessage: ''\n        })\n    }\n    doneAlret = () => {\n        if (this.state.notiMessage) {\n            window.history.back();\n            this.getUserList();  \n        } \n        this.setState({ notiMessage: '' }) \n    }\n\n    onChangeSearch = (e)=>{\n        this.setState({\n            textFilter: e.target.value\n        });\n    }\n    // createUser=()=>{\n        \n    // }\n    createUser=()=>{\n        this.props.history.push(\"/app/user/create\");\n    }\n    render() {\n        let {textFilter, userList} = this.state;\n        if(textFilter){\n            userList = userList.filter((user) =>{\n                return user.username.toLowerCase().indexOf(textFilter) !== -1;\n            })\n        }\n        return (\n            <Col xs={{ size: '10', offset: '1'}} className=\"Main customCard mr-top-20\">\n                <h4 className=\"title-card-lg\">Quản lý nhân viên</h4>\n                <Row className=\"search-user\">\n                    <Button onClick={()=>this.createUser()}><span>Thêm mới</span></Button>                   \n                    <div className=\"search\">\n                        <Input type=\"text\" placeholder=\"Tìm kiếm tài khoản\" \n                                    value={this.state.value} \n                                    onChange={this.onChangeSearch} \n                        ></Input>\n                    </div>\n                </Row>\n                <TableUser \n                    userList={userList} \n                    onDelete = {this.onDelete}\n                ></TableUser>\n                <ModalConfirm message={this.state.confirmMessage} answer={this.answer}></ModalConfirm> \n                <ModalNoti message={this.state.notiMessage} done={this.doneAlret}></ModalNoti>\n            </Col>\n        );\n    }\n}\nexport default Main\n","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport ModalConfirm from '../../../../../../Shared/Components/ModalConfirm/ModalConfirm';\nimport ModalNoti from '../../../../../../Shared/Components/ModalNoti/ModalNoti';\nimport UserService from '../../../../Shared/UserService';\nimport { ERR_MSG } from '../../../../../../Constances/const';\nimport { AuthService } from '../../../../Shared';\nimport { ROLE } from '../../../../Shared';\n\nexport default class ChangePasswordForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      full_name : \" \",\n      confirmPassword: '',\n      newPassword: '',\n      confirmMessage: '',\n      err: '',\n    }\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    ////////// get user ////////////\n    if (id) {\n      UserService.getEditUser(id)\n      .then(response => {\n          const data = response.data;\n          this.setState({\n            full_name: data.full_name,\n            username: data.username,\n          });\n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n    }\n  }\n\n  onChangeNewPw = (e) => {\n    let newPassword = e.target.value;\n    if(newPassword.length < 6){\n        this.setState({\n            err: ERR_MSG.MIN_LENGTH + ' 5',\n            newPassword\n        });   \n    }else{\n        this.setState({\n            newPassword,\n            err: ''\n        });\n    }  \n  }\n  onChangeCfPw = (e) => {\n      this.setState({confirmPassword: e.target.value})\n  }\n  ////////////////// set confirm message //////////////\n  onSubmit = () => {\n    const {newPassword, confirmPassword, err} = this.state;\n    if(err === ''){\n        if(newPassword !== confirmPassword){\n            this.setState({\n                err: ERR_MSG.CF_PASSWORD,\n            })\n        }else{\n            this.setState({\n                confirmMessage: 'Bạn muốn cập nhập lại mật khẩu?'\n            });\n        }\n    }\n  }\n\n\n  answer = (answer) => {\n    const id = this.props.match.params.id;\n    if (answer) {\n        const data = {\n            id,\n            password: this.state.newPassword\n        }\n        UserService.postUpdatePassword(data)\n        .then(res => {\n            this.setState({notiMessage: 'Cập nhật thành công!'});\n        }).catch(err => {\n            this.setState({notiMessage: 'Cập nhật mật khẩu thất bại!'});\n            console.log(err);\n        });\n    }\n    else {\n      this.setState({\n        confirmMessage: ''\n      })\n    }\n  }\n\n  doneAlert = () => {\n    if (this.state.notiMessage) {\n      window.history.back();\n    } else {\n      this.setState({ notiMessage: '' })\n    }\n  }\n  onCancel = () => {\n    window.history.back();\n  }\n  render() {\n    let { full_name, username, confirmPassword, newPassword, err } = this.state;\n    return (\n      <div className=\"addUpdate \">\n          <h4 className=\"text-center title-card-lg\">\n            Cập nhập mật khẩu\n          </h4>\n          <Form\n            style={{ width: \"500px\", margin: \"40px auto\" }}\n          >\n            <Row form>\n              <Col>\n                <FormGroup sm={6}>\n                  <Label for=\"full_name\">Họ Tên</Label>\n                  <Input\n                    readOnly\n                    type=\"text\"\n                    className=\"full_name\"\n                    name=\"full_name\"\n                    value={full_name}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <FormGroup>\n              <Label for=\"username\">Tên tài khoản</Label>\n              <Input\n                readOnly\n                type=\"text\"\n                className=\"username\"\n                name=\"username\"\n                value={username}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"newPassword\">Mật khẩu mới</Label>\n              <Input\n                type=\"password\"\n                className=\"newPassword\"\n                name=\"newPassword\"\n                value={newPassword}\n                onChange={this.onChangeNewPw}\n              />\n              {err !== '' ? <span style={{ 'color': 'red' }}>{err}</span> : null}\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"confirmPassword\">Xác nhận lại  mật khẩu mới</Label>\n              <Input\n                type=\"password\"\n                className=\"confirmPassword\"\n                name=\"confirmPassword\"\n                value={confirmPassword}\n                onChange={this.onChangeCfPw}\n              />\n            </FormGroup>\n            <div className=\"addControl\">\n              <Button\n                outline\n                color=\"primary\"\n                onClick={this.onSubmit}\n              >\n                Cập nhập\n              </Button>{\" \"}\n              <Button\n                  color=\"danger\"\n                  onClick={this.onCancel}\n              >\n                  Hủy\n              </Button>\n            </div>\n          </Form>\n          <ModalConfirm\n            message={this.state.confirmMessage}\n            answer={this.answer}\n          ></ModalConfirm>\n          <ModalNoti\n            message={this.state.notiMessage}\n            done={this.doneAlert}\n          ></ModalNoti>\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AddUpdateUser from \"./Components/AddUpdateUser/AddUpdateUser\";\nimport Main from \"./Components/Main/Main\";\nimport ChangePasswordForm from \"./Components/ChangePassword/ChangePasswordForm\";\n\nclass User extends Component {\n\n  render() {\n    const { path } = this.props.match;\n    return (\n      <div className=\"User\">\n        <Switch>\n          <Route path={`${path}/setpassword/:id`} component={ChangePasswordForm} />\n          <Route path={`${path}/:id`} component={AddUpdateUser} />\n          <Route path={`${path}/`} component={Main} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default User;\n","import { Http } from \"../../../../Helper/Http.js\";\n\nconst API_ENDPOINT = {\n  //////// LOCATION\n  LISTPRODUCT: '/product/list',\n  DELETEPRODUCT: '/product/delete',\n  CREATEPRODUCT: '/product/create',\n  UPDATEPRODUCT: '/product/update',\n  GETPRODUCT: '/product/get?id=',\n\n  CREATEPRODUCER: '/product/producer/create',\n  LISTPRODUCER: '/product/producer/list',\n  LISTPART: '/product/part/list',\n  CREATE_PART: '/product/part/create',\n  GET_PART: '/product/part/get?id=',\n  DELETE_PART: '/product/part/delete',\n  UPDATE_PART: '/product/part/update'\n}\n\nclass ProductService {\n  constructor() {\n    if (ProductService._instance) {\n      return ProductService._instance;\n    }\n    ProductService._instance = this;\n\n    // ... Your rest of the constructor code goes after this\n  }\n\n  ///////////////// API LOCATION ///////////////////\n\n\n  //LIST PRODUCT\n  listProduct() {\n    return Http.get(API_ENDPOINT.LISTPRODUCT);\n  }\n\n  //LIST PRODUCER\n  listProducer() {\n    return Http.get(API_ENDPOINT.LISTPRODUCER);\n  }\n\n  //LIST PART\n  listPart() {\n    return Http.get(API_ENDPOINT.LISTPART);\n  }\n  // CREATE PART\n  createPart(data) {\n    return Http.post(API_ENDPOINT.CREATE_PART, data)\n  }\n  deletePart(data) {\n    return Http.post(API_ENDPOINT.DELETE_PART, data)\n  }\n  getPart(id) {\n    return Http.get(API_ENDPOINT.GET_PART + id)\n  }\n  updatePart(data) {\n    return Http.post(API_ENDPOINT.UPDATE_PART, data)\n  }\n\n  //DELETE PRODUCT\n  deleteProduct(data) {\n    return Http.post(API_ENDPOINT.DELETEPRODUCT, data);\n  }\n\n  //CREATE PRODUCT\n  createProduct(data) {\n    return Http.post(API_ENDPOINT.CREATEPRODUCT, data);\n  }\n\n  //UPDATE PRODUCT\n  updateProduct(data) {\n    return Http.post(API_ENDPOINT.UPDATEPRODUCT, data);\n  }\n\n  //GET PRODUCT\n  getProduct(id) {\n    return Http.get(API_ENDPOINT.GETPRODUCT + id);\n  }\n\n\n  //PRODUCER\n  getproducerById(id) {\n    return Http.get(`${API_ENDPOINT.BASE}/producer/get`, { id })\n  }\n  getProducerList() {\n    return Http.get(`${API_ENDPOINT.BASE}/producer/list`)\n  }\n  postProducer(payload) {\n    return Http.post(`${API_ENDPOINT.CREATEPRODUCER}`, (payload))\n  }\n  editProducer(payload) {\n    return Http.get(`${API_ENDPOINT.BASE}/producer/update`, (payload))\n  }\n}\n\nconst instance = new ProductService();\n\nexport default instance;\n","import React, { Component } from 'react'\nimport { Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport AuthService from \"../../../../Shared/Services/AuthService\";\nimport { ROLE, PRODUCT_UNIT, ROUTE } from \"../../../../Constances/const\";\n\nclass ItemProduct extends Component {\n\n    onDelete = (id) => {\n          this.props.onDelete(id);\n    };\n    \n    render() {\n        let { listProduct, index} = this.props;\n        let listProperties  = this.props.listProduct.partName;\n        let itemProperties = listProperties.map((item, index) => {\n            return <span href={'/warehouse/'+item } key={index} index={index} > {item} </span>;\n        }); \n        return (\n            <tr>\n                <th scope=\"row\">{index+1}</th>\n                <td>{listProduct.name}</td>\n                <td className=\"price\">{listProduct.price}</td>\n                <td className=\"unit\">\n                    {PRODUCT_UNIT.map(u => {\n                        if(u.code === listProduct?.unit)\n                        return <span>{u.label}</span>\n                    })}\n                </td>\n                <td className=\"route\">\n                    {ROUTE.map(r => {\n                        if (listProduct?.attrs?.route === r.value)\n                            return <span>{r.name}</span>\n                    })}\n                </td>\n                <td className=\"producer\">{listProduct.producerName}</td>\n                <td>\n                    {itemProperties}\n                </td>\n                <td>{listProduct.attrs?.description}</td>\n                <td>\n                    <div className=\"btnControl\">\n                        <Link to={`./product/${listProduct.id}`} className=\"btn btn-secondary btn-sm\" >Sửa</Link>\n                        {AuthService.isRole(ROLE.ADMIN.value) || AuthService.isRole(ROLE.INVENTORY.value) ? <Button className=\"btn-sm ml-5\" color=\"danger\" onClick={() => this.onDelete(listProduct.id)}>Xóa</Button> : null}\n                    </div>\n                </td>\n            </tr>\n        )\n    }\n}\nexport default ItemProduct;","import React, { Component } from 'react';\nimport { Table, Button, TabContent, TabPane, Nav, NavItem, NavLink, Row, Col, Label, Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ProductService from '../Shared/ProductService';\nimport ItemProduct from './ItemProduct';\nimport ModalConfirm from '../../../../Shared/Components/ModalConfirm/ModalConfirm';\nimport classnames from 'classnames';\nclass ListProduct extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: '',\n      listProduct: [],\n      notiConfirm: '',\n      activeTab: '1',\n      textSearch: ''\n    }\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    let promiseArr = [];\n    promiseArr.push(ProductService.listProduct());\n    promiseArr.push(ProductService.listProducer());\n    promiseArr.push(ProductService.listPart());\n\n    Promise.all(promiseArr).then(([list_product, list_producer, list_part]) => {\n      let listProduct = list_product.data;\n      let listProducer = list_producer.data;\n      let listPart = list_part.data;\n      listProduct.partName = [];\n      listProduct.map(pro => {\n        let found = listProducer.find(p => {\n          return pro.producer_id === p.id;\n        });\n        pro.producerName = found ? found.name : 'NA';\n        let partArr = [];\n        pro.parts.map(p => {\n          let found = listPart.find(pa => {\n            return p.id == pa.id;\n          });\n          let result = found ? found.name : 'NA';\n          partArr.push(result);\n        });\n        pro.partName = partArr;\n        return pro;\n      });\n      this.setState({\n        listProduct,\n      });\n    }).catch(err => {\n      this.setState({\n        notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n      })\n      console.log(err);\n    });\n  }\n\n  onDelete = (id) => {\n    this.setState({\n      notiConfirm: 'Bạn có chắc chắn muốn xóa !!',\n      id: id\n    })\n  };\n\n  answer = (isYes) => {\n    if (isYes) {\n      let data = {\n        id: this.state.id\n      }\n      ProductService.deleteProduct(data)\n        .then(() => {\n          this.setState({ notiConfirm: '' })\n          this.getData();\n          window.location.href = './product'\n        }).catch((err) => {\n          this.setState({\n            notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n          })\n          console.log(err);\n        });\n    } else {\n      this.setState({ notiConfirm: '' })\n    }\n  }\n  toggle = (activeTab) => {\n    this.setState({ activeTab })\n  }\n  render() {\n    let { listProduct, activeTab, textSearch } = this.state;\n    const itemProduct = listProduct.filter(i => i.name?.toUpperCase()?.includes(`${textSearch.toUpperCase()}`))\n    .map((item, index) => {\n      return <ItemProduct key={index} listProduct={item} index={index} onDelete={this.onDelete} onUpdate={this.onUpdate} />;\n    });\n    return (\n        <Col xs={{ size: '10', offset: '1'}} className=\"customCard mt-3 \">        \n          <Nav tabs>\n            <NavItem>\n              <NavLink\n                className={'pointer ' + classnames({ active: activeTab === '1' })}\n                onClick={() => { this.toggle('1'); }}\n              >\n                <h1 className=\"title-card-lg\">Danh sách thuốc</h1>\n              </NavLink>\n            </NavItem>\n            {/* <NavItem>\n              <NavLink\n                className={'pointer ' + classnames({ active: activeTab === '2' })}\n                onClick={() => { this.toggle('2'); }}\n              >\n                <h1 className=\"title-card-lg\">Danh vật tư</h1>\n              </NavLink>\n            </NavItem> */}\n          </Nav>\n          <Row className=\"pt-10\">\n            <Label xs={1}>Tìm kiếm</Label>\n            <Col xs={2}>\n              <Input placeholder=\"Nhập tên thuốc\" type=\"search\" onChange={e => this.setState({ textSearch: e.target.value})} />\n            </Col>\n            <Col xs={{ size: '2', offset: '7'}} className=\"end\">\n              <Link to={`/app/product/0`}>\n                <Button>\n                  <span >Thêm Mới</span>\n                </Button>\n              </Link>\n            </Col>\n          </Row>\n\n          <TabContent activeTab={activeTab}>\n            <TabPane tabId=\"1\">\n              <Row>\n                <Table  hover bordered striped>\n                  <thead>\n                    <tr className=\"thead\">\n                      <th>STT</th>\n                      <th >Tên thuốc</th>\n                      <th className=\"price\">Giá Bán</th>\n                      <th className=\"unit\">Đơn vị</th>\n                      <th className=\"route\">Đường dùng</th>\n                      <th className=\"producer\">Nhà sản xuất</th>\n                      <th >Thành phần dược liệu</th>\n                      <th >Ghi chú</th>\n                      <th>Tùy chỉnh</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bodyTable\">{itemProduct}</tbody>\n                </Table>\n              </Row>\n            </TabPane>\n            <TabPane tabId=\"2\">\n              <Row>\n                <Table  hover bordered striped>\n                  <thead>\n                    <tr className=\"thead\">\n                      <th>STT</th>\n                      <th >Tên vật tư</th>\n                      <th className=\"price\">Giá nhập</th>\n                      <th className=\"producer\">Nhà sản xuất</th>\n                      <th >Ghi chú</th>\n                      <th>Tùy chỉnh</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bodyTable\"></tbody>\n                </Table>\n              </Row>\n            </TabPane>\n          </TabContent>\n          <ModalConfirm message={this.state.notiConfirm} answer={this.answer}></ModalConfirm>\n        </Col>\n    );\n  }\n}\n\nexport default ListProduct;","import React from \"react\";\nimport { Button, FormGroup, Label, Input, Col, Row }from \"reactstrap\";\nimport ProductService from \"../Shared/ProductService\";\nimport { FormParent, ModalNoti, ModalConfirm } from \"../Shared\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport { ATTR_UNIT, ROUTE, ROLE, PRODUCT_UNIT } from \"../../../../Constances/const\";\nimport AuthService from \"../../../../Shared/Services/AuthService\";\nclass FormProduct extends FormParent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            producer_id: '',\n            form: this._getInitFormData({ \n                unit: '',\n                strength: 0,\n                // max_dose: 0,\n                // instruction: '',\n                package_size: 0,\n                default_quantity: 0,\n                // default_day_supply: 0,\n                default_daily_usage: 0,\n                max_dose_per_kg: 0,\n                route: '',\n                description: '',\n            }),\n            unitProduct: '',\n            origin_price: 1,\n            price: 1,        \n            parts: [],\n            arrSelected: [],\n            listPart: [],\n            listProducer: [],\n            isBack: true,\n        };\n    }\n\n    componentDidMount() {\n        let { match } = this.props;\n        let id = match.params.id;\n        this.setState({ id });\n        ProductService.listProducer()\n            .then((res) => {\n                this.setState({\n                    listProducer: res.data\n                });\n            }).catch((err) => { console.log(err) });\n        if (id == 0) {\n            ProductService.listPart()\n                .then(response => {\n                    this.setState({\n                        listPart: response.data,\n                    });\n                }).catch(error => console.log(error));\n        } else {\n            let promiseArr = [];\n            promiseArr.push(ProductService.getProduct(id));\n            promiseArr.push(ProductService.listPart());\n            Promise.all(promiseArr).then(([product, list_part]) => {\n                let data = product.data;\n                let listPart = list_part.data;\n                console.log('data', data);\n                let parts = data.parts;\n                let result = [];\n                parts.forEach(a => {\n                    let found = listPart.find(p => {\n                        return a.id == p.id;\n                    });\n                    result.push(found ? found : '');\n                    a.name = found? found.name : 'N/A';\n                });\n                \n                //Kiem tra du lieu\n                if(!data.attrs.default_daily_usage) data.attrs.default_daily_usage = 0;\n                if(!data.attrs.max_dose_per_kg) data.attrs.max_dose_per_kg = 0;\n                if(!data.attrs.description) data.attrs.description = 0;\n                this._fillForm(data.attrs);\n\n                this.setState({\n                    listPart,\n                    parts,\n                    name: data.name,\n                    unitProduct: data.unit,\n                    price: data.price,\n                    origin_price: data.origin_price,\n                    producer_id: data.producer_id,\n                    arrSelected: result\n                });\n                console.log(this.state.unitProduct);\n            });\n        }\n        return;\n    }\n\n    onSelectPart = (list, item) => {\n        let arr = this.state.parts;\n        let objP = {};\n        objP.id = item.id;\n        objP.name = item.name;\n        arr.push(objP);\n        this.setState({\n            parts: arr\n        });\n    }\n    onRemovePart = (list, item) => {\n        let arr = this.state.parts;\n        let pos = arr.findIndex((el) => {\n            return el.id == item.id\n        });\n        arr.splice(pos, 1);\n        this.setState({\n            parts: arr\n        })  \n    }\n    onBack = () => {\n        window.history.back();\n    }\n    onChange = (e) => {\n        console.log(e.target.value, e.target.name);\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    onChangePQty = (e, i) => {\n        let arr = this.state.parts;\n        arr[i].quantity = e.target.value;\n        this.setState({\n            parts: arr,\n        });\n    }   \n    onChangePUnit = (e, i) => {\n        let arr = this.state.parts;\n        arr[i].unit = e.target.value;\n        this.setState({\n            parts: arr,\n        })\n    }\n    onSubmit = () => {\n        // this._validateForm();\n        let { id, name, producer_id, parts, price, form, origin_price, unitProduct } = this.state;\n        console.log('ppro', producer_id);\n        if(producer_id === \"Chọn nhà sản xuất\" || !producer_id) {\n            this.setState({\n                isBack: false,\n                notiMessage: 'Bạn chưa chọn nhà sản xuất',\n            });\n            return\n        }\n        if(unitProduct === \"Chọn nhà sản xuất\" || !unitProduct) {\n            this.setState({\n                isBack: false,\n                notiMessage: 'Bạn chưa chọn đơn vị',\n            });\n            return\n        }\n        let strength = form.strength.value;\n        // let instruction = form.strength.value;\n        let unit = form.unit.value;\n        let package_size = form.package_size.value;\n        // let max_dose = form.max_dose.value;\n        // let default_day_supply = form.default_day_supply.value;\n        let default_quantity = form.default_quantity.value;\n        let default_daily_usage = form.default_daily_usage.value;\n        let route = form.route.value;\n        let max_dose_per_kg = form.max_dose_per_kg.value;\n        let description = form.description.value;\n        let attrs = {\n            strength,\n            // instruction,\n            unit,\n            package_size,\n            // max_dose,\n            default_quantity,\n            // default_day_supply,\n            default_daily_usage,\n            route,\n            max_dose_per_kg,\n            description\n        }\n        if (id == 0) {\n            let data = {\n                name,\n                producer_id,\n                attrs,\n                parts,\n                unit: unitProduct,\n                price: Number(price),\n                origin_price: Number(origin_price)\n            };\n            ProductService.createProduct(data)\n                .then(( ) => {\n                    this.setState({\n                        notiMessage: 'Thêm mới thành công'\n                    })\n                }).catch((err) => {\n                    this.setState({\n                        notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n                    })\n                    console.log(err);\n                });\n        } else {\n            let data = {\n                id,\n                name,\n                producer_id,\n                attrs,\n                parts,\n                unit: unitProduct,\n                price: Number(price),\n                origin_price: Number(origin_price)\n            };  \n            ProductService.updateProduct(data)\n                .then(() => {\n                    this.setState({\n                        notiMessage: 'Cập nhật thành công'\n                    })\n\n                }).catch((err) => {\n                    this.setState({\n                        notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n                    })\n                    console.log(err);\n                });\n        }\n    };\n\n    doneAlert = () => {\n        if (this.state.notiMessage && this.state.isBack) {\n            window.history.back();\n        } else {\n            this.setState({ \n                notiMessage: '',\n                isBack: true \n            })\n        }\n    }\n\n    render() {\n        let { listProducer, confirmMessage, answer, parts, id, name, producer_id, listPart, arrSelected, price, origin_price, unitProduct,  } = this.state;\n        let { strength, instruction, unit, package_size, default_day_supply, default_quantity, max_dose, route, default_daily_usage, max_dose_per_kg, description } = this.state.form\n        let listP = listProducer.map((data, i) => {\n            return (\n                <option value={data.id} key={i}>\n                    { data.name}\n                </option>\n            );\n        });\n        let itemPart = parts.map((el, i) => {\n            return (\n                <Row key={i} className=\"itemPart\">            \n                    <Col xs={{ size: '3', offset: '4' }}>\n                        <Input index={i} key={i} type=\"text\" readOnly name=\"part_name\" value={el.name} />\n                    </Col>\n                    <Col>\n                        <Input index={i} key={i} type=\"text\" id=\"part_unit\" name=\"part_unit\" placeholder=\"Nhập số lượng\" value={el.quantity} onChange={(e) => this.onChangePQty(e, i)} />\n                    </Col>\n                    {/* <Col>\n                        <Input index={i} key={i} type=\"text\" id=\"part_qty\" name=\"part_qty\" placeholder=\"Nhập đơn vị\" value={el.unit} onChange={(e) => this.onChangePUnit(e, i)} />\n                    </Col> */}\n                </Row>\n            );\n        });\n        return (\n            <div className=\"MedicineForm\">\n                <Row>\n                    <Col xs={1} className=\"left\"></Col>\n                    <Col xs={10} className=\"content\">\n                        <ModalConfirm\n                            message={confirmMessage}\n                            answer={answer}\n                        ></ModalConfirm>\n                        <ModalNoti message={this.state.notiMessage} done={this.doneAlert}></ModalNoti>\n                        <h1 className=\"title-card-lg\">\n                            {id == 0 ? \"Thêm mới thuốc\" : \"Chỉnh sửa thuốc\"}\n                        </h1>\n                        <FormGroup name=\"form_medecine\">\n                            <Row>\n                                <Col xs=\"4\">\n                                    <Row>\n                                        <Col xs=\"4\">\n                                            <Label>Tên thuốc</Label>\n                                        </Col>\n                                        <Col xs=\"8\">\n                                            <Input\n                                                type=\"name\"\n                                                name=\"name\"\n                                                id=\"name\"\n                                                placeholder=\"Nhập thuốc\"\n                                                value={name}\n                                                onChange={this.onChange}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </Col>\n                                <Col xs=\"4\">\n                                    <Row>\n                                        <Col xs=\"4\">\n                                            {\" \"}\n                                            <Label>Nhà sản xuất</Label>\n                                        </Col>\n                                        <Col xs=\"8\">\n                                            <Input\n                                                type=\"select\"\n                                                name=\"producer_id\"\n                                                id=\"producer_id\"\n                                                value={producer_id}\n                                                onChange={this.onChange}\n                                                required\n                                            >\n                                                <option>Chọn nhà sản xuất</option>\n                                                {listP}\n                                            </Input>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                                <Col xs=\"4\" >\n                                    <Row>\n                                        <Col xs=\"4\">\n                                            Đơn vị thuốc\n                                        </Col>\n                                        <Col xs=\"8\" className=\"warehouse_parts\">\n                                            <Input\n                                                type=\"select\"\n                                                name=\"unitProduct\"\n                                                id=\"unitProduct\"\n                                                onChange={e => this.setState({ unitProduct: e.target.value})}\n                                                value={unitProduct}>\n                                                    <option>Chọn đơn vị</option>\n                                                    {PRODUCT_UNIT.map(u => {\n                                                        return  <option value={u.code}>{u.label}</option>\n                                                    })}\n                                            </Input>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                                <Col xs=\"4\">\n                                    <Row>\n                                        <Col xs=\"4\">Đơn vị tính (liều  dùng)</Col>\n                                        <Col xs=\"8\">\n                                            <Input\n                                                type=\"select\"\n                                                name=\"unit\"\n                                                id=\"unit\"\n                                                onChange={(ev) => this._setValue(ev, 'unit')}\n                                                value={unit.value}>\n                                                    <option>Chọn đơn vị</option>\n                                                    <option value={ATTR_UNIT.ML.code}>{ATTR_UNIT.ML.label}</option>\n                                                    <option value={ATTR_UNIT.MG.code}>{ATTR_UNIT.MG.label}</option>\n                                                    <option value={ATTR_UNIT.TABLET.code}>{ATTR_UNIT.TABLET.label}</option>\n                                            </Input>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                                <Col xs=\"4\">\n                                    <Row>\n                                        <Col xs=\"4\">\n                                            {\" \"}\n                                            <Label>Định lượng 1 đơn vị</Label>\n                                        </Col>\n                                        <Col xs=\"8\">\n                                            <Input\n                                                type=\"text\"\n                                                name=\"strength\"\n                                                id=\"strength\"\n                                                onChange={(ev) => this._setValue(ev, 'strength')}\n                                                value={strength.value}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </Col>\n                                <Col xs=\"4\">\n                                    <Row>\n                                        <Col xs=\"4\">\n                                            {\" \"}\n                                            <Label>Liều dùng mặc định</Label>\n                                        </Col>\n                                        <Col xs=\"8\">\n                                            <Input\n                                                type=\"text\"\n                                                name=\"default_quantity\"\n                                                id=\"default_quantity\"\n                                                onChange={(ev) => this._setValue(ev, 'default_quantity')}\n                                                value={default_quantity.value}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </Col>\n                                <Col xs=\"4\">\n                                    <Row>\n                                        <Col xs=\"4\">\n                                            {\" \"}\n                                            <Label>Liều lượng/cân nặng (đơn vị)/(kg)</Label>\n                                        </Col>\n                                        <Col xs=\"8\">\n                                            <Input\n                                                type=\"text\"\n                                                name=\"max_dose_per_kg\"\n                                                id=\"max_dose_per_kg\"\n                                                onChange={(ev) => this._setValue(ev, 'max_dose_per_kg')}\n                                                value={max_dose_per_kg.value}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </Col>                               \n                                <Col xs=\"4\">\n                                    <Row>\n                                        <Col xs=\"4\">\n                                            {\" \"}\n                                            <Label>Lần dùng trong ngày</Label>\n                                        </Col>\n                                        <Col xs=\"8\">\n                                            <Input\n                                                type=\"text\"\n                                                name=\"default_daily_usage\"\n                                                id=\"default_daily_usage\"\n                                                onChange={(ev) => this._setValue(ev, 'default_daily_usage')}\n                                                value={default_daily_usage.value}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </Col> \n                                <Col xs=\"4\">\n                                    <Row>\n                                        <Col xs=\"4\">Số đợn vị/ 1 bao bì</Col>\n                                        <Col xs=\"8\">\n                                            <Input\n                                                name=\"package_size\"\n                                                id=\"package_size\"\n                                                onChange={(ev) => this._setValue(ev, 'package_size')}\n                                                value={package_size.value}\n                                            ></Input>\n                                        </Col>\n                                    </Row>\n                                </Col>\n          \n                                {AuthService.isRole(ROLE.ADMIN.value) || AuthService.isRole(ROLE.INVENTORY.value) ?\n                                \n                                <Col xs=\"4\">           \n                                    <Row>\n                                        <Col xs=\"4\">\n                                            Ghi chú\n                                        </Col>\n                                        <Col xs=\"8\" className=\"warehouse_parts\">\n                                            <Input\n                                                name=\"description\"\n                                                id=\"description\"\n                                                onChange={(ev) => this._setValue(ev, 'description')}\n                                                value={description.value}\n                                            />\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col xs=\"4\">Giá nhập vào </Col>\n                                        <Col xs=\"8\">\n                                            <Input\n                                                type=\"text\"\n                                                name=\"origin_price\"\n                                                id=\"origin_price\"\n                                                onChange={this.onChange}\n                                                value={origin_price}\n                                            />\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col xs=\"4\">\n                                                {\" \"}\n                                                <Label>Giá bán ra</Label>\n                                        </Col>\n                                        <Col xs=\"8\">\n                                            <Input\n                                                type=\"text\"\n                                                name=\"price\"\n                                                id=\"price\"\n                                                onChange={this.onChange}\n                                                value={price}\n                                            ></Input>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                                :\n                                <Col xs=\"4\" >\n                                     <Row>\n                                        <Col xs=\"4\">\n                                            Ghi chú\n                                        </Col>\n                                        <Col xs=\"8\" className=\"warehouse_parts\">\n                                            <Input\n                                                name=\"description\"\n                                                id=\"description\"\n                                                onChange={(ev) => this._setValue(ev, 'description')}\n                                                value={description.value}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </Col> }\n                                <Col xs=\"8\">\n                                    <Row>\n                                        <Col xs=\"2\">\n                                            Đường dùng thuốc\n                                        </Col>\n                                        <Col xs=\"10\" className=\"warehouse_parts\">\n                                            <Input type=\"select\" \n                                                name=\"route\"\n                                                id=\"route\"\n                                                value={route?route.value : \"\"}\n                                                onChange={(ev) => this._setValue(ev, 'route')}\n                                                >\n                                                    <option>Chọn đường dùng</option>\n                                                   {ROUTE.map(r => {\n                                                       return <option value={r.value}>{r.name}</option>\n                                                   })}\n                                                </Input>\n                                        </Col>\n                                    </Row>\n              \n                                    <Row>\n                                        <Col xs=\"2\">\n                                            Thành Phần Thuốc\n                                        </Col>\n                                        <Col xs=\"10\" className=\"warehouse_parts\">\n                                            {\" \"}\n                                            <Multiselect   \n                                                options={listPart}\n                                                selectedValues={arrSelected}\n                                                value={listPart}\n                                                displayValue=\"name\"\n                                                onSelect={(list, item) => this.onSelectPart(list, item)}\n                                                onRemove={(list, item) => this.onRemovePart(list, item)}\n                                                showCheckbox={true}\n                                                name=\"part\"\n                                                id=\"part\"\n                                                placeholder=\"Chọn thành phần thuốc\"\n                                                closeIcon=\"close\"\n                                            />\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                            {parts.length > 0 ? (\n                            <Row className=\"title-card\">\n                                <Col xs={{ size: '3', offset: '4'}}>Thành phần thuốc</Col>\n                                <Col>Mô tả</Col>\n                                {/* <Col>Đơn vị</Col> */}\n                            </Row> ) : ''}\n                            {itemPart}\n                        </FormGroup>\n                        <Row>\n                            <Col xs={{ size: 6, offset: 6 }}>\n                                <div className=\"btnControl\">\n                                    <Col>\n                                        <Button className=\"controlRemove\" onClick={this.onBack} >\n                                            Hủy Bỏ\n                                            </Button>\n                                        <Button outline color=\"primary\" onClick={this.onSubmit}>\n                                            {id == 0 ? 'Thêm mới' : 'Cập nhật'}\n                                        </Button>\n                                    </Col>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col xs={2} className=\"right\"></Col>\n                </Row>\n            </div>\n        );\n    }\n}\nexport default FormProduct;\n","import React, { useState, Fragment } from 'react';\nimport { Button, FormGroup, Input, Col, Row } from 'reactstrap';\nimport ProductService from '../Shared/ProductService';\n\nconst FormProducer = () => {\n  const [producer, setProducer] = useState({\n    name: \"\",\n    description: \"\"\n\n  })\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setProducer((producer) => ({ ...producer, [name]: value }));\n  }\n  const postProducer = () => {\n    const payload = producer\n    return ProductService.postProducer(payload)\n  }\n\n\n  return (\n    <Fragment>\n      <Row>\n        <Col xs={2}></Col>\n        <Col xs={8}>\n          <FormGroup  name=\"producer\">\n            <h1 className=\"p-t-50\">Nhập thông tin nhà sản xuất</h1>\n            <Row>\n              <Col xs=\"4\">Tên nhà sản xuất</Col>\n              <Col xs=\"8\"> <Input type=\"input\" name=\"name\" id=\"name\" placeholder=\"nhập tên nhà sx\" onChange={(e) => handleChange(e)} /></Col>\n            </Row>\n            <Row>\n              <Col xs=\"4\">Thông tin nhà sản xuất</Col>\n              <Col xs=\"8\"> <Input type=\"input\" name=\"description\" id=\"description\" placeholder=\"Nhập thông tin nhà sản xuất\" onChange={(e) => handleChange(e)} /></Col>\n            </Row>\n          </FormGroup>\n          <Row>\n            <Button color=\"success\" className=\"btn_1\" onClick={() => postProducer()}>Thêm nhà sản xuất </Button>\n          </Row>\n        </Col>\n        <Col xs={2}></Col>\n      </Row>\n    </Fragment>\n  );\n}\n\nexport default FormProducer;","import React, { useState, Fragment, useEffect } from 'react';\nimport { Button, FormGroup, Input, Col, Row } from 'reactstrap';\nimport ProductService from '../Shared/ProductService';\n\nconst FormProducer = () => {\n  const [part, setPart] = useState({\n    name: \"\",\n    description: \"\"\n  })\n  let str = '/app/product/part/';\n  let url = window.location.pathname;\n  let id = url.slice(str.length)\n\n  useEffect(() => {\n    if(id != 0) {\n      ProductService.getPart(id)\n      .then(res => {\n        part.id = res.data?.id;\n        part.name = res.data?.name;\n        part.description = res.data?.description\n        setPart({...part})\n      })\n    }\n  },[id, ])\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setPart((part) => ({ ...part, [name]: value }));\n  }\n\n  const postPart =  () => {\n    if(id == 0) {\n      ProductService.createPart(part)\n      .then(res => {\n        window.location.assign('/app/product/part')\n      })\n    }else {\n      ProductService.updatePart(part)\n      .then(res => {\n        window.location.assign('/app/product/part')\n      })\n    }\n\n  }\n\n\n  return (\n    <Fragment>\n      <Row>\n        <Col xs={2}></Col>\n        <Col xs={8}>\n          <FormGroup  name=\"producer\">\n            <h1 className=\"p-t-50\">Nhập thông tin thành phần</h1>\n            <Row>\n              <Col xs=\"4\">Tên thành phần</Col>\n              <Col xs=\"8\"> <Input type=\"input\" name=\"name\" id=\"name\" value={part.name} placeholder=\"nhập tên thành phần\" onChange={(e) => handleChange(e)} /></Col>\n            </Row>\n            <Row>\n              <Col xs=\"4\">Thông tin mô tả</Col>\n              <Col xs=\"8\"> <Input type=\"input\" name=\"description\" id=\"description\" value={part.description} placeholder=\"Nhập thông tin mô tả\" onChange={(e) => handleChange(e)} /></Col>\n            </Row>\n          </FormGroup>\n          <Row>\n            <Button color=\"success\" className=\"btn_1\" onClick={() => postPart()}>Thêm thành phần</Button>\n          </Row>\n        </Col>\n        <Col xs={2}></Col>\n      </Row>\n    </Fragment>\n  );\n}\n\nexport default FormProducer;","import React, { Component } from 'react';\nimport { Table, Button, TabContent, TabPane, Nav, NavItem, NavLink, Row, Col, Label, Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ProductService from '../Shared/ProductService';\nimport ModalConfirm from '../../../../Shared/Components/ModalConfirm/ModalConfirm';\nimport classnames from 'classnames';\nclass ListProduct extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: '',\n      listPart: [],\n      notiConfirm: '',\n      activeTab: '1',\n      textSearch: ''\n    }\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    ProductService.listPart()\n    .then(res => {\n        this.setState({\n            listPart: res.data\n          });\n    }).catch(err => {\n      this.setState({\n        notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n      })\n      console.log(err);\n    });\n  }\n\n  onDelete = (id) => {\n    this.setState({\n      notiConfirm: 'Bạn có chắc chắn muốn xóa !!',\n      id: id\n    })\n  };\n\n  answer = (isYes) => {\n    if (isYes) {\n      let data = {\n        id: this.state.id\n      }\n      ProductService.deletePart(data)\n        .then(() => {\n          this.setState({ notiConfirm: '' })\n          this.getData();\n          window.location.href = './part'\n        }).catch((err) => {\n          this.setState({\n            notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n          })\n          console.log(err);\n        });\n    } else {\n      this.setState({ notiConfirm: '' })\n    }\n  }\n  toggle = (activeTab) => {\n    this.setState({ activeTab })\n  }\n  render() {\n    let { listPart, activeTab, textSearch } = this.state;\n    const item = listPart.filter(i => i.name?.toUpperCase()?.includes(`${textSearch.toUpperCase()}`))\n    .map((item, index) => {\n      return <tr>\n                <td>{index + 1}</td>\n                <td>{item.name}</td>\n                <td>{item.descriptions}</td>\n                <td>\n                    <div className=\"btnControl middle\">\n                        <Link to={`./part/${item.id}`} className=\"btn btn-secondary btn-sm\" >Sửa</Link>\n                        {/* {\"   \"}<Button className=\"btn-sm\" color=\"danger\" onClick={() => this.onDelete(item.id)}>Xóa</Button> */}\n                    </div>\n                </td>\n            </tr>\n    });\n    return (\n        <div className=\"container customCard mt-3 \">        \n          <Nav tabs>\n            <NavItem>\n              <NavLink\n                className={'pointer ' + classnames({ active: activeTab === '1' })}\n                onClick={() => { this.toggle('1'); }}\n              >\n                <h1 className=\"title-card-lg\">Danh sách thành phần</h1>\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <Row className=\"pt-10\">\n            <Label xs={1}>Tìm kiếm</Label>\n            <Col xs={3}>\n              <Input placeholder=\"Nhập tên thành phần\" type=\"search\" onChange={e => this.setState({ textSearch: e.target.value})} />\n            </Col>\n            <Col xs={{ size: '2', offset: '6'}} className=\"end\">\n              <Link to={`/app/product/part/0`}>\n                <Button className=\"mb-3 mt-3\">\n                  <span >Thêm Mới</span>\n                </Button>\n              </Link>\n            </Col>\n          </Row>\n          <TabContent activeTab={activeTab}>\n            <TabPane tabId=\"1\">\n              <Row>\n                <Table  hover bordered striped>\n                  <thead>\n                    <tr className=\"thead\">\n                      <th>STT</th>\n                      <th >Tên thành phần</th>\n                      <th className=\"\">Mô tả</th>\n                      <th>Tùy chỉnh</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bodyTable\">{item}</tbody>\n                </Table>\n              </Row>\n            </TabPane>\n          </TabContent>\n          <ModalConfirm message={this.state.notiConfirm} answer={this.answer}></ModalConfirm>\n        </div>\n    );\n  }\n}\n\nexport default ListProduct;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ListProduct from './Components/ListProduct/ListProduct';\nimport FormProduct from './Components/FormProduct/FormProduct';\nimport FormProducer from './Components/Producer/FormProducer';\nimport FormPart from './Components/FormPart/FormPart';\nimport ListPart from './Components/FormPart/ListPart';\nclass Product extends Component {\n\n    render() {\n        const { path } = this.props.match;\n        return (\n            <div className=\"Product\">\n                <Switch>\n                    <Route path={`${path}/part/:id`} exact component={FormPart} />\n                    <Route path={`${path}/part`} exact component={ListPart} />\n                    <Route path={`${path}/producer/:id`} exact component={FormProducer} />\n                    <Route path={`${path}/:id`} exact component={FormProduct} />\n                    <Route path={`${path}`} exact component={ListProduct} />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default Product","import React, { useEffect } from 'react';\nimport {  Table } from 'reactstrap';\nimport NumberFormat from 'react-number-format';\n\nconst OrderTable = (props) => {\n  let {items} = props;\n  useEffect(() => {\n  }, [items]) \n\n  return (\n    <Table hover bordered>\n      <thead>\n        <tr>\n          <th>STT</th>\n          <th>Tên dịch vụ</th>\n          <th>Đơn giá</th>\n          <th>Số lượng</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items?.map((item, index) => (\n         \n          <tr key={item.id}>\n            <th scope=\"row\">{index + 1}</th>\n            <td>{item.ref_value.name}</td>\n            <td><NumberFormat thousandSeparator={true} suffix={' VND'} displayType={'text'} value={Math.ceil(item.price)} /></td>\n            <td>\n              {item.quantity}\n            </td>\n            \n            \n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default OrderTable;","import React, { useEffect, useState } from 'react';\nimport { Fragment } from 'react';\nimport { Table, Col } from 'reactstrap';\nimport NumberFormat from 'react-number-format';\nimport printJS from 'print-js';\nimport { moneyToWord, numberWithCommas, ReceptionService, convertToStrDate } from '../../Shared';\nimport { splitRegion } from '../../../../Constances/const';\nimport { Button } from 'reactstrap';\nimport SharedService from '../../../../Shared/Services/SharedService'\nimport { useParams } from 'react-router-dom'\nimport logo from '../../../../Asset/Img/logo.jpg'\nimport HeaderPrint from '../../../../Shared/Components/HeaderPrint/HeaderPrint';\nimport { getAge } from '../../../../Modules/Reception/Shared/Util';\nimport { ONE_DAY } from '../../../../Constances/const';\nconst ReceiptPrintingReview = (props) => {\n    const [contact, setContact] = useState({})\n    const [receiptData, setReceiptData] = useState({})\n    const [addressForm, setAddressForm] = useState([])\n    const [sumOrigin, setSumOrigin] = useState([])\n    const [sum, setSum] = useState(0)\n    const [age,setAge] = useState()\n    const customer = receiptData.ref_value || {}\n    // console.log(receiptData, sum, 'data in neeeeeeeeeeeeeee');\n    const customerCode = customer.code\n    const locationName = receiptData.steps?.[0].location.name\n    const total = (receiptData.steps?.[0].order.total)\n    const roundTotal = Math.round(total / 1000) * 1000\n    const receiptId = receiptData.steps?.[0].code\n    const current = new Date(receiptData.steps?.[0].ctime)\n    let doctorInfo = JSON.parse(window.sessionStorage.getItem('user'));\n    const { id } = useParams()\n    // const sumOrigin =  receiptData.step?.[0].order.items.map(e=>e.ref_value)\n    //fetch data examination form\n    useEffect(()=>{\n        let today = Date.now();\n        let cBirthday = new Date(customer.birthday).getTime()\n        let age = Math.floor((today-cBirthday)/(365*ONE_DAY))\n        if(age>1){\n            setAge(age + ' tuổi')\n        }else if(age==0){\n            setAge(Math.floor((today-cBirthday)/(7*ONE_DAY))+' tuần')\n        }\n    },[customer])\n    useEffect(() => {\n        ReceptionService.getJobById(id).then(res => {\n            let receiptData = res.data\n            setReceiptData(receiptData)\n            let s = 0\n            res.data.steps[0].order.items.forEach(e => {\n                s += e.ref_value.origin_price\n            })\n            setSum(s)\n            //fetch contact data\n            ReceptionService.getCmbyCode(receiptData.ref_value.code).then(res => {\n                let customer = res.data\n                let contact = {}\n                if (customer.contacts.length) contact = customer.contacts[0]\n                setContact(contact)\n                let addressForm = `${contact.address.street} - ${splitRegion(contact.address.ward)} - ${splitRegion(contact.address.district)} - ${splitRegion(contact.address.province)}`;\n                if (contact.address.province.length > 0) { setAddressForm(addressForm) }\n            }).catch(err => {\n                console.log(err)\n            })\n        })\n    }, [id])\n    useEffect(() => {\n        if (receiptId) {\n            SharedService.createEtccode(receiptId, \"receipId\")\n            SharedService.createEtccode(receiptId, \"receipIdSub\")\n        }\n        if (customerCode) {\n            SharedService.createEtccode(customerCode.toString(), \"customerCode\")\n            SharedService.createEtccode(customerCode.toString(), \"customerCodeSub\")\n        }\n\n    }, [receiptId, customerCode])\n\n\n    return (\n        <Fragment>\n            <div className=\"d-flex justify-content-center mt-3\">\n                <div className=\"p-2 border border-secondary examReceiptContainer\">\n                    <div className=\"position-relative\" id=\"receiptPrint\">\n                        <div className=\"receiptFromPrint\">\n                            <div className=\"absolute\">\n                                <div className=\"text-right\">\n                                    <canvas id=\"receipId\" style={{ height: \"13mm\" }}></canvas>\n                                </div>\n                            </div>\n                            <HeaderPrint></HeaderPrint>\n\n                            <div className=\"text-left-print\">\n                                <div style={{ display: 'flex', justifyContent: 'center', minWidth: '300px', fontWeight: '700' }}>\n                                    BIÊN LAI THU TIỀN\n                                </div>\n                                Liên 1 : Lưu tại quầy\n                                <i>Ngày {current.getDate()} Tháng {current.getMonth() + 1} Năm {current.getFullYear()} {current.getHours()} giờ {current.getMinutes()} phút </i>\n                                <canvas id=\"customerCode\" style={{ height: \"13mm\", width: '5cm', position: 'relative', bottom: '2cm', right: '240px' }}></canvas>\n                            </div>\n                            <div style={{ display: 'flex' }}>\n                                <Col sm={5}>\n                                    Tên: <b><span className=\"text-uppercase font-weight-bold\">{customer.full_name}</span></b><br />\n                                </Col>\n                                <Col sm={3}>\n                                    <span >NS: {convertToStrDate(customer.birthday)} ({age})</span>\n                                    \n                                </Col>\n                                <Col sm={2} style={{paddingLeft:'3px'}}>\n                                    <span >GT: {customer.gender === \"male\" ? 'Nam' : 'Nữ'} </span>\n                                </Col>\n                                <Col sm={2}>\n                                    DT:  {contact.phone}\n                                </Col>\n                            </div>\n                            <div style={{ display: 'flex' }}>\n                                <Col sm={12}>\n                                    ĐC: {addressForm}\n                                </Col>\n\n                            </div>\n                            <div>\n                                Dịch vụ khám :{receiptData.steps?.[0].order.items.map((item) => {\n                                    return item.ref_value.name + ', '\n                                })\n                                }\n                                <br></br>\n                                Giá gốc: <b><span className=\"font-weight-bold\">{numberWithCommas(sum || 0)} đồng</span></b> <br></br>\n                                Số tiền được khuyến mãi <span className=\"font-weight-bold\"><b>{numberWithCommas(sum - roundTotal || 0)}</b></span><br></br>\n                                Tổng số tiền thanh toán : <b><span className=\"font-weight-bold\">{numberWithCommas(roundTotal || 0)} đồng</span></b> <br></br>\n                                Viết bằng chữ: <span className=\"font-weight-bold\"><b>{moneyToWord(roundTotal || 0)}</b></span>\n                            </div>\n                            <div className=\"d-flex justify-content-between px-4 \">\n                                <div className=\"text-center mr-auto ml-5 nt\">\n                                    <b>Người nộp tiền</b><br></br>\n                                    <i>(ký, họ tên)</i>\n                                </div>\n                                <div className=\"text-center mr-5 tt\">\n                                    <strong>Người thu tiền</strong><br></br>\n                                    <i className=\"mb-2\">(ký, ghi rõ họ tên)</i> <br></br><br></br><br></br>\n                                    <b className=\"mt-5\">{doctorInfo.full_name}</b>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* -----------------Ngăn from in------------------------------------------------------------ */}\n                        <div className=\"receiptFromPrint\">\n                            <div className=\"absolute\">\n                                <div className=\"text-right\">\n                                    <canvas id=\"receipIdSub\" style={{ height: \"13mm\" }}></canvas>\n                                </div>\n\n                            </div>\n                            <HeaderPrint></HeaderPrint>\n\n                            <div className='text-left-print'>\n                                <div style={{ display: 'flex', justifyContent: 'center', minWidth: '300px', fontWeight: '700' }}>\n                                    BIÊN LAI THU TIỀN\n                                </div>\n                                Liên 2 : Giao cho bệnh nhân\n                                <i>Ngày {current.getDate()} Tháng {current.getMonth() + 1} Năm {current.getFullYear()} {current.getHours()} giờ {current.getMinutes()} phút </i>\n                                <canvas id=\"customerCodeSub\" style={{ height: \"13mm\", width: '5cm', position: 'relative', bottom: '2cm', right: '240px' }}></canvas>\n                            </div>\n                            <div style={{ display: 'flex' }}>\n                                <Col sm={5}>\n                                    Tên: <b><span className=\"text-uppercase font-weight-bold\">{customer.full_name}</span></b><br />\n                                </Col>\n                                <Col sm={3}>\n                                    <span >NS: {convertToStrDate(customer.birthday)} ({age})</span>\n                                    \n                                </Col>\n                                <Col sm={2} style={{paddingLeft:'3px'}}>\n                                    <span >GT: {customer.gender === \"male\" ? 'Nam' : 'Nữ'} </span>\n                                </Col>\n                                <Col sm={2}>\n                                    DT:  {contact.phone}\n                                </Col>\n                            </div>\n                            <div style={{ display: 'flex' }}>\n                                <Col sm={12}>\n                                    ĐC: {addressForm}\n                                </Col>\n\n                            </div>\n                            <div>\n                                Dịch vụ khám :{receiptData.steps?.[0].order.items.map((item) => {\n                                    return item.ref_value.name + ', '\n                                })\n                                }\n                                <br></br>\n                                Giá gốc: <b><span className=\"font-weight-bold\">{numberWithCommas(sum || 0)} đồng</span></b> <br></br>\n                                Số tiền được khuyến mãi <span className=\"font-weight-bold\"><b>{numberWithCommas(sum - roundTotal || 0)} đồng</b></span><br></br>\n                                Tổng số tiền thanh toán : <b><span className=\"font-weight-bold\">{numberWithCommas(roundTotal || 0)} đồng</span></b> <br></br>\n                                Viết bằng chữ: <span className=\"font-weight-bold\"><b>{moneyToWord(roundTotal || 0)}</b></span>\n                            </div>\n                            <div className=\"d-flex justify-content-between px-4 \">\n                                <div className=\"text-center mr-auto ml-5 nt\">\n                                    <b>Người nộp tiền</b><br></br>\n                                    <i>(ký, họ tên)</i>\n                                </div>\n                                <div className=\"text-center mr-5 tt\">\n                                    <strong>Người thu tiền</strong><br></br>\n                                    <i className=\"mb-2\">(ký, ghi rõ họ tên)</i> <br></br><br></br><br></br>\n                                    <b className=\"mt-5\">{doctorInfo.full_name}</b>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center \">\n                <div className=\"sizeDiv d-flex justify-content-end mt-3 tt\">\n                    <Button className=\"make-bill\" color=\"primary\" onClick={() => {\n                        printJS({\n                            printable: 'receiptPrint',\n                            type: 'html',\n                            targetStyles: ['*'],\n                            style: `@page {\n                                size: Letter landscape;\n                              }`,\n                            header: null,\n                            footer: null,\n                        });\n                        window.history.back()\n                    }}>Tạo phiếu in</Button>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default ReceiptPrintingReview;","export default __webpack_public_path__ + \"static/media/logo.3ff2a36f.jpg\";","import React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Col, Row, InputGroup, InputGroupAddon, Spinner } from 'reactstrap';\nimport { ModalNoti, moneyToWord } from '../../../../Accounting/Shared';\nimport { FormParent, } from '../../../Shared';\nimport OrderTable from './OrderTable'\nimport ReceptionService from \"../../../Shared/ReceptionService\";\nimport CustomerForm from \"../../../../../Shared/Components/CustomerForm/CustomerForm\";\nimport { Util } from \"../../../../../Helper/Util\";\nimport NumberFormat from 'react-number-format';\nimport ReceiptPrintingPreview from \"../../../Components/ReceiptPrintingPreview/ReceiptPrintingPreview\";\nimport { STATUS } from \"../../../../../Constances/const\"\n\n\nclass AccountingForm extends FormParent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookList: [],\n      paymentList: [{ name: \"Tiền mặt\", method: \"cash\" }, { name: \"Thẻ ATM\", method: \"other\" }],\n      currentPaymentMethods: 'cash',\n      note: '  ',\n      isPayment: true,\n      notiMessage: '',\n      form: this._getInitFormData({\n        sumOriginPrice:'',\n        customerCode: '',\n        orderCode: '',\n        customerName: '',\n        customerBirthday: '',\n        totalPrice: \"\",\n        nameService: '',\n        priceService: '',\n        customerGender: '',\n        cTime: '',\n        orderStatus: '',\n        bookId: ''\n      }),\n      isOrderFound: false,\n    }\n  }\n\n  setBookList = (bookList) => {\n    this.setState({ bookList: bookList.filter((el) => el.status === \"active\") })\n    this.setState({ bookId: bookList[0].id })\n  }\n  setPaymentList = (paymentList) => {\n    this.setState({ paymentList: paymentList })\n  }\n\n\n  getAllBookList = () => {\n    const status = \"active\";\n    ReceptionService.getBookList(status).then(res => {\n      this.setBookList(res.data)\n    })\n  }\n\n  setIsOrderFound = (isOrderFound) => {\n    this.setState({ isOrderFound })\n  }\n  setIsPayment = (isPayment) => {\n    this.setState({ isPayment })\n  }\n\n  setNotiMessage = (notiMessage) => {\n    this.setState({ notiMessage })\n  }\n  toggleUser = () => {\n    this.setState({\n      dropdownBook: !this.state.dropdownBook,\n    })\n  }\n  resetForm = () => {\n    this._fillForm({\n      sumOriginPrice:'',\n      customerCode: '',\n      orderCode: '',\n      customerName: '',\n      customerBirthday: '',\n      totalPrice: '',\n      nameService: '',\n      priceService: '',\n      customerGender: '',\n      cTime: '',\n      orderStatus: '',\n      bookId: '',\n    })\n    this.setIsOrderFound(false)\n  }\n\n  findOrderByCode = (code) => {\n    return ReceptionService.getOrder(code)\n  }\n  handleSearch = (orderCode) => {\n    if (this.props.retail) {\n      ////// THANH TOÁN ĐƠN THUỐC BÁN LẺ\n      ReceptionService.getRetailOrder(orderCode)\n        .then(res => {\n          let data = res.data;\n          this._fillForm({\n            totalPrice: data.total,\n            orderId: data.id,\n            // nameService: orderInfo.view_order.items[0].ref_value.name,\n            // priceService: orderInfo.view_order.items[0].ref_value.price,\n            cTime: (new Date(data.ctime)).toLocaleString(),\n            orderStatus: data.status,\n            customerCode: 0,\n            orderCode: this.props.billID,\n            customerName: '',\n            customerBirthday: '',\n            customerGender: '',\n          })\n          this.setState({ items: data.items })\n        }).catch(err => console.log(err))\n    } else {\n      ////// BÌNH THƯỜNG\n      this.findOrderByCode(orderCode).then((res) => {\n        let orderInfo = res.data\n        let sumOriginPrice = 0\n         res.data.view_order.items.map(e => {\n          return sumOriginPrice += e.ref_value.origin_price\n        })\n        this.setState({ sumOriginPrice: sumOriginPrice })\n        let address = orderInfo.view_order.customer.contacts[0].address\n        let street = address.street ? `${address.street}` : ''\n        let ward = address.ward ? `  -${address.ward}` : ''\n        let district = address.district ? `-${address.district}` : ''\n        let province = address.province ? `-${address.province}` : ''\n        let customerAddress = `${street}${ward}${district}${province}`\n        if (address.province.length > 0) { this.setState({ customerAddress: customerAddress }) }\n        if (orderInfo.view_order.items.length == 1) {\n          this._fillForm({\n            customerCode: orderInfo.view_order.customer.code,\n            orderCode: orderInfo.view_order.code,\n            customerName: orderInfo.view_order.customer.full_name,\n            customerBirthday: orderInfo.view_order.customer.birthday,\n            totalPrice: orderInfo.view_order.total,\n            orderId: orderInfo.view_order.id,\n            customerGender: orderInfo.view_order.customer.gender,\n            nameService: orderInfo.view_order.items[0].ref_value.name,\n            priceService: orderInfo.view_order.items[0].ref_value.price,\n            cTime: (new Date(orderInfo.view_order.ctime)).toLocaleString('en-GB'),\n            orderStatus: orderInfo.view_order.status,\n          })\n        } else {\n          this._fillForm({\n            customerCode: orderInfo.view_order.customer.code,\n            orderCode: orderInfo.view_order.code,\n            customerName: orderInfo.view_order.customer.full_name,\n            customerBirthday: orderInfo.view_order.customer.birthday,\n            totalPrice: orderInfo.view_order.total,\n            orderId: orderInfo.view_order.id,\n            customerGender: orderInfo.view_order.customer.gender,\n            nameService: orderInfo.view_order.items[0].ref_value.name,\n            priceService: orderInfo.view_order.items[0].ref_value.price,\n            cTime: (new Date(orderInfo.view_order.ctime)).toLocaleString('en-GB'),\n            orderStatus: orderInfo.view_order.status,\n          })\n        }\n\n        this.setState({ items: orderInfo.view_order.items })\n        this.setIsOrderFound(true)\n\n      }).catch(err => {\n        console.log(err)\n        this.setNotiMessage('Không tìm thấy hóa đơn!')\n      })\n    }\n  }\n  handleChangeNote = (event) => {\n    this.setState({ note: event.target.value });\n  }\n  handleChange = (event) => {\n\n    const books = this.state.bookList.filter((item) => {\n      return item.id == event.target.value\n    })\n    if (books.length == 0) return\n    this.setState({ currentBook: books[0] })\n  }\n  handleChangePaymentMethods = (event) => {\n    const index = parseInt(event.target.value)\n    this.setState({ currentPaymentMethods: this.state.paymentList[index].method })\n  }\n\n\n  handleSubmit = () => {\n    if (this.props.retail) {\n      ////// THANH TOÁN ĐƠN THUỐC BÁN LẺ\n      const { orderId, totalPrice, } = this.state.form\n      const { bookId, currentPaymentMethods, note } = this.state\n      let data = {\n        ref: \"retail\",\n        ref_id: orderId.value,\n        book_id: bookId,\n        type: currentPaymentMethods,\n        note: note,\n        amount: totalPrice.value,\n      }\n      ReceptionService.postTransaction(data).then(res => {\n        this.setNotiMessage(\"Thanh toán thành công!\")\n\n        //FOR PHARMACY\n        if (this.props.mode === 'pharmacy') {\n          this.props.affterPayment();\n        }\n        //----------------------\n        this.resetForm()\n\n      }).catch(err => {\n        console.log(err)\n      })\n    } else {\n      ////// THANH TOÁN BÌNH THƯỜNG\n      if (!this.state.isOrderFound) {\n        this.setNotiMessage(\"Bạn chưa chọn hóa đơn để thanh toán!\")\n        return\n      }\n      const { orderId, totalPrice, } = this.state.form\n      const { bookId, currentPaymentMethods, note } = this.state\n      let transaction = {\n        ref: \"order\",\n        ref_id: orderId.value,\n        book_id: bookId,\n        amount: totalPrice.value,\n        type: currentPaymentMethods,\n        note: note,\n      }\n      if (this.state.form.isPayment) {\n        this.setNotiMessage(\"\")\n      }\n      ReceptionService.postTransaction(transaction).then(res => {\n        this.setNotiMessage(\"Thanh toán thành công!\")\n\n        //FOR PHARMACY\n        if (this.props.mode === 'pharmacy') {\n          this.props.affterPayment();\n        }\n        //----------------------\n        this.resetForm()\n\n      }).catch(err => {\n        console.log(err)\n      })\n    }\n  }\n  doneAlert = () => {\n    this.setNotiMessage(\"\");\n\n    // PHARMACY\n    if (this.props.mode === \"pharmacy\") {\n      this.props.handleClose();\n    }\n  }\n  componentDidMount() {\n    this.getAllBookList();\n    //if(this.props.billID && this.state.form.customerCode.value == '') this.handleSearch(this.props.billID);\n    this.handleSearch(this.props.billID);\n  }\n  render() {\n    // console.log(this.state.form);\n    const { orderCode, customerName, customerCode, customerBirthday, totalPrice, customerGender, cTime, orderStatus, note } = this.state.form\n    const { notiMessage, customerAddress , sumOriginPrice} = this.state\n    const { billID, mode, comboName, retail } = this.props;\n    return (\n      <Col xs={{ size: 10, 'offset': 1 }}>\n        <ModalNoti message={notiMessage} done={this.doneAlert} />\n        {mode === \"reception\" && (\n          <Col sx={12}>\n            <Row className=\"customCard mt-3 pb-0 naV\">\n              <Col sm={6} className=\"row pl-0\">\n                <Label sm={2} className=\"title-card p-0\" href=\"/\"><span className=\"material-icons\">library_books</span> Sổ thu </Label>\n                <Col sm={5}>\n                  <Input type=\"select\" name=\"select\" onChange={this.handleChange}>\n                    {this.state.bookList.map((item) => {\n                      return <option key={item.id} value={item.id} >{item.name}</option>\n                    })}\n                  </Input>\n                </Col>\n              </Col>\n              <Col sm={6} className=\"row\">\n                <Label sm={2} className=\"title-card order-code\"><span className=\"material-icons\">playlist_add_check</span>Mã hóa đơn</Label>\n                <Col sm={5}>\n                  <InputGroup>\n                    <Input\n                      autoFocus\n                      onKeyDown={(e) => Util.onKeyDown(e)}\n                      data-index=\"14\"\n                      name=\"orderCode\"\n                      className=\"inputAcc\"\n                      value={billID}\n                      onChange={(ev) => { this._setValue(ev, 'orderCode') }}\n                      type=\"text\"\n                      id=\"orderCode\"\n                      placeholder=\"Nhập mã hóa đơn\"\n                      required\n                    />\n                    <InputGroupAddon addonType=\"append\">\n                      <Button color=\"primary\" onClick={() => { this.handleSearch(orderCode.value) }}><span className=\"material-icons\">search</span></Button>\n                    </InputGroupAddon>\n                  </InputGroup>\n                </Col>\n              </Col>\n            </Row>\n\n            <Form className=\"accounting-form\">\n\n              <FormGroup className=\"customCard min-h-40 customer-form\">\n                <div className=\"background\">\n                  <CustomerForm\n                    data={{\n                      code: customerCode.value, full_name: customerName.value, birthday: customerBirthday.value,\n                      gender: customerGender.value, address: customerAddress\n                    }}\n                  ></CustomerForm>\n                </div>\n              </FormGroup>\n\n              <FormGroup className=\"customCard info-form\">\n                <p className=\"title-card\"><span className=\"material-icons\">description</span> Thông tin đơn hàng</p>\n                <FormGroup row>\n                  <Col sm={12}>\n                    <OrderTable items={this.state.items}></OrderTable>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"totalPrice\" sm={4}>Tổng số tiền giá gốc(bằng số)</Label>\n                  <Col sm={6}>\n                    <NumberFormat className=\"inputAc\"\n                      value={sumOriginPrice}\n                      name=\"totalPrice\"\n                      thousandSeparator={true} suffix={' VND'} displayType={'text'} value={Math.ceil(sumOriginPrice)} />\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"totalPrice\" sm={4}>Tổng số tiền khuyến mãi(bằng số)</Label>\n                  <Col sm={6}>\n                    <NumberFormat className=\"inputAc\"\n                      value={totalPrice.value}\n                      onChange={(ev) => { this._setValue(ev, 'totalPrice') }}\n                      name=\"totalPrice\"\n                      thousandSeparator={true} suffix={' VND'} displayType={'text'} value={Math.ceil(totalPrice.value)} />\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"wordPrice\" sm={4}>Tổng số tiền(bằng chữ)</Label>\n                  <Col sm={6}>\n                    <Input className=\"inputAcc\"\n                      readOnly\n                      type=\"text\"\n                      name=\"wordPrice\"\n                      id=\"wordPrice\"\n                      value={(totalPrice.value ? moneyToWord(totalPrice.value) : \"\").toUpperCase()}\n                    />\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"getTime\" sm={4}>Thời gian tạo đơn</Label>\n                  <Col sm={6}>\n                    <Input type=\"text\" name=\"totalPrice\"\n                      className=\"inputAcc\"\n                      value={cTime.value}\n                      onChange={(ev) => { this._setValue(ev, 'getTime') }}\n                    />\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"getStatus\" sm={4}>Trạng thái thanh toán</Label>\n                  <Col sm={6}>\n                    <Input type=\"text\" name=\"status\"\n                      className=\"inputAcc\"\n                      value={orderStatus.value ? (orderStatus.value === \"paid\" ? 'đã thanh toán' : 'chưa thanh toán') : ''}\n                      onChange={(ev) => { this._setValue(ev, 'status') }}\n                    />\n                  </Col>\n                </FormGroup>\n              </FormGroup>\n\n\n              <FormGroup row className=\"customCard money-form\">\n                <Label sm={3} className=\"title-card\"><span className=\"material-icons\">monetization_on</span> Thanh toán hóa đơn</Label>\n                <Col sm={2}>\n                  <Input onKeyDown={(e) => Util.onKeyDown(e)}\n                    data-index=\"15\"\n                    type=\"select\" name=\"select\" onChange={this.handleChangePaymentMethods}\n                  >\n                    {this.state.paymentList.map((item, index) => {\n                      return <option key={item.method} value={index} >{item.name}</option>\n                    })}\n                  </Input>\n                </Col>\n                <Col sm={5}>\n                  <Input value={note}\n                    onKeyDown={(e) => Util.onKeyDown(e)}\n                    data-index=\"16\" onChange={this.handleChangeNote}\n                    type=\"text\"\n                    placeholder=\"điền thông tin giao dịch\" />\n                </Col>\n                <Col sm={2} className=\"end pl-0\">\n                  <Button\n                    onKeyDown={(e) => Util.onKeyDown(e)}\n                    data-index=\"17\"\n                    onClick={() => {\n                      this.handleSubmit();\n                      this.props.submitForm();\n                      this.props.handleClose();\n                    }}\n                    disabled={orderStatus.value == STATUS.PAID}\n                  >\n                    <Spinner\n                      color=\"primary\"\n                      className={this.state.submitLoading ? \"d-inline-block\" : \"d-none\"} />\n                    Thanh Toán\n                  </Button>{' '}\n                </Col>\n\n              </FormGroup>\n            </Form>\n          </Col>\n\n        )}\n        {mode === \"pharmacy\" && (\n          <Col sx={12}>\n            <Row className=\"customCard mt-3 pb-0\">\n              <Col sm=\"6\" className=\"row pl-0\">\n                <Label sm=\"2\" className=\"title-card p-0\" href=\"/\"><span className=\"material-icons\">library_books</span> Sổ thu </Label>\n                <Col sm=\"8\">\n                  <Input type=\"select\" name=\"select\" onChange={this.handleChange}>\n                    {this.state.bookList.map((item) => {\n                      return <option key={item.id} value={item.id} >{item.name}</option>\n                    })}\n                  </Input>\n                </Col>\n              </Col>\n              <Col sm=\"6\" className=\"row\">\n                <Label sm={4} className=\"title-card\"><span className=\"material-icons\">playlist_add_check</span>Mã hóa đơn</Label>\n                <Col sm={8}>\n                  <InputGroup>\n                    <Input\n                      autoFocus\n                      onKeyDown={(e) => Util.onKeyDown(e)}\n                      data-index=\"14\"\n                      name=\"orderCode\"\n                      className=\"inputAcc\"\n                      value={billID}\n                      onChange={(ev) => { this._setValue(ev, 'orderCode') }}\n                      type=\"text\"\n                      id=\"orderCode\"\n                      placeholder=\"Nhập mã hóa đơn\"\n                      required\n                    />\n                    <InputGroupAddon addonType=\"append\">\n                      <Button color=\"primary\" onClick={() => { this.handleSearch(orderCode.value) }}><span className=\"material-icons\">search</span></Button>\n                    </InputGroupAddon>\n                  </InputGroup>\n                </Col>\n              </Col>\n            </Row>\n\n            <Form>\n\n              <FormGroup className=\"customCard min-h-32\">\n                <div className=\"background\">\n                  <CustomerForm\n                    data={{\n                      code: customerCode.value, full_name: retail ? this.props.retailCustomerName : customerName.value, birthday: customerBirthday.value,\n                      gender: customerGender.value, address: customerAddress\n                    }}\n                  ></CustomerForm>\n                </div>\n              </FormGroup>\n              <FormGroup className=\"customCard\">\n                <p className=\"title-card\"><span className=\"material-icons\">description</span> Thông tin đơn hàng</p>\n                <FormGroup row>\n                  <Col sm={12}>\n                    <OrderTable items={this.state.items}></OrderTable>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"totalPrice\" sm={4}>Tổng số tiền(bằng số)</Label>\n                  <Col sm={6}>\n                    <NumberFormat className=\"inputAc\"\n                      value={totalPrice.value}\n                      onChange={(ev) => { this._setValue(ev, 'totalPrice') }}\n                      name=\"totalPrice\"\n                      thousandSeparator={true} suffix={' VND'} displayType={'text'} value={Math.ceil(totalPrice.value)} />\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"wordPrice\" sm={4}>Tổng số tiền(bằng chữ)</Label>\n                  <Col sm={6}>\n                    <Input className=\"inputAcc\"\n                      readOnly\n                      type=\"text\"\n                      name=\"wordPrice\"\n                      id=\"wordPrice\"\n                      value={(totalPrice.value ? moneyToWord(totalPrice.value) : \"\").toUpperCase()}\n                    />\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"getTime\" sm={4}>Thời gian tạo đơn</Label>\n                  <Col sm={6}>\n                    <Input type=\"text\" name=\"totalPrice\"\n                      className=\"inputAcc\"\n                      value={cTime.value}\n                      onChange={(ev) => { this._setValue(ev, 'getTime') }}\n                    />\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"getStatus\" sm={4}>Trạng thái thanh toán</Label>\n                  <Col sm={6}>\n                    <Input type=\"text\" name=\"status\"\n                      className=\"inputAcc\"\n                      value={orderStatus.value ? (orderStatus.value === \"paid\" ? 'đã thanh toán' : 'chưa thanh toán') : ''}\n                      onChange={(ev) => { this._setValue(ev, 'status') }}\n                    />\n                  </Col>\n                </FormGroup>\n              </FormGroup>\n              <FormGroup row className=\"customCard\">\n                <Label sm={3} className=\"title-card\"><span className=\"material-icons\">monetization_on</span> Thanh toán hóa đơn</Label>\n                <Col sm={2}>\n                  <Input onKeyDown={(e) => Util.onKeyDown(e)}\n                    data-index=\"15\"\n                    type=\"select\" name=\"select\" onChange={this.handleChangePaymentMethods}\n                  >\n                    {this.state.paymentList.map((item, index) => {\n                      return <option key={item.method} value={index} >{item.name}</option>\n                    })}\n                  </Input>\n                </Col>\n                <Col sm={5}>\n                  <Input value={note}\n                    onKeyDown={(e) => Util.onKeyDown(e)}\n                    data-index=\"16\" onChange={this.handleChangeNote}\n                    type=\"text\"\n                    placeholder=\"điền thông tin giao dịch\" />\n                </Col>\n                <Col sm={2} className=\"end pl-0\">\n                  <Button\n                    onKeyDown={(e) => Util.onKeyDown(e)}\n                    data-index=\"17\"\n                    onClick={() => {\n                      this.handleSubmit();\n                    }}\n\n                    disabled={orderStatus.value == STATUS.PAID}\n                  >\n                    <Spinner\n                      color=\"primary\"\n                      className={\n                        this.state.submitLoading ? \"d-inline-block\" : \"d-none\"\n                      }\n                    />\n                    Thanh Toán\n                  </Button>{' '}\n                </Col>\n\n              </FormGroup>\n            </Form>\n          </Col>\n        )}\n\n      </Col>\n    );\n  }\n}\n\nexport default AccountingForm;","import React from 'react';\nimport { FormGroup, Label, Input, Col, Row } from 'reactstrap';\nimport Asterisk from './Asterisk'\nimport { REGEX_TEL } from '../../Shared/index';\nimport ReceptionService from \"../../Shared/ReceptionService\";\nimport Select, { createFilter } from 'react-select';\nimport { Util } from '../../../../Helper/Util';\nimport {\n    stringToSlug\n} from \"../../Shared/Util\";\n\nexport default class CustomerForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            cityList: [],\n            wardList: [],\n            districtList: [],\n            currentCity: '',\n            currentDistrict: '',\n            currentWard: '',\n        }\n        this.handleChangeCity = this.handleChangeCity.bind(this);\n        this.handleChangeDistrict = this.handleChangeDistrict.bind(this)\n        this.handleChangeWard = this.handleChangeWard.bind(this)\n    }\n    getCityList = () => {\n        const type = \"province\";\n        const parent_id = \"VN\";\n        let cityList = ReceptionService.getLocationAllCity(type, parent_id)\n        cityList.then(res => {\n            this.setCityList(res.data)\n        })\n        return cityList\n    }\n\n    getDistricts = async (type, parent_id) => {\n        let districtList = ReceptionService.getLocationAllDistrict(type, parent_id)\n        await districtList.then(res => {\n            this.setDistrictList(res.data)\n        })\n        return districtList\n    }\n    getWards = async (type, parent_id) => {\n        let wardList = ReceptionService.getLocationAllWard(type, parent_id)\n        await wardList.then(res => {\n            this.setWardList(res.data)\n        })\n        return wardList\n    }\n\n    setWardList = (wardList) => {\n        this.setState({ wardList: wardList })\n        this.setState({ parent_id: wardList[0].id })\n    }\n    setCityList = (cityList) => {\n        this.setState({ cityList: cityList })\n        this.setState({ parent_id: cityList[0].id })\n    }\n    setDistrictList = (districtList) => {\n        this.setState({ districtList: districtList })\n        this.setState({ parent_id: districtList[0].id })\n    }\n\n    handleChangeCity(value) {\n        const cities = this.state.cityList.filter((item) => {\n            return item.name == value\n        })\n        if (cities.length == 0) return\n        this.setState({ currentCity: cities[0] })\n        this.getDistricts('district', cities[0].id)\n    }\n    handleChangeDistrict(value) {\n        const districts = this.state.districtList.filter((item) => {\n            return item.name == value\n        })\n        if (districts.length == 0) return\n        this.setState({ currentDistrict: districts[0] })\n        this.getWards('ward', districts[0].id)\n    }\n    handleChangeWard(value) {\n        const wards = this.state.wardList.filter((item) => {\n            return item.name == value\n        })\n        if (wards.length == 0) return\n        this.setState({ currentWard: wards[0] })\n    }\n\n    componentDidMount() {\n        document.getElementById('province').setAttribute(\"data-index\", \"7\")\n        document.getElementById('district').setAttribute(\"data-index\", \"8\")\n        document.getElementById('ward').setAttribute(\"data-index\", \"9\")\n        this.getCityList();\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.fillAddress !== prevProps.fillAddress) {\n            const cities = this.state.cityList.filter((item) => {\n                return item.name == this.props.form.contact_city.value\n            })\n            if (cities.length == 0) return\n            this.setState({ currentCity: cities[0] })\n            ReceptionService.getLocationAllDistrict('district', cities[0].id)\n                .then(res => {\n                    this.setDistrictList(res.data);\n                    const districts = this.state.districtList.filter((item) => {\n                        return item.name == this.props.form.contact_district.value;\n                    })\n                    if (districts.length == 0) return\n                    this.setState({ currentDistrict: districts[0] })\n                    ReceptionService.getLocationAllWard('ward', districts[0].id)\n                        .then(response => {\n                            this.setWardList(response.data);\n                        })\n                })\n        }\n    }\n\n    render() {\n        let { contact_full_name, health_insuranced, health_insurance, contact_address, dirty, contact_email, contact_city, contact_district, contact_ward } = this.props.form;\n        let { _setValue, officialsExam } = this.props\n        let { cityList, districtList, wardList } = this.state\n        // console.log(contact_full_name, health_insurance, contact_address, dirty, contact_email, contact_city, contact_district, contact_ward)\n        // console.log(cityList.filter(item => item.name === contact_city.value)[0]);\n        let cityOptions = cityList.map((item) => ({\n            value: item.name,\n            label: item.name\n        })) || []\n        let districtOptions = districtList.map((item) => ({\n            value: item.name,\n            label: item.name\n        })) || []\n        let wardOptions = wardList.map((item) => ({\n            value: item.name,\n            label: item.name\n        })) || []\n        const filterConfig = {\n            ignoreCase: true,\n            ignoreAccents: true,\n            trim: true,\n            matchFrom: 'any',\n            stringify: option => `${option.label} ${stringToSlug(option.label).match(/\\b\\w/g).join('')}`,\n        };\n        return (\n            <>\n                <p className=\"title-card\"><span className=\"material-icons\">assignment</span> Thông tin liên lạc</p>\n                <FormGroup row className=\"address-form\">\n                    <Label for=\"contact_address\" sm={4} >Địa chỉ <Asterisk /></Label>\n                    <Col sm={8}>\n                        <Input\n                            onKeyDown={(e) => Util.onKeyDown(e)}\n                            data-index=\"6\"\n                            type=\"text\"\n                            name=\"contact_address\"\n                            id=\"contact_address\"\n                            value={contact_address.value}\n                            onChange={(ev) => _setValue(ev, 'contact_address')}\n                            required\n                        />\n                    </Col>\n                    <Row className=\"mb-0\" >\n                        <Col className=\"cities\">\n                            <Select\n                                inputId=\"province\"\n                                onKeyDown={(e) => Util.onKeyDown(e)}\n                                value={cityOptions.find(item => item.value === contact_city.value) || null}\n                                onChange={ev => {\n                                    this.handleChangeCity(ev.value); _setValue({\n                                        persist: () => null,\n                                        target: { value: ev.value, validity: { valid: !!ev.value } }\n                                    }, \"contact_city\")\n                                }}\n                                options={cityOptions}\n                                placeholder=\" Tỉnh\"\n                                menuPlacement=\"top\"\n                                openMenuOnFocus\n                                filterOption={createFilter(filterConfig)}\n                                required\n\n                            />\n                        </Col>\n                        <Col className=\"districts\">\n                            <Select\n                                inputId=\"district\" onKeyDown={(e) => Util.onKeyDown(e)}\n                                value={districtOptions.find(item => item.value === contact_district.value) || null}\n                                onChange={ev => {\n                                    this.handleChangeDistrict(ev.value); _setValue({\n                                        persist: () => null,\n                                        target: { value: ev.value, validity: { valid: !!ev.value } }\n                                    }, \"contact_district\")\n                                }}\n                                options={districtOptions}\n                                placeholder=\" Huyện\"\n                                menuPlacement=\"top\"\n                                openMenuOnFocus\n                                filterOption={createFilter(filterConfig)}\n                            />\n                        </Col>\n                        <Col className=\"wards\">\n                            <Select\n                                inputId=\"ward\" onKeyDown={(e) => Util.onKeyDown(e)}\n                                value={wardOptions.find(item => item.value === contact_ward.value) || null}\n                                onChange={ev => {\n                                    this.handleChangeWard(ev.value); _setValue({\n                                        persist: () => null,\n                                        target: { value: ev.value, validity: { valid: !!ev.value } }\n                                    }, \"contact_ward\")\n                                }}\n                                options={wardOptions}\n                                placeholder=\"Phường/xã\"\n                                menuPlacement=\"top\"\n                                openMenuOnFocus\n                                filterOption={createFilter(filterConfig)}\n                            />\n                        </Col>\n                    </Row>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"dealth_insurance\" sm={4}>Mã bảo hiểm</Label>\n                    <Col sm={8}>\n                        <Input\n\n                            onKeyDown={(e) => Util.onKeyDown(e)}\n                            name=\"health_insurance\"\n                            disabled={officialsExam}\n                        // value={health_insurance ? health_insurance.value : ''}\n                        // onChange={(ev) => _setValue(ev, 'health_insurance')}\n                        />\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"dealth_insurance\" sm={4}>Nơi đăng kí</Label>\n                    <Col sm={8}>\n                        <Input\n                            onKeyDown={(e) => Util.onKeyDown(e)}\n                            name=\"health_insurance\"\n                            disabled={officialsExam}\n                        // value={health_insuranced ? health_insuranced.value : ''}\n                        // onChange={(ev) => _setValue(ev, 'health_insuranced')}\n                        />\n\n                    </Col>\n                </FormGroup>\n                {/* <FormGroup row>\n                    <Label for=\"contact_email\" sm={4}>Email</Label>\n                    <Col sm={8}>\n                        <Input\n                            type=\"email\"\n                            name=\"contact_email\"\n                            id=\"contact_email\"\n                            value={contact_email.value}\n                            onChange={(ev) => _setValue(ev, 'contact_email')}\n                        />\n                        {dirty && <span className=\"text-danger\">{contact_email.err}</span>}\n                    </Col>\n                </FormGroup> */}\n\n                <FormGroup row>\n                    <Label for=\"contact_full_name\" sm={4}>Tên người liên hệ</Label>\n                    <Col sm={8}>\n                        <Input\n                            onKeyDown={(e) => Util.onKeyDown(e)}\n                            disabled={officialsExam}\n                            type=\"text\"\n                            name=\"contact_full_name\"\n                            value={contact_full_name.value}\n                            id=\"contact_full_name\"\n                            onChange={(ev) => _setValue(ev, 'contact_full_name')}\n                            className=\"text-uppercase\"\n                        />\n                        {dirty && <span className=\"text-danger\">{contact_full_name.err}</span>}\n                    </Col>\n                </FormGroup>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { Input, Col, Row, Table } from 'reactstrap';\nimport ReceptionService from \"../../Shared/ReceptionService\";\nimport { convertToStrDate } from \"../../Shared/Util\"\nexport default class CustomerForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            customerCode: '',\n            customerMatch: [],\n            showSearch: false,\n        }\n    }\n\n    setShowSearch = (showSearch) => {\n        this.setState({ showSearch })\n    }\n\n    setCustomerCode = (customerCode) => {\n        this.setState({ customerCode })\n    }\n\n\n    setCustomerMatch = (customerMatch) => {\n        this.setState({ customerMatch })\n    }\n\n    handleSearch = async (text) => {\n        this.setShowSearch(true)\n        this.setCustomerCode(text)\n        if (text.length >= 3) {\n            let customerMatch = await ReceptionService.searchCustomer(text)\n            this.setCustomerMatch(customerMatch.data)\n        }\n\n    }\n\n    onChooseCustomer = (customer) => {\n        this.props.handleReExam(customer.code)\n        //this.setCustomerCode(customer.code)\n        this.setShowSearch(false)\n    }\n\n    render() {\n        const { customerCode, customerMatch, showSearch } = this.state\n        return (\n            <>\n                <div className=\"position-relative search-1\">\n                    <Row >\n                        <p className=\"title-card title-search col-form-label\"><span className=\"material-icons\">search</span> Tìm kiếm</p>\n                        <Col className=\"px-0 ml-3\">\n                            <Input\n                                type=\"search\"\n                                value={customerCode}\n                                onChange={(ev) => { this.handleSearch(ev.target.value); }}\n                                onFocus={() => this.setShowSearch(true)}\n                                onBlur={() => setTimeout(() => this.setShowSearch(false), 200)}\n                                placeholder=\"Nhập mã bệnh nhân, số điện thoại...\"\n                            />\n                            {customerCode && showSearch &&\n                                <div className=\"position-absolute\">\n                                    <div>\n                                        {customerCode && !customerMatch.length && 'Không tìm thấy bệnh nhân!'}\n                                        {!!customerMatch.length && <Table hover size=\"sm\">\n                                            <thead>\n                                                <tr>\n                                                    <th>Mã</th>\n                                                    <th>Tên</th>\n                                                    <th>Điện thoại</th>\n                                                    <th>Ngày sinh</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {customerMatch.map(customer => (\n                                                    <tr key={customer.id} onClick={() => this.onChooseCustomer(customer)}>\n                                                        <td>{customer.code}</td>\n                                                        <td>{customer.full_name}</td>\n                                                        <td>{customer.contacts?.[0]?.phone}</td>\n                                                        <td>{convertToStrDate(customer.birthday)}</td>\n                                                    </tr>\n                                                ))}\n                                            </tbody>\n                                        </Table>}\n                                    </div>\n                                </div>\n                            }\n                        </Col>\n                    </Row>\n\n                </div>\n            </>\n        )\n    }\n}","import React, { useEffect, useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Table } from 'reactstrap';\nimport { ReceptionService } from '../../../Shared';\nimport { convertToStrDate } from \"../../../Shared/Util\"\n\nconst ModalFilterCmCode = (props) => {\n\n  const [modalC, setModalC] = useState(false);\n  const [customer, setCustomer] = useState([])\n  // const [customerMatch, setCustomerMatch] = useState([])\n  const toggle = () => setModalC(!modalC);\n  const { cm_code, handleReExam ,cm_full_name,cm_birthday} = props\n  useEffect(() => {\n    if(cm_birthday.value && cm_full_name.value && !cm_birthday.err){\n      return\n    }else if (cm_code.value && !cm_code.err) {\n      handleSearch(cm_code.value)\n    }\n  }, [cm_code.value])\n\n  const handleSearch = async (code) => {\n    let customerMatch = await ReceptionService.getCmbyCode(code)\n    // setCustomerMatch(customerMatch.data)\n    let customer = customerMatch.data\n    setCustomer(customer)\n    if (customer.id) {\n      setModalC(true)\n    }\n  }\n\n  const onChooseCustomer = (customer) => {\n    handleReExam(customer.code)\n    toggle()\n  }\n  return (\n    \n      <Modal isOpen={modalC} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Bệnh nhân có mã {cm_code.value}</ModalHeader>\n        <ModalBody>\n          <Table hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>Mã</th>\n                <th>Tên</th>\n                <th>Ngày sinh</th>\n                <th>Điện thoại</th>\n                <th>Giới tính</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr key={customer.id}\n                \n               onClick={() => onChooseCustomer(customer)}\n               >\n                <td >{customer.code}</td>\n                <td>{customer.full_name}</td>\n                <td>{convertToStrDate(customer.birthday)}</td>\n                <td>{customer.contacts?.[0]?.phone}</td>\n                <td>{customer.gender === \"male\" ? \"Nam\" : \"Nữ\"}</td>\n              </tr>\n            </tbody>\n          </Table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>Thoát</Button>\n        </ModalFooter>\n      </Modal>\n    \n  );\n}\n\nexport default ModalFilterCmCode;","import React, { useEffect, useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Table } from 'reactstrap';\nimport { ReceptionService } from '../../../Shared';\nimport { convertToStrDate, convertToNormDate } from \"../../../Shared/Util\"\n\nconst ModalFilter = (props) => {\n\n    const [modal, setModal] = useState(false);\n    const [customerMatch, setCustomerMatch] = useState([])\n    const toggle = () => setModal(!modal);\n    const {cm_code, cm_full_name, cm_birthday, handleReExam, cm_phoneNumber,contact_address } = props\n    useEffect(() => {\n       if(contact_address.value){\n        return\n       }\n       else if(cm_birthday.value && cm_full_name.value && !cm_birthday.err ){\n            handleSearch(cm_full_name.value.toUpperCase(), convertToNormDate(cm_birthday.value))\n        }\n    }, [cm_birthday.value, cm_full_name.value.toUpperCase()])\n\n    const handleSearch = async (full_name, birthday) => {\n        let customerMatch = await ReceptionService.getCmList({ full_name, birthday })\n        setCustomerMatch(customerMatch.data)\n        if (customerMatch.data.length) {\n            setModal(true)\n        }\n    }\n\n    const onChooseCustomer = (customer) => {\n        handleReExam(customer.code)\n        toggle()\n    }\n    return (\n        <div>\n            <Modal isOpen={modal} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Bệnh nhân có tên {cm_full_name.value}, ngày sinh {convertToStrDate(cm_birthday.value)}</ModalHeader>\n                <ModalBody>\n                    <Table hover size=\"sm\">\n                        <thead>\n                            <tr>\n                                <th>Mã</th>\n                                <th>Tên</th>\n                                <th>Ngày sinh</th>\n                                <th>Điện thoại</th>\n                                <th>Giới tính</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {customerMatch.map(customer => (\n                                <tr key={customer.id} onClick={() => onChooseCustomer(customer)}>\n                                    <td>{customer.code}</td>\n                                    <td>{customer.full_name}</td>\n                                    <td>{convertToStrDate(customer.birthday)}</td>\n                                    <td>{customer.contacts?.[0]?.phone}</td>\n                                    <td>{customer.gender === \"male\" ? \"Nam\" : \"Nữ\"}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"secondary\" onClick={toggle}>Thoát</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    );\n}\n\nexport default ModalFilter;","import React from 'react';\nimport { Row, Col, Table, } from 'reactstrap';\nimport { Form, ModalNoti, } from \"../../../../../Shared\";\nimport logo from '../../../../../Asset/Img/logo.png';\nimport SharedService from '../../../../../Shared/Services/SharedService';\nclass PrintServiceFrom extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n    render() {\n        const { assignedServices,titleService,locPrint } = this.props;\n        let totalPrice = 0 ;\n        const current = new Date();\n        let rowDiagnostic = assignedServices.map((diagnostic, index) => {\n             totalPrice += diagnostic.price\n            return (\n                <tr key={diagnostic.id} >\n                    <td>{index + 1}</td>\n                    <td>{diagnostic.name}</td>\n                    <td>{diagnostic.code}</td>\n                    <td>{locPrint}</td>\n                </tr>\n            )\n        })\n        return (\n            <div className=\"border border-secondary receiptContainer m-3 \" style={{ display: 'none' }}>\n                <div className=\"position-relative printDiag\" id=\"servicePrint\" >\n                    <div className=\"absolute header-from\">\n                    <Row>\n                            <Col sm=\"9\">\n                                <Row className=\"text-left\">\n                                    <Col sm=\"3\">\n                                        <Row>\n                                            <img className=\"image\" src={logo} ></img>\n                                        </Row>\n                                    </Col>\n                                    <Col>\n                                        <Row>\n                                        Phòng Khám Đa Khoa Việt Đoàn\n                                        </Row>\n                                        <Row>\n                                            Bách Môn, Việt Đoàn, Tiên Du, Bắc Ninh\n                                        </Row>\n                                        <Row>\n                                            hotline: 0869.968.688\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col className=\"end\">\n                                <canvas id=\"canvasIdEtc\" style={{ height: \"13mm\" }}></canvas>\n                            </Col>\n                        </Row>\n                    </div>\n                    <h5 className=\"text-center font-weight-bold\">\n                        <b>{titleService}</b>\n                    </h5>\n                    <div className=\"text-center\">\n                        <i>Ngày {current.getDate()} Tháng {current.getMonth() + 1} Năm {current.getFullYear()}</i>\n                    </div>\n                    <br></br>\n                    <canvas id=\"cusBarCode\" style={{height:\"13mm\"}}></canvas>                 \n                    <div className=\"justify-content-between\">\n                        <Table bordered className=\"tableService\">\n                            <thead className=\"title-table\">\n                                <tr>\n                                    <th>#</th>\n                                    <th>Tên xét nghiệm</th>\n                                    <th>Loại xét nghiệm</th>\n                                    <th>Phòng xét nghiệm</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {rowDiagnostic}\n                            </tbody>\n                        </Table>\n                    </div>\n                    <Row>\n                        <Col sm=\"6\"></Col>\n                        <Col sm=\"6\">Tổng tiền:<b>{new Intl.NumberFormat('de-DE').format(totalPrice)}VNĐ</b></Col>\n                    </Row>\n                    <br></br>\n                    <div className=\"d-flex justify-content-between px-4\">\n                        <div className=\"text-center mr-auto ml-5\">\n                            <strong>BÁC SĨ ĐIỀU TRỊ</strong><br></br>\n                            <i>(ký, họ tên)</i>\n                        </div>\n                        <div className=\"text-center mr-5\">\n                            ....Giờ ....Ngày ....Tháng ....Năm<br></br>\n                            <strong>KHOA XÉT NGHIỆM</strong><br></br>\n                        </div>\n                    </div>\n                    <Row>\n                        <Col></Col>\n                    </Row>\n                </div>\n            </div>\n        )\n    }\n\n}\nexport default PrintServiceFrom;\n","import React from 'react';\nimport { FormGroup, Label, Row, Col, Input, Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport Asterisk from '../Asterisk'\nimport { numberWithCommas } from \"../../../Shared/Util\";\nimport ReceptionService from \"../../../Shared/ReceptionService\";\nimport { LOCATION_TYPE, ONE_DAY, POLICY_CODE, SERVICE_TYPE, STATUS } from \"../../../../../Constances/const\"\nimport ServiceService from \"../../../../Service/Shared/ServiceService\";\nimport PricePolicyService from \"../../../../Service/Shared/PricePolicyService\";\nimport { Util } from \"../../../../../Helper/Util\";\nimport Select from 'react-select';\nimport { Table } from 'reactstrap';\nimport NumberFormat from 'react-number-format';\nimport PrintServiceFrom from './PrintServiceFrom';\nimport SharedService from \"../../../../../Shared/Services/SharedService\"\n\nexport default class ServiceForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comboName: '',\n            selectedService: null,\n            selectedPolicy: null,\n            services: [],\n            serviceOther: [],\n            serviceTest: [],\n            serviceXray: [],\n            serviceEnt: [],\n            serviceUltrasound: [],\n            serviceExam: [],\n            serviceList: [],\n            policyPriceList: [],\n            locationList: [],\n            clinic: [],\n            showServiceTest: false,\n            showServiceXRay: false,\n            showServiceEnt: false,\n            showServiceUltrasound: false,\n            showTable: false,\n            arrayServicePrint: [],\n            titlePrint: \"\",\n            titleExam: \"PHIẾU YÊU CẦU XÉT NGHIỆM\",\n            titleEnt: \"PHIẾU YÊU CẦU NỘI SOI\",\n            titleUltra: \"PHIẾU YÊU CẦU SIÊU ÂM\",\n            titleXray: \"PHIẾU YÊU CẦU XQUANG\",\n            titleOther: \"PHIẾU YÊU CẦU Cấp Cứu\",\n            locationPrint: \"\",\n            locExam: \"PHÒNG XÉT NGHIỆM\",\n            locOther: \"Phòng Cấp Cứu\",\n            locENT: \"PHÒNG NỘI SOI\",\n            locUtral: \"PHÒNG SIÊU ÂM\",\n            locXray: \"PHÒNG XQUANG\",\n\n        };\n    }\n    setComboName = (comboName) => {\n        this.setState({ comboName })\n    }\n    setSelectedXRayService = (selectedXRayService) => {\n        this.setState({ selectedXRayService })\n    }\n    setSelectedEntService = (selectedEntService) => {\n        this.setState({ selectedEntService })\n    }\n    setSelectedOtherService = (selectedOtherService) => {\n        this.setState({ selectedOtherService })\n    }\n    setSelectedUltrasoundService = (selectedUltrasoundService) => {\n        this.setState({ selectedUltrasoundService })\n    }\n    setSelectedTestService = (selectedTestService) => {\n        this.setState({ selectedTestService })\n    }\n    setShowServiceTest = (showServiceTest) => {\n        this.setState({ showServiceTest })\n    }\n    setShowServiceTest = (showServiceOther) => {\n        this.setState({ showServiceOther })\n    }\n    setShowServiceUltrasound = (showServiceUltrasound) => {\n        this.setState({ showServiceUltrasound })\n    }\n    setShowServiceEnt = (showServiceEnt) => {\n        this.setState({ showServiceEnt })\n    }\n    setServices = (services) => {\n        this.setState({ services });\n    };\n    setServiceOther = (serviceOther) => {\n        this.setState({ serviceOther });\n    };\n    setNotiMessage = (notiMessage) => {\n        this.setState({ notiMessage });\n    };\n    setServiceTest = (serviceTest) => {\n        this.setState({ serviceTest });\n    };\n    setServiceExam = (serviceExam) => {\n        this.setState({ serviceExam });\n    };\n    getLocationByServiceId = (id) => {\n        return ReceptionService.getLocationByService(id);\n    };\n\n\n    componentDidMount() {\n        document.getElementById('selectService').setAttribute(\"data-index\", \"10\")\n        ServiceService.getServiceList()\n            .then((res) => {\n                this.setState({ serviceList: res.data });\n                let serviceXray = this.state.serviceList.filter(e => e.type == \"x-ray\")\n                this.setState({ serviceXray })\n                let serviceEnt = this.state.serviceList.filter(e => e.type == \"ent\")\n                this.setState({ serviceEnt })\n                let serviceOther = this.state.serviceList.filter(e => e.type == 'other')\n                this.setState({ serviceOther })\n                let serviceUltrasound = this.state.serviceList.filter(e => e.type == \"ultrasound\")\n                this.setState({ serviceUltrasound })\n                let serviceTest = this.state.serviceList.filter(e => e.type == \"test\")\n                this.setState({ serviceTest })\n\n                let serviceExam = this.state.serviceList.filter(e => e.type == \"exam\")\n                serviceExam.push({\n                    code: \"XNDV\",\n                    id: \"XNDV\",\n                    name: \"Xét Nghiệm Dịch Vụ\",\n                    type: \"exam\",\n                    price: 0,\n                    value: serviceTest\n                })\n                serviceExam.push({\n                    code: \"XRAY\",\n                    id: \"XRAY\",\n                    name: \"Chụp X-Quang\",\n                    type: \"x-ray\",\n                    price: 0,\n                    value: serviceXray\n                })\n                serviceExam.push({\n                    code: \"SADV\",\n                    id: \"SADV\",\n                    name: \"Siêu Âm Dịch Vụ\",\n                    type: \"ultrasound\",\n                    price: 0,\n                    value: serviceUltrasound\n                })\n                serviceExam.push({\n                    code: \"NSDV\",\n                    id: \"NSDV\",\n                    name: \"Nội Soi Dịch Vụ\",\n                    type: \"ent\",\n                    price: 0,\n                    value: serviceEnt\n                })\n                serviceExam.push({\n                    code: \"CC\",\n                    id: \"CC\",\n                    name: \"Cấp cứu\",\n                    type: \"other\",\n                    price: 0,\n                    value: serviceOther\n                })\n                this.setState({ serviceExam })\n                let services = serviceExam.concat(serviceTest).concat(serviceEnt).concat(serviceUltrasound)\n                this.setState({ services })\n            })\n            .catch((err) => { });\n\n\n        PricePolicyService.getPricePolicyList()\n            .then((res) => {\n                const policyP = res.data\n                const policyPriceList = policyP.reverse();\n                this.setState({ policyPriceList });\n            })\n            .catch((err) => { });\n    }\n    handleChangeSelectService = (event, selectedService) => {\n        this.setState({ selectedService: event })\n        if (selectedService) {\n            if ({ selectedService: event }.selectedService.value === 'XNDV') {\n                this.setState({ showServiceTest: true })\n            } else if ({ selectedService: event }.selectedService.value === 'XRAY') {\n                this.setState({ showServiceXRay: true })\n            } else if ({ selectedService: event }.selectedService.value === 'CC') {\n                this.setState({ showServiceOther: true })\n            } else if ({ selectedService: event }.selectedService.value === 'NSDV') {\n                this.setState({ showServiceEnt: true })\n            } else if ({ selectedService: event }.selectedService.value === 'SADV') {\n                this.setState({ showServiceUltrasound: true })\n            }\n        }\n        //XQUANG\n        let serviceXray = this.state.serviceXray.find((item) => { return item.id == event.value })\n        let b = this.props.selectedXRayService;\n        if (serviceXray && b.indexOf(serviceXray) < 0) {\n            b.push(serviceXray)\n        }\n        let priceXray = 0;\n        if (this.props.selectedXRayService) {\n            this.props.selectedXRayService.map(e => {\n                priceXray += e.price\n            })\n            this.setState({ priceXray: priceXray })\n        }\n        this.setSelectedXRayService(b)\n        //NSDV\n        let serviceEnt = this.state.serviceEnt.find((item) => { return item.id == event.value })\n        let c = this.props.selectedEntService;\n        if (serviceEnt && c.indexOf(serviceEnt) < 0) {\n            c.push(serviceEnt)\n        }\n        let priceEnt = 0;\n        if (this.props.selectedEntService) {\n            this.props.selectedEntService.map(e => {\n                priceEnt += e.price\n            })\n            this.setState({ priceEnt: priceEnt })\n        }\n        this.setSelectedEntService(c)\n        //SADV\n        let serviceUltrasound = this.state.serviceUltrasound.find((item) => { return item.id == event.value })\n        let d = this.props.selectedUltrasoundService;\n        if (serviceUltrasound && d.indexOf(serviceUltrasound) < 0) {\n            d.push(serviceUltrasound)\n        }\n        let priceSADV = 0;\n        if (this.props.selectedUltrasoundService) {\n            this.props.selectedUltrasoundService.map(e => {\n                priceSADV += e.price\n            })\n            this.setState({ priceSADV: priceSADV })\n        }\n        this.setSelectedUltrasoundService(d)\n        //CC\n        let serviceOther = this.state.serviceOther.find((item) => { return item.id == event.value })\n        let e = this.props.selectedOtherService;\n        if (serviceOther && e.indexOf(serviceOther) < 0) {\n            e.push(serviceOther)\n        }\n        let priceOther = 0;\n        if (this.props.selectedOtherService) {\n            this.props.selectedOtherService.map(e => {\n                priceOther += e.price\n            })\n            this.setState({ priceOther: priceOther })\n        }\n        this.setSelectedOtherService(e)\n        //XNDV\n        let service = this.state.serviceTest.find((item) => { return item.id == event.value })\n        let a = this.props.selectedTestService;\n        if (service && a.indexOf(service) < 0) {\n            a.push(service)\n        }\n        this.setSelectedTestService(a)\n        let price = 0;\n        if (this.props.selectedTestService) {\n            for (let i = 0; i < this.props.selectedTestService.length; i++) {\n                price += this.props.selectedTestService[i].price\n            }\n            this.setState({ price: price })\n        }\n        this.setState({ showTable: true })\n        this.onServiceChange(event)\n    }\n\n    getListCustomerByLocationId = (location_id, status, type) => {\n        return ReceptionService.getJobStepList(location_id, status, type)\n    }\n    getServicePrice = () => {\n        let policy = this.state.policyPriceList.find(\n            (item) => item.id === this.props.form.policy_id.value\n        );\n        let service = this.state.serviceExam.find(\n            (item) => item.id === this.props.form.service_id.value\n        );\n        if (policy) {\n            return ({\n                discountPrice: Math.round((service ? service.price : 0) * (1 - policy.discount)),\n                basicPrice: service ? service.origin_price : 0,\n                PriceUpdate: service ? service.price : 0\n            })\n        }\n\n\n    }\n    //service thay đổi sẽ phải lấy về location tương ứng với service mới\n    //nếu chỉ có 1 location thì tự động chọn location đó\n    onServiceChange = async (ev) => {\n        if (!ev) {\n            this.setNotiMessage(\"Có lỗi! Xin vui lòng chọn dịch vụ \")\n        } else {\n            let serviceId = ev.value\n            this.props.setValueForm(ev)\n            if (await this.props.isExamWithin3D(this.props.medicalHistory, serviceId)) {\n                this.props.setPolicyId(this.state.policyPriceList.find((item) => item.code === POLICY_CODE.KL3D)?.id)\n            } else if (await this.props.officialsExam) {\n                this.props.setPolicyId(this.state.policyPriceList.find((item) => item.code === POLICY_CODE.CBNV)?.id)\n            }\n            else {\n                this.props.setPolicyId(this.state.policyPriceList.find((item) => item.code === POLICY_CODE.KDV)?.id)\n            }\n            this.getLocationByServiceId(serviceId)\n                .then((res) => {\n                    let form = this.props.form;\n                    let locationList = res.data;\n                    this.setState({ locationList });\n                    if (locationList.length === 1) {\n                        this.props.setLocationId(this.state.locationList[0].id)\n                        // this.setState({\n                        //     form: {\n                        //         ...form,\n                        //         location_id: { value: locationList[0].id, err: \"\" },\n                        //     },\n                        // });\n                    } else {\n                        this.setState({\n                            form: { ...form, location_id: { value: \"\", err: \"*\" } },\n                        });\n                    }\n                    //sau khi có location_id thì hiện ra danh sách bệnh nhân của từng phòng qua location_id\n\n                    let clinic = []\n                    let today = new Date();\n                    let ctoday = today.getTime()\n                    locationList.forEach(async location => {\n                        if (location.type == LOCATION_TYPE.EXAMINATION) {\n                            let status = `${STATUS.NEW},${STATUS.RUNNING},${STATUS.READY}`\n                            let type = SERVICE_TYPE.EXAM\n                            this.getListCustomerByLocationId(location.id, status, type).then((res) => {\n                                const todayCustomer = res.data.filter(ct => {\n                                    return ctoday - ct.ctime < ONE_DAY\n                                })\n                                let customerWait = todayCustomer.length\n                                clinic.push({ name: location.name, customerWait: customerWait, id: location.id })\n                                clinic.sort((a, b) => {\n                                    return a.customerWait - b.customerWait\n                                })\n                                this.setState({ clinic: clinic })\n                            })\n                        } else if (location.type == LOCATION_TYPE.TESTING) {\n                            let status = STATUS.READY\n                            let type = SERVICE_TYPE.TEST\n                            this.getListCustomerByLocationId(location.id, status, type).then((res) => {\n                                let customerWait = res.data.length\n                                clinic.push({ name: location.name, customerWait: customerWait, id: location.id })\n                                this.setState({ clinic: clinic })\n                            })\n                        } else if (location.type == LOCATION_TYPE.XRAY) {\n                            let status = ''\n                            if (status != STATUS.DONE && status != STATUS.PAID) {\n                                let type = SERVICE_TYPE.XRAY\n                                this.getListCustomerByLocationId(location.id, type).then((res) => {\n                                    let customerWait = res.data.length\n                                    clinic.push({ name: location.name, customerWait: customerWait, id: location.id })\n                                    this.setState({ clinic: clinic })\n                                })\n                            }\n\n                        } else if (location.type == LOCATION_TYPE.ULTRASOUND) {\n                            let status = ''\n                            if (status != STATUS.DONE && status != STATUS.PAID) {\n                                let type = SERVICE_TYPE.ULTRASOUND\n                                this.getListCustomerByLocationId(location.id, type).then((res) => {\n                                    let customerWait = res.data.length\n                                    clinic.push({ name: location.name, customerWait: customerWait, id: location.id })\n                                    this.setState({ clinic: clinic })\n                                })\n                            }\n                        } else if (location.type == LOCATION_TYPE.EMERGENCY) {\n                            let status = ''\n                            if (status != STATUS.DONE && status != STATUS.PAID) {\n                                let type = SERVICE_TYPE.OTHER\n                                this.getListCustomerByLocationId(location.id, type).then((res) => {\n                                    let customerWait = res.data.length\n                                    clinic.push({ name: location.name, customerWait: customerWait, id: location.id })\n                                    this.setState({ clinic: clinic })\n                                })\n                            }\n                        } else if (location.type == LOCATION_TYPE.ENT) {\n                            let status = ''\n                            if (status != STATUS.DONE && status != STATUS.PAID) {\n                                let type = SERVICE_TYPE.ENT\n                                this.getListCustomerByLocationId(location.id, type).then((res) => {\n                                    let customerWait = res.data.length\n                                    clinic.push({ name: location.name, customerWait: customerWait, id: location.id })\n                                    this.setState({ clinic: clinic })\n                                })\n                            }\n                        }\n                    });\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n\n        }\n    };\n    onClearForm = () => {\n        let selectedTestService = this.state.selectedTestService;\n        let price = this.state.price;\n        selectedTestService.splice(0, selectedTestService.length);\n        this.setState({ selectedTestService: selectedTestService });\n        this.setState({ price: 0 });\n    }\n    onClearFormXRay = () => {\n        let selectedXRayService = this.state.selectedXRayService;\n        selectedXRayService.splice(0, selectedXRayService.length);\n        this.setState({ selectedXRayService: selectedXRayService });\n        this.setState({ showServiceXRay: false })\n    }\n    onClearFormOther = () => {\n        let selectedOtherService = this.state.selectedOtherService;\n        selectedOtherService.splice(0, selectedOtherService.length);\n        this.setState({ selectedOtherService: selectedOtherService });\n        this.setState({ showServiceOther: false })\n    }\n    onClearFormUltrasound = () => {\n        let selectedUltrasoundService = this.state.selectedUltrasoundService;\n        let price = this.state.price;\n        selectedUltrasoundService.splice(0, selectedUltrasoundService.length);\n        this.setState({ selectedUltrasoundService: selectedUltrasoundService });\n        this.setState({ price: 0 })\n    }\n    onClearFormEnt = () => {\n        let selectedEntService = this.state.selectedEntService;\n        let price = this.state.price;\n        selectedEntService.splice(0, selectedEntService.length);\n        this.setState({ selectedEntService: selectedEntService });\n        this.setState({ price: 0 })\n    }\n    onCloseForm = () => {\n        let serviceExam = this.state.serviceExam\n        let form = this.props.form\n        serviceExam.unshift({\n            code: \"comboXN\",\n            id: \"comboXN\",\n            name: this.state.comboName,\n            type: \"test\",\n            price: this.state.price,\n            value: this.state.selectedTestService\n        })\n\n        this.setState({ serviceExam })\n        this.setState({ selectedService: { value: serviceExam[0].id, label: serviceExam[0].name } })\n        this.props.setValueForm({ err: '', value: 'comboXN' })\n        this.props.setComboNameForm({ err: \"\", value: this.state.comboName })\n        this.setState({ showServiceTest: false })\n\n    }\n    onCloseFormXray = () => {\n        this.setState({ showServiceXRay: false })\n    }\n    onCloseFormOther = () => {\n        this.setState({ showServiceOther: false })\n    }\n    onCloseFormUltrasound = () => {\n        this.setState({ showServiceUltrasound: false })\n    }\n    onCloseFormEnt = () => {\n        this.setState({ showServiceEnt: false })\n    }\n    onCloseFormXray = () => {\n        this.setState({ showServiceXRay: false })\n    }\n\n    onCloseFormEnt = () => {\n        this.setState({ showServiceEnt: false })\n    }\n    updatePrice = (service) => {\n        let price = 0;\n        console.log(service)\n        for (let el of service) {\n            try {\n                price += el.price;\n            } catch (error) {\n                console.log('updatePrice', error)\n            }\n        }\n        return price;\n    }\n    deleteRow = (index, type) => {\n        switch (type) {\n            case \"selectedTestService\":\n                let selectedTestService = this.state.selectedTestService;\n                selectedTestService.splice(index, 1);\n                this.setState({\n                    selectedTestService: selectedTestService,\n                    price: this.updatePrice(selectedTestService)\n                });\n\n                break;\n            case \"selectedXRayService\":\n                let selectedXRayService = this.state.selectedXRayService;\n                selectedXRayService.splice(index, 1);\n                this.setState({\n                    selectedXRayService: selectedXRayService,\n                    priceXray: this.updatePrice(selectedXRayService)\n                });\n                break;\n            case \"selectedUltrasoundService\":\n                let selectedUltrasoundService = this.state.selectedUltrasoundService;\n                selectedUltrasoundService.splice(index, 1);\n                this.setState({\n                    selectedUltrasoundService: selectedUltrasoundService,\n                    priceSADV: this.updatePrice(selectedUltrasoundService)\n                });\n                break;\n            case \"selectedOtherService\":\n                let selectedOtherService = this.state.selectedOtherService;\n                selectedOtherService.splice(index, 1);\n                this.setState({\n                    selectedOtherService: selectedOtherService,\n                    priceSADV: this.updatePrice(selectedOtherService)\n                });\n                break;\n            case \"selectedEntService\":\n                let selectedEntService = this.state.selectedEntService;\n                selectedEntService.splice(index, 1);\n                this.setState({\n                    selectedEntService: selectedEntService,\n                    priceEnt: this.updatePrice(selectedEntService)\n                });\n                break;\n        }\n\n    }\n    printService = async (ev, title, loc) => {\n        await this.setState({\n            titlePrint: title,\n            arrayServicePrint: ev,\n            locationPrint: loc\n        })\n\n        await SharedService.print(\"servicePrint\");\n    }\n    render() {\n\n        let { services, basicPrice, discountPrice, PriceUpdate, serviceList, policyPriceList, locationList, selectedService, clinic, selectedTestService, selectedOtherService, selectedXRayService, policy, selectedUltrasoundService, selectedEntService } = this.state\n        let { price, priceSADV, priceEnt, priceXray, priceOther } = this.state\n        let { serviceExam, serviceTest, serviceXray, serviceUltrasound, serviceEnt, serviceOther } = this.state\n        let { showTable, showServiceTest, showServiceXRay, showServiceUltrasound, showServiceEnt, showServiceOther } = this.state\n        let { service_id, location_id, policy_id, dirty } = this.props.form;\n        let { _setValue } = this.props\n        let serviceOptions = serviceExam.map((item) => ({\n            value: item.id,\n            label: item.name\n        })) || []\n        let serviceTestOptions = serviceTest.map((item) => ({\n            value: item.id,\n            label: item.name\n        })) || []\n        let serviceXRayOptions = serviceXray.map((item) => ({\n            value: item.id,\n            label: item.name\n        })) || []\n        let serviceOtherOptions = serviceOther.map((item) => ({\n            value: item.id,\n            label: item.name\n        })) || []\n        let serviceUltrasoundOptions = serviceUltrasound.map((item) => ({\n            value: item.id,\n            label: item.name\n        })) || []\n        let serviceEntOptions = serviceEnt.map((item) => ({\n            value: item.id,\n            label: item.name\n        })) || []\n\n\n\n        return (\n            <div className=\"serviceForm-container\">\n                <h5 className=\"title-card title-service\"><span className=\"material-icons\">local_hospital</span> Chọn dịch vụ</h5>\n                <Row className=\"mb-0 services-form\">\n                    <Col sm={4}>\n                        <FormGroup>\n                            <Label for=\"service_id\" className=\"title-selectService\">\n                                Chọn dịch vụ <Asterisk />\n                            </Label>\n                            <Select\n                                onKeyDown={(e) => Util.onKeyDown(e)}\n                                inputId=\"selectService\"\n                                type=\"select\"\n                                id=\"service_id\"\n                                value={selectedService}\n                                onChange={(ev) => this.handleChangeSelectService(ev, \"service_id\")}\n                                required\n                                placeholder=\"Chọn dịch vụ\"\n                                options={serviceOptions}\n\n                            />\n                            {dirty && (\n                                <span className=\"text-danger\">{service_id.err}</span>\n                            )}\n                            <Modal isOpen={showServiceTest} >\n                                <ModalHeader>\n                                    <h3> Đặt tên cho combo xét Nghiệm</h3>\n                                    <Input\n                                        type=\"text\"\n                                        placeholder=\"Nhập tên combo xét nghiệm\"\n                                        autoFocus\n                                        onChange={event => this.setComboName(event.target.value)}\n                                    >\n                                    </Input>\n                                    <h3> Chọn  dịch vụ xét nghiệm</h3>\n                                </ModalHeader>\n                                <ModalBody>\n                                    <Select\n                                        inputId=\"selectService\"\n                                        type=\"select\"\n                                        id=\"service_id\"\n                                        value={selectedService}\n                                        onChange={(ev) => this.handleChangeSelectService(ev, \"service_id\")}\n                                        required\n                                        placeholder=\"Chọn dịch vụ\"\n                                        options={serviceTestOptions}\n                                    />\n                                    {/* table neu show-table = true => hien thi  */}\n                                    {selectedService && <Table isOpen={showTable}>\n                                        <thead>\n                                            <tr>\n                                                <th>STT</th>\n                                                <th>Tên dịch vụ</th>\n                                                <th>Giá dịch vụ</th>\n                                                <th>Xóa dịch vụ</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody className=\"bodyTable\">\n                                            {\n                                                selectedTestService.map((item, index) => {\n                                                    return <tr key={item.id}>\n                                                        <th scope=\"row\">{index + 1}</th>\n                                                        <td>{item.name}</td>\n                                                        <td>\n                                                            <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={item.price} />\n                                                        </td>\n                                                        <td>\n                                                            <Button className=\"btn-del\" onClick={() => this.deleteRow(index, \"selectedTestService\")}>X</Button>\n                                                        </td>\n                                                    </tr>\n                                                })\n                                            }\n                                        </tbody>\n                                    </Table>}\n                                </ModalBody>\n                                <ModalFooter>\n                                    <p className=\"totalAll\">Tổng số tiền: <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={price} /></p>\n                                    <Button onClick={() => this.onCloseForm()}>Hoàn thành</Button>\n                                    <Button\n                                        className=\"btn-del\"\n                                        onClick={() => {\n                                            this.onClearForm()\n                                        }}\n                                    >Xóa</Button>\n                                    <Button onClick={() => this.printService(selectedTestService, this.state.titleExam, this.state.locExam)}>In phiếu</Button>\n                                </ModalFooter>\n                            </Modal>\n                            <Modal isOpen={showServiceOther} >\n                                <ModalHeader>\n                                    <h3> Chọn  dịch vụ Cấp cứu</h3>\n                                </ModalHeader>\n                                <ModalBody>\n                                    <Select\n                                        inputId=\"selectService\"\n                                        type=\"select\"\n                                        id=\"service_id\"\n                                        value={selectedService}\n                                        onChange={(ev) => this.handleChangeSelectService(ev, \"service_id\")}\n                                        required\n                                        placeholder=\"Chọn dịch vụ\"\n                                        options={serviceOtherOptions}\n                                    />\n                                    {/* table neu show-table = true => hien thi  */}\n                                    {selectedService && <Table isOpen={showTable}>\n                                        <thead>\n                                            <tr>\n                                                <th>STT</th>\n                                                <th>Tên dịch vụ</th>\n                                                <th>Giá dịch vụ</th>\n                                                <th>Xóa dịch vụ</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody className=\"bodyTable\">\n                                            {selectedOtherService.map((item, index) => {\n                                                return <tr key={item.id}>\n                                                    <th scope=\"row\">{index + 1}</th>\n                                                    <td>{item.name}</td>\n                                                    <td>\n                                                        <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={item.price} />\n                                                    </td>\n                                                    <td>\n                                                        <Button className=\"btn-del\" onClick={() => this.deleteRow(index, \"selectedOtherService\")}>X</Button>\n                                                    </td>\n                                                </tr>\n                                            })}\n                                        </tbody>\n                                    </Table>}\n                                </ModalBody>\n                                <ModalFooter>\n                                    <p className=\"totalAll\">Tổng số tiền: <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={priceOther} /></p>\n                                    <Button onClick={() => this.onCloseFormOther()}>Hoàn thành</Button>\n                                    <Button\n                                        className=\"btn-del\"\n                                        onClick={() => {\n                                            this.onClearFormOther()\n                                        }}\n                                    >Xóa</Button>\n                                    <Button onClick={() => this.printService(selectedOtherService, this.state.titleOther, this.state.locOther)}>In phiếu</Button>\n                                </ModalFooter>\n                            </Modal>\n                            <Modal isOpen={showServiceXRay} >\n                                <ModalHeader>\n                                    <h3> Chọn  dịch vụ x-quang</h3>\n                                </ModalHeader>\n                                <ModalBody>\n                                    <Select\n                                        inputId=\"selectService\"\n                                        type=\"select\"\n                                        id=\"service_id\"\n                                        value={selectedService}\n                                        onChange={(ev) => this.handleChangeSelectService(ev, \"service_id\")}\n                                        required\n                                        placeholder=\"Chọn dịch vụ\"\n                                        options={serviceXRayOptions}\n                                    />\n                                    {/* table neu show-table = true => hien thi  */}\n                                    {selectedService && <Table isOpen={showTable}>\n                                        <thead>\n                                            <tr>\n                                                <th>STT</th>\n                                                <th>Tên dịch vụ</th>\n                                                <th>Giá dịch vụ</th>\n                                                <th>Xóa dịch vụ</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody className=\"bodyTable\">\n                                            {selectedXRayService.map((item, index) => {\n                                                return <tr key={item.id}>\n                                                    <th scope=\"row\">{index + 1}</th>\n                                                    <td>{item.name}</td>\n                                                    <td>\n                                                        <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={item.price} />\n                                                    </td>\n                                                    <td>\n                                                        <Button className=\"btn-del\" onClick={() => this.deleteRow(index, \"selectedXRayService\")}>X</Button>\n                                                    </td>\n                                                </tr>\n                                            })}\n                                        </tbody>\n                                    </Table>}\n                                </ModalBody>\n                                <ModalFooter>\n                                    <p className=\"totalAll\">Tổng số tiền: <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={priceXray} /></p>\n                                    <Button onClick={() => this.onCloseFormXray()}>Hoàn thành</Button>\n                                    <Button\n                                        className=\"btn-del\"\n                                        onClick={() => {\n                                            this.onClearFormXRay()\n                                        }}\n                                    >Xóa</Button>\n                                    <Button onClick={() => this.printService(selectedXRayService, this.state.titleXray, this.state.locXray)}>In phiếu</Button>\n                                </ModalFooter>\n                            </Modal>\n                            <Modal isOpen={showServiceUltrasound} >\n                                <ModalHeader>\n                                    <h3> Chọn dịch vụ siêu âm</h3>\n                                </ModalHeader>\n                                <ModalBody>\n                                    <Select\n                                        inputId=\"selectService\"\n                                        type=\"select\"\n                                        id=\"service_id\"\n                                        value={selectedService}\n                                        onChange={(ev) => this.handleChangeSelectService(ev, \"service_id\")}\n                                        required\n                                        placeholder=\"Chọn dịch vụ\"\n                                        options={serviceUltrasoundOptions}\n                                    />\n                                    {/* table neu show-table = true => hien thi  */}\n                                    {selectedService && <Table isOpen={showTable}>\n                                        <thead>\n                                            <tr>\n                                                <th>STT</th>\n                                                <th>Tên dịch vụ</th>\n                                                <th>Giá dịch vụ</th>\n                                                <th>Xóa dịch vụ</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody className=\"bodyTable\">\n                                            {selectedUltrasoundService.map((item, index) => {\n                                                return <tr key={item.id}>\n                                                    <th scope=\"row\">{index + 1}</th>\n                                                    <td>{item.name}</td>\n                                                    <td>\n                                                        <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={item.price} />\n                                                    </td>\n                                                    <td>\n                                                        <Button className=\"btn-del\" onClick={() => this.deleteRow(index, \"selectedUltrasoundService\")}>X</Button>\n                                                    </td>\n                                                </tr>\n                                            })}\n                                        </tbody>\n                                    </Table>}\n                                </ModalBody>\n                                <ModalFooter>\n                                    <p className=\"totalAll\">Tổng số tiền: <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={priceSADV} /></p>\n                                    <Button onClick={() => this.onCloseFormUltrasound()}>Hoàn thành</Button>\n                                    <Button\n                                        className=\"btn-del\"\n                                        onClick={() => {\n                                            this.onClearFormUltrasound()\n                                        }}\n                                    >Xóa</Button>\n                                    <Button onClick={() => this.printService(selectedUltrasoundService, this.state.titleUltra, this.state.locUtral)}>In phiếu</Button>\n                                </ModalFooter>\n                            </Modal>\n                            <Modal isOpen={showServiceEnt} >\n                                <ModalHeader>\n                                    <h3> Chọn  dịch vụ Nội soi </h3>\n                                </ModalHeader>\n                                <ModalBody>\n                                    <Select\n                                        inputId=\"selectService\"\n                                        type=\"select\"\n                                        id=\"service_id\"\n                                        value={selectedService}\n                                        onChange={(ev) => this.handleChangeSelectService(ev, \"service_id\")}\n                                        required\n                                        placeholder=\"Chọn dịch vụ\"\n                                        options={serviceEntOptions}\n                                    />\n                                    {/* table neu show-table = true => hien thi  */}\n                                    {selectedService && <Table isOpen={showTable}>\n                                        <thead>\n                                            <tr>\n                                                <th>STT</th>\n                                                <th>Tên dịch vụ</th>\n                                                <th>Giá dịch vụ</th>\n                                                <th>Xóa dịch vụ</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody className=\"bodyTable\">\n                                            {selectedEntService && selectedEntService.map((item, index) => {\n                                                return <tr key={item.id}>\n                                                    <th scope=\"row\">{index + 1}</th>\n                                                    <td>{item.name}</td>\n                                                    <td>\n                                                        <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={item.price} />\n                                                    </td>\n                                                    <td>\n                                                        <Button className=\"btn-del\" onClick={() => this.deleteRow(index, \"selectedEntService\")}>X</Button>\n                                                    </td>\n                                                </tr>\n                                            })}\n                                        </tbody>\n                                    </Table>}\n                                </ModalBody>\n                                <ModalFooter>\n                                    <p className=\"totalAll\">Tổng số tiền: <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={priceEnt} /></p>\n                                    <Button onClick={() => this.onCloseFormEnt()}>Hoàn thành</Button>\n                                    <Button\n                                        className=\"btn-del\"\n                                        onClick={() => {\n                                            this.onClearFormEnt()\n                                        }}\n                                    >Xóa</Button>\n                                    <Button onClick={() => this.printService(selectedEntService, this.state.titleEnt, this.state.locENT)}>In phiếu</Button>\n                                </ModalFooter>\n                            </Modal>\n                            <PrintServiceFrom assignedServices={this.state.arrayServicePrint}\n                                titleService={this.state.titlePrint} locPrint={this.state.locationPrint}></PrintServiceFrom>\n                        </FormGroup>\n                    </Col>\n                    <Col sm={4}>\n                        <FormGroup>\n                            <Label for=\"policy_id\" className=\"title-selectService\">\n                                Đối tượng dịch vụ <Asterisk />\n                            </Label>\n                            <Input\n                                className=\"input-serivce\"\n                                onKeyDown={(e) => Util.onKeyDown(e)}\n                                data-index=\"11\"\n                                type=\"select\"\n                                id=\"policy_id\"\n                                value={policy_id.value}\n                                onChange={(ev) => _setValue(ev, \"policy_id\")}\n                                required\n                            >\n                                {policyPriceList.map((item) => (\n                                    <option key={item.id} value={item.id} hidden={item.code == POLICY_CODE.KL3D || item.code == POLICY_CODE.CBNV}>\n                                        {item.name}\n                                    </option>\n                                ))}\n                            </Input>\n\n                            {dirty && (\n                                <span className=\"text-danger\">{policy_id.err}</span>\n                            )}\n                        </FormGroup>\n                    </Col>\n\n                    <Col sm={4}>\n                        <FormGroup>\n                            <Label for=\"location_id\" className=\"title-selectService\">\n                                Phòng khám <Asterisk />\n                            </Label>\n                            <Input\n                                className=\"input-serivce\"\n                                onKeyDown={(e) => Util.onKeyDown(e)}\n                                data-index=\"12\"\n                                type=\"select\"\n                                id=\"location_id\"\n                                value={location_id.value}\n                                onChange={(ev) => _setValue(ev, \"location_id\")}\n                                required\n                            >\n                                <option value=\"\">\n                                    Chọn phòng khám\n                                </option>\n                                {clinic.map((item) => {\n                                    return <option key={item.id} value={item.id}>\n                                        {`${item.name} - Số người đang chờ: ${item.customerWait}`}\n                                    </option>\n                                })}\n                            </Input>\n                            {dirty && (\n                                <span className=\"text-danger\">{location_id.err}</span>\n                            )}\n                        </FormGroup>\n                    </Col>\n\n                </Row>\n                {service_id.value && policy_id.value ? (\n                    <div>\n                        <span className=\"mr-3\">Giá gốc:{numberWithCommas(this.getServicePrice().basicPrice)} VNĐ</span><br></br>\n                        <span className=\"mr-3\">Giá khuyến mãi phòng khám:{numberWithCommas(this.getServicePrice().PriceUpdate)} VNĐ<br></br></span>\n                        <span className=\"mr-3\">Giá khuyến mãi chính sách dịch vụ: {numberWithCommas(this.getServicePrice().discountPrice)} VNĐ</span>\n                    </div>\n                ) : (\n                    <div>\n\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\n","import React from \"react\";\nimport { FormParent, ModalNoti } from \"../../Shared\";\nimport { ONE_DAY, SERVICE_TYPE } from \"../../../../Constances/const\"\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, Col, Row, Spinner } from \"reactstrap\";\nimport AccountingForm from '../Accounting/AccountingForm/AccountingForm'\nimport PricePolicyService from \"../../../Service/Shared/PricePolicyService\";\nimport ReceptionService from \"../../Shared/ReceptionService\";\nimport CustomerService from \"../../../Customer/Shared/CustomerService\";\nimport ServiceService from \"../../../Service/Shared/ServiceService\"\nimport CustomerForm from \"../../../../Shared/Components/CustomerForm/CustomerForm\";\nimport ContactForm from \"./ContactForm\";\nimport { withRouter } from \"react-router\";\nimport SearchForm from \"./SearchForm\";\nimport { convertToNormDate, convertToStrDate } from \"../../Shared/Util\";\nimport ModalFilterCmCode from './ModalFilter/ModalFilterCmCode'\nimport ModalFilter from './ModalFilter/ModalFilter'\nimport ServiceForm from './ServiceForm/ServiceForm'\nimport MedicalHistoryTable from \"../MedicalHistory/MedicalHistoryTable\";\nimport { DATE } from \"../../../../Constances/const\"\nimport { ShareService } from \"../../../../Shared/index\";\n\nclass ReceptionForm extends FormParent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTestService: [],\n      selectedOtherService: [],\n      selectedXRayService: [],\n      selectedUltrasoundService: [],\n      selectedEntService: [],\n      policy: {},\n      billID: '',\n      jobId: '',\n      policyPriceList: [],\n      serviceList: [],\n      notiMessage: \"\",\n      form: this._getInitFormData({\n        location_id: \"\",\n        service_id: \"\",\n        policy_id: \"\",\n        cm_full_name: \"\",\n        cm_gender: \"male\",\n        cm_birthday: \"\",\n        cm_code: DATE(\"now\"),\n        contact_full_name: \"\",\n        contact_phone_number: \"\",\n        contact_address: \"\",\n        contact_email: \"\",\n        contact_city: \"\",\n        contact_district: \"\",\n        contact_ward: \"\",\n        orderStatus: '',\n        comboName: \"\"\n      }),\n      customerCode: \"\",\n      customerId: \"\",\n      contactId: \"\",\n      jobHistory: [],\n      medicalHistory: [],\n      reExamination: false,\n      officialsExam: false,\n      submitLoading: false,\n      findLoading: false,\n      show: false,\n      showHistory: false,\n      fillAddress: false,\n      onPrintShortKey: false,\n    };\n  }\n\n  setShowHistory = (showHistory) => {\n    this.setState({ showHistory })\n  }\n\n  setShow = (show) => {\n    this.setState({ show });\n  }\n  setLocationId = (location_id) => {\n    let form = this.state.form\n    form.location_id.value = location_id\n    form.location_id.err = ''\n    this.setState({ form: form })\n  }\n  setPolicyId = (policyId) => {\n    let form = this.state.form\n    form.policy_id.value = policyId\n    form.policy_id.err = ''\n    this.setState({ form: form });\n  }\n  setCustomerCode = (customerCode) => {\n    let form = this.state.form\n    form.cm_code.value = customerCode\n    form.cm_code.err = ''\n    this.setState({ form: form })\n  }\n\n  setNotiMessage = (notiMessage) => {\n    this.setState({ notiMessage });\n  };\n\n  setFindLoading = (findLoading) => {\n    this.setState({ findLoading });\n  };\n\n  setSubmitLoading = (submitLoading) => {\n    this.setState({ submitLoading });\n  };\n  setOfficialsExam = (officialsExam) => {\n    this.setState({ officialsExam })\n  }\n  setReExamination(reExamination) {\n    this.setState({ reExamination });\n  }\n\n  setCustomerId = (customerId) => {\n    this.setState({ customerId });\n  };\n\n\n  setContactId = (contactId) => {\n    this.setState({ contactId });\n  };\n\n  setMedicalHistory = (medicalHistory) => {\n    this.setState({ medicalHistory })\n  }\n  setJobHistory = (jobHistory) => {\n    this.setState({ jobHistory })\n  }\n\n  componentDidMount() {\n    PricePolicyService.getPricePolicyList().then((res) => {\n      this.setState({ policyPriceList: res.data });\n    })\n      .catch((err) => { });\n    ServiceService.getServiceList().then((res) => {\n      this.setState({ serviceList: res.data })\n    })\n  }\n  setComboNameForm = (ev) => {\n    const form = this.state.form\n    let setComboName = form\n    setComboName.comboName.value = ev.value\n    setComboName.comboName.err = ''\n    this.setState(setComboName)\n  }\n\n  setValueForm = (ev) => {\n    const form = this.state.form\n    let setForm = form;\n    setForm.service_id.value = ev.value\n    setForm.service_id.err = ''\n    this.setState(setForm);\n  }\n\n  handleResetForm = () => {\n    this._fillForm({\n      location_id: \"\",\n      service_id: \"\",\n      policy_id: \"\",\n      cm_full_name: \"\",\n      cm_gender: \"male\",\n      cm_birthday: \"\",\n      cm_code: DATE(\"now\"),\n      contact_full_name: \"\",\n      contact_phone_number: \"\",\n      contact_address: \"\",\n      contact_email: \"\",\n      contact_city: \"\",\n      contact_district: \"\",\n      contact_ward: \"\",\n      orderStatus: \"\",\n      comboName: ''\n    });\n    this.setCustomerId(\"\");\n    this.setContactId(\"\");\n    this.setReExamination(false);\n    this.setOfficialsExam(false)\n    this.setSubmitLoading(false)\n  };\n\n  submitContact = (customer_id) => {\n    const {\n      contact_full_name,\n      contact_phone_number,\n      contact_address,\n      contact_email,\n      contact_city,\n      contact_district,\n      contact_ward,\n    } = this.state.form;\n    let cmContact = {\n      full_name: contact_full_name.value.toUpperCase(),\n      phone: contact_phone_number.value,\n      address:\n      {\n        province: contact_city.value,\n        district: contact_district.value,\n        ward: contact_ward.value,\n        street: contact_address.value\n      },\n      email: contact_email.value,\n      customer_id: customer_id,\n    };\n    if (this.state.reExamination && this.state.contactId) {\n      cmContact.id = this.state.contactId;\n      cmContact.customer_id = this.state.customerId;\n      return CustomerService.modifyCmContact(cmContact);\n    } else {\n      return CustomerService.addCmContact(cmContact);\n    }\n  };\n  goTo(url = '') {\n    url = window.location.origin + '/' + url\n    window.location.replace(url)\n  }\n  submitCustomer = () => {\n    const { cm_code, cm_full_name, cm_gender, cm_birthday } = this.state.form;\n    let customer = {\n      full_name: cm_full_name.value.toUpperCase(),\n      code: cm_code.value,\n      gender: cm_gender.value,\n      birthday: convertToNormDate(cm_birthday.value),\n    };\n    if (this.state.reExamination) {\n      customer.id = this.state.customerId;\n      return CustomerService.modifyCm(customer);\n    } else {\n      return CustomerService.addCm(customer);\n    }\n  };\n\n  updateInforCus = () => {\n    this._validateForm();\n    if (this._isFormValid()) {\n      this.submitCustomer()\n      this.submitContact()\n      this.setNotiMessage(\"Cập nhập thông tin bệnh nhân thành công\")\n    } else {\n      this.setNotiMessage(\"Vui lòng nhập đầy đủ thông tin, để cập nhập!\")\n    }\n  }\n\n  onShowHistory = () => {\n    let { customerId } = this.state;\n    if (customerId) {\n      this.handleShowHistory();\n    } else {\n      this.setNotiMessage(\"Bệnh nhân không có lịch sử để hiển thị!\")\n    }\n  }\n\n  onPrintShortKeyCode = () => {\n    this.setState({ onPrintShortKey: true })\n  }\n\n  findOrderByCode = (code) => {\n    return ReceptionService.getOrder(code)\n  }\n\n  printJob = () => {\n    this.props.history.push(`/app/reception/print/${this.state.jobId}`)\n  }\n  submitJobTest = (customer_id) => {\n    const { location_id, policy_id } = this.state.form;\n    let servicesTest = this.state.selectedTestService.map(x => {\n      return { id: x.id }\n    })\n    let job = {\n      location_id: location_id.value,\n      services: servicesTest,\n      service_policy_id: policy_id.value,\n      customer_id,\n    };\n    return ReceptionService.postJobTest(job);\n  }\n  submitJobXray = (customer_id) => {\n    const { location_id, policy_id } = this.state.form;\n    console.log(this.state.selectedXRayService, '333');\n    // let selectedServiceXray = this.state.selectedXRayService\n    let servicesXray = this.state.selectedXRayService.map(x => {\n      return { id: x.id }\n    })\n    // let servicesXray = selectedServiceXray.map(x => {\n    //   return { id: x.id }\n    // })\n    console.log(servicesXray, '5555');\n    let job = {\n      location_id: location_id.value,\n      services: servicesXray,\n      service_policy_id: policy_id.value,\n      customer_id,\n    };\n    return ReceptionService.postJobTest(job);\n  }\n  submitJobUltrasound = (customer_id) => {\n    const { location_id, policy_id } = this.state.form;\n    let servicesUltrasound = this.state.selectedUltrasoundService.map(x => {\n      return { id: x.id }\n    })\n    let job = {\n      location_id: location_id.value,\n      services: servicesUltrasound,\n      service_policy_id: policy_id.value,\n      customer_id,\n    };\n    return ReceptionService.postJobTest(job);\n  }\n  submitJobOther = (customer_id) => {\n    const { location_id, policy_id } = this.state.form;\n    let servicesOther = this.state.selectedOtherService.map(x => {\n      return { id: x.id }\n    })\n    let job = {\n      location_id: location_id.value,\n      services: servicesOther,\n      service_policy_id: policy_id.value,\n      customer_id,\n    };\n    return ReceptionService.postJobTest(job);\n  }\n\n  submitJobEnt = (customer_id) => {\n    const { location_id, policy_id } = this.state.form;\n    let servicesEnt = this.state.selectedEntService.map(x => {\n      return { id: x.id }\n    })\n    let job = {\n      location_id: location_id.value,\n      services: servicesEnt,\n      service_policy_id: policy_id.value,\n      customer_id,\n    };\n    return ReceptionService.postJobTest(job);\n  }\n  submitJob = (customer_id) => {\n    const { location_id, service_id, policy_id } = this.state.form;\n    let job = {\n      location_id: location_id.value,\n      service_id: service_id.value,\n      service_policy_id: policy_id.value,\n      customer_id,\n    };\n    return ReceptionService.postJob(job);\n  };\n\n  handlePayment = () => {\n    let { service_id, policy_id, location_id } = this.state.form\n    this._validateForm();\n    if (this._isFormValid() && service_id.value && policy_id.value && location_id.value) {\n      this.submitCustomer().then((res) => {\n        let customer_id = res.id;\n        if (this.state.reExamination) customer_id = this.state.customerId;\n        this.submitContact(customer_id).then((res) => {\n        })\n          .catch((err) => {\n            console.log(err);\n          });\n        if (this.state.selectedTestService.length > 0) {\n          this.submitJobTest(customer_id).then((res) => {\n            ReceptionService.getJobById(res.data.id).then(res => {\n              let receiptData = res.data\n              this.setState({ billID: receiptData.steps?.[0].code })\n              this.setState({ jobId: receiptData.id })\n              this.setState({ show: true })\n            })\n\n          })\n            .catch((err) => {\n              console.log(err);\n              this.setNotiMessage(\"Có lỗi xảy ra3!\");\n            });\n        } else if (this.state.selectedUltrasoundService.length > 0) {\n          this.submitJobUltrasound(customer_id).then((res) => {\n            ReceptionService.getJobById(res.data.id).then(res => {\n              let receiptData = res.data\n              this.setState({ billID: receiptData.steps?.[0].code })\n              this.setState({ jobId: receiptData.id })\n              this.setState({ show: true })\n            })\n\n          })\n            .catch((err) => {\n              console.log(err);\n              this.setNotiMessage(\"Có lỗi xảy ra3!\");\n            });\n        } else if (this.state.selectedOtherService.length > 0) {\n          this.submitJobOther(customer_id).then((res) => {\n            ReceptionService.getJobById(res.data.id).then(res => {\n              let receiptData = res.data\n              this.setState({ billID: receiptData.steps?.[0].code })\n              this.setState({ jobId: receiptData.id })\n              this.setState({ show: true })\n            })\n\n          })\n            .catch((err) => {\n              console.log(err);\n              this.setNotiMessage(\"Có lỗi xảy ra3!\");\n            });\n        } else if (this.state.selectedEntService.length > 0) {\n          this.submitJobEnt(customer_id).then((res) => {\n            ReceptionService.getJobById(res.data.id).then(res => {\n              let receiptData = res.data\n              this.setState({ billID: receiptData.steps?.[0].code })\n              this.setState({ jobId: receiptData.id })\n              this.setState({ show: true })\n            })\n\n          })\n            .catch((err) => {\n              console.log(err);\n              this.setNotiMessage(\"Có lỗi xảy ra3!\");\n            });\n        } else if (this.state.selectedXRayService.length > 0) {\n          this.submitJobXray(customer_id).then((res) => {\n            ReceptionService.getJobById(res.data.id).then(res => {\n              let receiptData = res.data\n              this.setState({ billID: receiptData.steps?.[0].code })\n              this.setState({ jobId: receiptData.id })\n              this.setState({ show: true })\n            })\n\n          })\n            .catch((err) => {\n              console.log(err);\n              this.setNotiMessage(\"Có lỗi xảy ra3!\");\n            });\n        } else {\n          this.submitJob(customer_id).then((res) => {\n            ReceptionService.getJobById(res.data.id).then(res => {\n              let receiptData = res.data\n              this.setState({ billID: receiptData.steps?.[0].code })\n              this.setState({ jobId: receiptData.id })\n              this.setState({ show: true })\n            })\n          })\n            .catch((err) => {\n              console.log(err);\n              this.setNotiMessage(\"Có lỗi xảy ra3!\");\n            });\n        }\n      })\n        .catch((err) => {\n          console.log(err);\n          this.setNotiMessage(\"Có lỗi xảy ra4!\");\n        });\n    } else {\n      this.setNotiMessage(\"Dữ liệu nhập sai hoặc không đầy đủ, vui lòng kiểm tra lại!\")\n    }\n  }\n  submitForm = () => {\n    let { service_id, policy_id, location_id } = this.state.form\n    this._validateForm();\n    if (this._isFormValid() && service_id.value && policy_id.value && location_id.value) {\n      this.setSubmitLoading(true);\n      this.printJob(this.state.jobId)\n    } else {\n      this.setNotiMessage(\"Dữ liệu nhập sai hoặc không đầy đủ, vui lòng kiểm tra lại!\")\n    }\n  };\n\n  findCustomerByCode = (code) => {\n    return ReceptionService.getCmbyCode(code);\n  };\n\n\n  //từ danh sách lịch sử khám, kiểm tra xem có phải khám lại trong vòng 3 ngày\n  isExamWithin3D = async (medicalHistory, service_id) => {\n    let wasExamination = medicalHistory.filter((item) => {\n      const diffTime = (new Date()).getTime() - item.ctime;\n      if (diffTime < 3 * ONE_DAY && item.steps[0].order.items[0].ref_value.id == service_id)\n        return diffTime < 3 * ONE_DAY && item.steps[0].order.items[0].ref_value.id ==\n          service_id && item.steps[0].order.items[0].ref_value.type == SERVICE_TYPE.EXAM\n    })\n    return (wasExamination.length > 0);\n  }\n\n\n\n  handleShowHistory = () => { this.setShowHistory(true) }\n  handleCloseShowHistory = () => { this.setShowHistory(false) }\n  handleShow = () => { this.setShow(true) };\n  handleClose = () => { this.setShow(false) }\n\n  handleShowHistoryExam = (code) => {\n    this.findCustomerByCode(code).then(async (res) => {\n      let customer = res.data;\n      let medicalHistory = (await ReceptionService.getExamHistory(customer.id)).data\n      this.setMedicalHistory(medicalHistory)\n      let jobHistory = (await ReceptionService.getJobByCustomerId(customer.id)).data\n      this.setState({ items: jobHistory.reverse() })\n      this.setCustomerId(customer.id);\n      this.setShowHistory(true)\n\n\n    }).catch((err) => {\n      console.log(err);\n      this.setNotiMessage(\"Bệnh nhân chưa từng đến khám\");\n      this.setFindLoading(false);\n    });\n  }\n  handleReExam = (code) => {\n    this.setFindLoading(true);\n    this.findCustomerByCode(code).then(async (res) => {\n      let customer = res.data;\n      let contact = {};\n      if (customer.contacts.length) contact = customer.contacts[0];\n      // get and set medical history\n      let medicalHistory = (await ReceptionService.getExamHistory(customer.id)).data\n      this.setMedicalHistory(medicalHistory)\n\n      let jobHistory = (await ReceptionService.getJobByCustomerId(customer.id)).data\n      this.setState({ items: jobHistory.slice(-10).reverse() })\n      //khám lại 3 ngày, policy_id sẽ tự động là chính sách khám lại 3 ngày \n      let policy_id = \"\"\n      let addressObj = contact.address\n      if (customer.code.startsWith('CB') == false) {\n        this._fillForm({\n          location_id: \"\",\n          service_id: \"\",\n          policy_id: policy_id,\n          policy_code: \"\",\n          cm_full_name: customer.full_name,\n          cm_gender: customer.gender,\n          cm_birthday: convertToStrDate(customer.birthday),\n          cm_code: customer.code,\n          contact_full_name: contact.full_name,\n          contact_phone_number: contact.phone,\n          contact_address: addressObj.street,\n          contact_email: contact.email,\n          contact_city: addressObj.province,\n          contact_district: addressObj.district,\n          contact_ward: addressObj.ward,\n          comboName: ''\n        });\n        //  this.setShowHistory(true)\n        this.setState({ fillAddress: true })\n        this.setReExamination(true);\n        this.setOfficialsExam(false)\n        this.setCustomerId(customer.id);\n        this.setContactId(contact.id);\n        this.setFindLoading(false);\n      } else if (customer.code.startsWith('CB') == true) {\n        this._fillForm({\n          location_id: \"\",\n          service_id: \"\",\n          policy_id: policy_id,\n          policy_code: \"\",\n          cm_full_name: customer.full_name,\n          cm_gender: customer.gender,\n          cm_birthday: convertToStrDate(customer.birthday),\n          cm_code: customer.code,\n          contact_full_name: contact.full_name,\n          contact_phone_number: contact.phone,\n          contact_address: addressObj.street,\n          contact_email: contact.email,\n          contact_city: addressObj.province,\n          contact_district: addressObj.district,\n          contact_ward: addressObj.ward,\n          comboName: ''\n        });\n        //  this.setShowHistory(true)\n        this.setState({ fillAddress: true })\n        this.setReExamination(true);\n        this.setOfficialsExam(true)\n        this.setCustomerId(customer.id);\n        this.setContactId(contact.id);\n        this.setFindLoading(false);\n      }\n\n    })\n      .catch((err) => {\n        console.log(err);\n        this.setNotiMessage(\"Mã bệnh nhân đã tồn tại!\");\n        this.setFindLoading(false);\n      });\n  };\n  staShortKey = () => {\n    this.setState({ onPrintShortKey: false })\n  }\n\n  shortKey = (e) => {\n    if (e.ctrlKey) {\n      e.preventDefault();\n      switch (e.key) {\n        case \"d\":\n          this.handleResetForm();\n          break;\n        case \"s\":\n          this.handlePayment();\n          break;\n        case \"u\":\n          this.updateInforCus();\n          break;\n        case \"h\":\n          this.onShowHistory();\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  render() {\n    let { reExamination, notiMessage, findLoading, officialsExam } = this.state;\n    let { cm_full_name, cm_birthday, cm_code, cm_phone_number, contact_address } = this.state.form\n    let { show, showHistory, customerId } = this.state\n    return (\n      <div sm={12} className=\"receptionFromContainer\" onKeyDown={(e) => this.shortKey(e)} tabIndex=\"0\">\n        <ModalNoti\n          message={notiMessage}\n          done={() => this.setNotiMessage(\"\")}\n        />\n        <ModalFilterCmCode\n          cm_code={cm_code}\n          cm_full_name={cm_full_name}\n          cm_birthday={cm_birthday}\n          handleReExam={this.handleReExam}\n        />\n        <ModalFilter\n          contact_address={contact_address}\n          cm_phoneNumber={cm_phone_number}\n          cm_code={cm_code}\n          cm_full_name={cm_full_name}\n          cm_birthday={cm_birthday}\n          handleReExam={this.handleReExam}\n        />\n        <div className=\"customCard mb-4 mt-4 search-form\">\n          <SearchForm handleReExam={this.handleReExam}></SearchForm>\n        </div>\n        <Form>\n          <Row className=\"info-Form\">\n            <Col sm={5} className=\"customerForm customCard\" >\n              <CustomerForm\n                data={this.state.form}\n                officialsExam={officialsExam}\n                reExamination={reExamination}\n                _setValue={this._setValue}\n                findLoading={findLoading}\n                printShortKey={this.state.onPrintShortKey}\n                staShortKey={this.staShortKey}\n                mode=\"input\"\n              />\n            </Col>\n            <Col sm={5} className=\"contactForm customCard\">\n              <ContactForm\n                officialsExam={officialsExam}\n                fillAddress={this.state.fillAddress}\n                form={this.state.form}\n                _setValue={this._setValue}\n              />\n            </Col>\n          </Row>\n          <div className=\"customCard pb-0 mt-4 form-service\" >\n            <ServiceForm\n              officialsExam={this.state.officialsExam}\n              setComboNameForm={this.setComboNameForm}\n              setValueForm={this.setValueForm}\n              setPolicyCode={this.setPolicyCode}\n              setLocationId={this.setLocationId}\n              setPolicyId={this.setPolicyId}\n              isExamWithin3D={this.isExamWithin3D}\n              medicalHistory={this.state.medicalHistory}\n              selectedTestService={this.state.selectedTestService}\n              selectedOtherService={this.state.selectedOtherService}\n              selectedXRayService={this.state.selectedXRayService}\n              selectedUltrasoundService={this.state.selectedUltrasoundService}\n              selectedEntService={this.state.selectedEntService}\n              form={this.state.form}\n              _setValue={this._setValue}\n            />\n          </div>\n          <div className=\"  mb-5 mt-4\">\n            <Col className=\"medicalHistoryForm justify-content-end\">\n              <Button className=\"ml-5\"\n                hidden={!this.state.customerId}\n                onClick={this.onShowHistory}\n              >Lịch sử Khám</Button>\n              <Button className=\"ml-5\"\n                hidden={!this.state.customerId}\n                onClick={() => this.updateInforCus()}\n              >Cập nhật</Button>\n              <Button className=\"ml-5 btn-del\"\n                onClick={() => this.handleResetForm()}\n              >Xóa</Button>\n              <Button className=\"ml-5\"\n                data-index=\"13\"\n                onClick={this.handlePayment}\n              >Lưu</Button>\n            </Col>\n            <Modal isOpen={show} >\n              <ModalHeader>\n                Thu Ngân\n              </ModalHeader>\n              <ModalBody>\n                <AccountingForm\n                  submitForm={this.submitForm}\n                  handleClose={this.handleClose}\n                  billID={this.state.billID}\n                  comboName={this.state.form.comboName}\n                  mode=\"reception\"\n                ></AccountingForm>\n              </ModalBody>\n              <ModalFooter><Button onClick={this.handleClose}>Close</Button></ModalFooter>\n            </Modal>\n\n            <Modal isOpen={showHistory} >\n              <ModalHeader>\n                Lịch sử Khám\n              </ModalHeader>\n              <ModalBody>\n                <MedicalHistoryTable\n                  items={this.state.items}\n                ></MedicalHistoryTable>\n              </ModalBody>\n              <ModalFooter><Button color=\"danger\" onClick={this.handleCloseShowHistory}>Close</Button></ModalFooter>\n            </Modal>\n          </div>\n        </Form>\n      </div>\n\n    );\n  }\n}\n\nexport default withRouter(ReceptionForm);","import React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Col, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { ModalNoti } from '../../../Accounting/Shared';\nimport { FormParent } from '../../Shared';\nimport ReceptionService from \"../../../Reception/Shared/ReceptionService\";\nimport MedicalHistoryTable from './MedicalHistoryTable';\nimport Select from 'react-select'\n\n\nclass MedicalHistoryForm extends FormParent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedType: null,\n      isPayment: true,\n      notiMessage: '',\n      form: this._getInitFormData({\n        customerName: '',\n        nameService: '',\n        customerGender: '',\n        time: '',\n        service: [{ name: \"Khám bệnh\", method: \"exam\" }, { name: \"Xét nghiệm\", method: \"test\" }],\n      }),\n      isCustomerFound: false,\n    }\n  }\n  setIsOrderFound = (isOrderFound) => {\n    this.setState({ isOrderFound })\n  }\n  setNotiMessage = (notiMessage) => {\n    this.setState({ notiMessage })\n  }\n  resetForm = () => {\n    this._fillForm({\n      customerName: '',\n      nameService: '',\n      customerGender: '',\n      time: '',\n      service: [{ name: \"Khám bệnh\", method: \"exam\" }, { name: \"Xét nghiệm\", method: \"test\" }],\n    })\n    this.setIsCustomerFound(false)\n  }\n  findMedicalHistory = (customerId,type) => {\n    return ReceptionService.getExamHistory(customerId,type)\n  }\n \n  handleChangeSelectType = (selectedType) => {\n\n    this.setState({ selectedType })\n  }\n  \n  handleSearch = (customerId) => {\n    this.findMedicalHistory(customerId).then((res=>{\n      let medicalHistory = res.data\n      this.setState({items:medicalHistory.reverse()})\n          this.setIsOrderFound(true)\n          \n    })).catch(err => {\n      console.log(err)\n      this.setNotiMessage('Không tìm thấy hóa đơn!')\n    })\n    // if(selectedType==null){\n    //   this.findMedicalHistory(customerId).then((res)=>{\n    //     let medicalHistory = res.data\n    //     this.setState({items:medicalHistory.reverse()})\n    //     this.setIsOrderFound(true)\n    //     .catch(err => {\n    //         console.log(err)\n    //         this.setNotiMessage('Không tìm thấy hóa đơn!')\n    //       })\n    //   })\n    // }else{\n    //   this.findMedicalHistory(customerId,selectedType.value).then((res) => {\n    //     let medicalHistory = res.data\n        \n    //     console.log(res.data);\n    //     this.setState({ items: medicalHistory.steps.reverse() })\n    //     this.setIsOrderFound(true)\n    //   })\n    //   .catch(err => {\n    //     console.log(err)\n    //     this.setNotiMessage('Không tìm thấy hóa đơn!')\n    //   })\n    // }\n   \n  }\n  componentDidMount() {\n  }\n  render() {\n    const { notiMessage, selectedType } = this.state\n    const typeOptions = [\n      { value: 'exam', label: 'Khám bệnh' },\n      { value: 'test', label: 'Xét nghiệm' }\n    ]\n     const { customerId} = this.props;\n     if (this.props.customerId && customerId.value ==  '') this.handleSearch(this.props.customerId);\n    return (\n      <div className=\"container\">\n        <ModalNoti message={notiMessage} done={() => this.setNotiMessage(\"\")} />\n        <Col sm={12}>\n          <Form>\n            <FormGroup row>\n              <Label sm={2}>Mã bệnh nhân</Label>\n              <Col sm={6}>\n                <InputGroup>\n                  <Input name=\"customerId\"\n                    className=\"inputcmId\"\n                    value={customerId}\n                    onChange={(ev) => { this._setValue(ev, 'customerId') }}\n                    type=\"text\"\n                    id=\"customerId\"\n                    placeholder=\"Nhập mã bệnh nhân\"\n                    required\n                  />\n                  <InputGroupAddon addonType=\"append\">\n                    \n                    <Button color=\"primary\" onClick={() => { this.handleSearch()}}>Tìm</Button>\n\n                  </InputGroupAddon>\n                </InputGroup>\n              </Col>\n              <FormGroup row>\n                <Col sm={2}>\n                  <Label>Lọc theo :</Label>\n                </Col>\n                <Col sm={4}>\n                  <Select\n                    value={selectedType}\n                    options={typeOptions}\n                    placeholder=\"chọn dịch vụ\"\n                    onChange={this.handleChangeSelectType}\n                    // onClick={this.handleSearchByType}\n                  />\n                </Col>\n              </FormGroup>\n            </FormGroup>\n            <Col sm={11}>\n              <MedicalHistoryTable items={this.state.items}></MedicalHistoryTable>\n            </Col>\n          </Form>\n        </Col>\n      </div>\n    );\n  }\n}\n\n\n// const Asterisk = () => {\n//   return (\n//     <>\n//       <span className=\"text-danger\">*</span>\n//     </>\n//   )\n// }\n\nexport default MedicalHistoryForm;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ReceptionForm from './Components/ReceptionForm/ReceptionForm'\nimport ReceiptPrintingPreview from './Components/ReceiptPrintingPreview/ReceiptPrintingPreview'\nimport Accounting from './Components/Accounting/AccountingForm/AccountingForm'\nimport MedicalHistory from './Components/MedicalHistory/MedicalHistoryForm'\nclass Service extends Component {\n\n    render() {\n        const { path } = this.props.match;\n        return (\n            <div>\n                <Switch>\n                    <Route exact path={`${path}/history`} component={MedicalHistory} />\n                   \n                    <Route exact path={`${path}`} component={ReceptionForm} />\n                    <Route exact path={`${path}/print/:id`} component={ReceiptPrintingPreview} />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default Service","import React from 'react';\nimport { Row, Col, Table, } from 'reactstrap';\nimport { Form, ModalNoti, } from \"../../../../../Shared\";\nimport SharedService from '../../../../../Shared/Services/SharedService';\nimport { moneyToWord, getAge } from '../../../../Reception/Shared/Util';\nimport HeaderPrint from '../../../../../Shared/Components/HeaderPrint/HeaderPrint';\nclass PrintDiagnostic extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cusCode: \"\",\n        };\n    }\n    componentDidUpdate = () => {\n        let cusData = this.props.cusData;\n        if (cusData.code) {\n            SharedService.createOtccode(cusData.code, \"cusBarCodeExam\")\n        }\n    }\n    render() {\n        let doctorInfo = JSON.parse(window.sessionStorage.getItem('user'));\n        const { assignedServices, totalOrigin } = this.props;\n        let printDiag = this.props.diagnosis ? this.props.diagnosis : this.props.textDiagnosis\n        const cusData = this.props.cusData;\n        const current = new Date();\n        let nameCus = cusData ? cusData.full_name : \"\";\n        let cusBirthDay = cusData ? cusData.birthday : \"\";\n        let date = new Date(cusBirthDay)\n        let phone = cusData ? cusData.contacts ? cusData.contacts[0].phone : \"\" : \"\";\n        let address = cusData ? cusData.contacts ? cusData.contacts[0].address : {} : {};\n        const street = address.street ? `${address.street}` : '';\n        const ward = address.ward ? `  -${address.ward}` : '';\n        const district = address.district ? `-${address.district}` : '';\n        const province = address.province ? `-${address.province}` : '';\n        let total = 0;\n        let rowExam = assignedServices.map((diagnostic, index) => {\n            total += diagnostic.price\n            return (\n                <tr key={diagnostic.id} >\n                    <td className=\"p-1\">{index + 1}</td>\n                    <td className=\"p-1\">{diagnostic.label}</td>\n                    <td className=\"p-1\">{diagnostic.location.name}</td>\n                    <td className=\"p-1\">{diagnostic.price}</td>\n                </tr>\n            )\n        })\n        return (\n            <div className=\"border border-secondary font-print PrintDiagnostic receiptContainer\">\n                <div className=\"p-3 position-relative print-diag\" id=\"print-diag\" >\n                    <div className=\"examRow\">\n                        <div className=\"absolute header-from\">\n                            <Row className=\"mb-0\">\n                                <Row className=\"text-left\">\n                                    <HeaderPrint></HeaderPrint>\n                                </Row>\n                                <div className=\"absolute end\">\n                                    <canvas id=\"cusBarCodeExam\" style={{ height: \"13mm\" }}></canvas>\n                                </div>\n                            </Row>\n                        </div>\n                        <div className=\" text-center\">\n                            <b>PHIẾU YÊU CẦU XÉT NGHIỆM</b>\n                        </div>\n                        <div className=\"text-center\">\n                            <i>{current.getHours()} giờ {current.getMinutes()} phút,Ngày {current.getDate()} Tháng {current.getMonth() + 1} Năm {current.getFullYear()}</i>\n                        </div>\n                        <div className=\"infoCus\">\n                            Họ tên: <b><span className=\"text-uppercase font-weight-bold\">{cusData.full_name}</span></b>\n                            <span className=\"ml-25\">NS:{date.toLocaleString('en-GB').slice(0, 10)} {`(${getAge(date.toLocaleString('en-GB').slice(0, 10))})`} </span>\n                            <span className=\"ml-25 \">GT: {cusData.gender === \"male\" ? \" Nam\" : \" Nữ\"} </span>\n                            <span className=\"ml-25\">SĐT:  {phone}</span>\n                            <br />\n                            <span>Địa chỉ: {`${street}${ward}${district}${province}`}</span><br></br>\n                            <span className=\"d-block\"> Chẩn Đoán : <b>{printDiag}</b></span>\n                        </div>\n                        <span><b>Danh sách xét nghiệm</b></span>\n                        <Table bordered className=\"tableService\">\n                            <thead className=\"title-table headExam\">\n                                <tr>\n                                    <th className=\"indexExam\">STT</th>\n                                    <th className=\"examName\">Tên xét nghiệm</th>\n                                    <th className=\"examRoom\">Phòng</th>\n                                    <th className=\"examTotal\">Thành tiền</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {rowExam}\n                                <tr>\n                                    <td colSpan=\"3\" className=\"end p-1\">Tổng tiền</td>\n                                    <td className=\"p-1\"><b>{new Intl.NumberFormat('de-DE').format(total)}VNĐ</b></td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                        <Row className=\"mb-1\">\n                            <Col>Tổng tiền thu bằng chữ: <span className=\"font-weight-bold\"><b>{moneyToWord(total || 0)}</b></span></Col>\n                        </Row>\n                        <Row className=\"mb-1\">\n                            <Col>Ghi chú : ..................................</Col>\n                        </Row>\n\n                        <div className=\"d-flex justify-content-between footer-print px-4\">\n                            <div className=\"text-center left-footer mr-auto ml-5 \">\n                                <strong>Bác sĩ điều trị</strong><br></br>\n                                <i>(ký, ghi rõ họ tên)</i> <br></br><br></br><br></br>\n                                <b className=\"mt-5\">{doctorInfo.full_name}</b>\n                            </div>\n                            <div className=\"text-center right-footer\">\n                                <div>Bắc Ninh, Ngày {current.getDate()}, Tháng {current.getMonth() + 1}, Năm {current.getFullYear()}</div>\n                                <strong>PHÒNG XÉT NGHIỆM</strong>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\nexport default PrintDiagnostic;\n","import { Http } from \"../../../Helper/Http\";\nimport { UtilService } from \".\";\nimport { LOCALSTORAGE } from \"../../../Constances/const\";\n\nconst API_ENDPOINT = {\n  BASE: \"/job\",\n  GET_LIST_LOCATION: \"/location/list\",\n  GET_CUS_BY_LOC: \"/step/list\",\n  GET_ULTRA_BY_LOC: \"/location/service/list\",\n  GET_ULTRA_INDEX_LIST_BY_SER_ID: \"/service/service/get\",\n  UPDATE_ULTRA_RESULT: \"/step/finish\",\n  TAKE_SAMPLE: \"/step/update\",\n  GET_USER_BY_ID: \"/org/user?id=\",\n  UPLOAD_PHOTO: \"/data/photo/upload\",\n  DOWNLOAD_PHOTO: \"/data/photo/download/\"\n};\n\nclass UltrasoundService extends UtilService {\n  constructor() {\n    super();\n    if (UltrasoundService._instance) {\n      return UltrasoundService._instance;\n    }\n    UltrasoundService._instance = this;\n  }\n\n  userList = [];\n  selectedUser = -1;\n\n  get location() {\n    return JSON.parse(sessionStorage.getItem(LOCALSTORAGE.LOCATION) || '{}');\n  }\n\n  set location(data) {\n    sessionStorage.setItem(LOCALSTORAGE.LOCATION, JSON.stringify(data))\n  }\n\n  getUserById = (id) => {\n    return Http.post(API_ENDPOINT.GET_USER_BY_ID + id)\n  }\n\n  async getCustomerByLocationAndStatus(params) {\n    const url = `${API_ENDPOINT.BASE}${API_ENDPOINT.GET_CUS_BY_LOC}`;\n    return (await Http.get(url, params)).data;\n  }\n\n  async getUltraByLocation(location_id) {\n    const url = `${API_ENDPOINT.GET_ULTRA_BY_LOC}`;\n    return (await Http.get(url, location_id)).data;\n  }\n\n  async getUltraIndexListByServiceID(id) {\n    const url = `${API_ENDPOINT.GET_ULTRA_INDEX_LIST_BY_SER_ID}`;\n    return (await Http.get(url, id)).data;\n  }\n\n  async getListLocation() {\n    return (await Http.get(`${API_ENDPOINT.GET_LIST_LOCATION}`)).data;\n  }\n\n  finishUtralResult(ultraResult) {\n    return Http.post(\n      `${API_ENDPOINT.BASE}${API_ENDPOINT.UPDATE_ULTRA_RESULT}`,\n      ultraResult\n    );\n  }\n\n  takeSample = async (step) => {\n    const url = `${API_ENDPOINT.BASE}${API_ENDPOINT.TAKE_SAMPLE}`;\n    return await Http.post(url, step);\n  };\n  async uploadPhoto(data) {\n    const url = `${API_ENDPOINT.UPLOAD_PHOTO}`;\n    return (await Http.post(url, data));\n  }\n  async downloadPhoto(name) {\n    const url = `${API_ENDPOINT.DOWNLOAD_PHOTO}`\n    return (await Http.get(url + name))\n  }\n}\n\nconst instance = new UltrasoundService();\n\nexport default instance;\n","import React, { Component, Fragment } from \"react\";\nimport { ShareService } from \"../../../../Shared\";\nimport { Row, Col, Table } from \"reactstrap\";\nimport logo from '../../../../Asset/Img/logo.png';\nimport UltrasoundService from \"../../Shared/UltrasoundService\";\nimport HeaderPrint from \"../../../../Shared/Components/HeaderPrint/HeaderPrint\";\nimport { moneyToWord, getAge } from '../../../Reception/Shared/Util';\nclass TestResult extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: this.props.style,\n      photos: []\n    };\n  }\n  componentDidMount = () => {\n    let tab = this.props.tab;\n    if (tab == 2) {\n      let promise = [];\n      let urls = this.props.upload;\n      urls.map(url => {\n        promise.push(UltrasoundService.downloadPhoto(url.name))\n      })\n      Promise.all(promise).then(arr => {\n        this.setState({\n          photos: arr.map(el => el.config.url)\n        })\n      })\n    }\n\n  }\n  componentDidUpdate = (prevProps) => {\n    const jobStep = this.props.selectedJobStepRunning || {};\n    let customer = jobStep ? jobStep.order ? jobStep.order.customer : {} : {};\n    if (this.props.style !== prevProps.style) {\n      this.setState((state) => ({\n        ...state,\n        resultStyle: {\n          ...state.resultStyle,\n          display: this.props.style,\n        },\n      }));\n    }\n    if (customer.code) {\n      ShareService.createEtccode(customer.code, 'barcode');\n    }\n  };\n  render() {\n    let doctorInfo = JSON.parse(window.sessionStorage.getItem('user'));\n    const jobStep = this.props.selectedJobStepRunning || {};\n    const order = jobStep.order || {};\n    const customer = order.customer || {};\n    const current = new Date();\n    let date = new Date(customer.birthday);\n    let address = customer.contacts ? customer.contacts[0].address : {};\n    const street = address.street ? `${address.street}` : '';\n    const ward = address.ward ? `  -${address.ward}` : '';\n    const district = address.district ? `-${address.district}` : '';\n    const province = address.province ? `-${address.province}` : '';\n    let phone = customer.contacts ? customer.contacts[0].phone : \"\";\n    let ultraResult = this.props.ultraResult ? this.props.ultraResult.results ? this.props.ultraResult.results[0] : {} : {};\n    let conclusion = ultraResult ? ultraResult.conclusion : \"\";\n    let description = ultraResult ? ultraResult.description : \"\";\n    let urlFileImg = this.props.urlFileImg || {};\n    let tab = this.props.tab;\n    return (\n      <div className=\"border border-secondary font-print\" style={{ display: this.state.display }} >\n        <div className=\"printUltraResult position-relative mt-3\" id=\"printUltra\">\n          <div className=\"absolute\">\n            <Row className=\"pt-3\">\n              <Col sm=\"8\">\n                <Row className=\"text-left m-0\">\n                  <HeaderPrint></HeaderPrint>\n                </Row>\n              </Col>\n              <Col className=\"end\">\n                <canvas id=\"barcode\" style={{ height: \"13mm\" }}></canvas>\n              </Col>\n            </Row>\n          </div>\n          <h5 className=\"text-center m-0 title-card-lg\">\n            <b>KẾT QUẢ SIÊU ÂM</b>\n          </h5>\n          <div className=\"text-center\">\n            <i>{current.getHours()} giờ {current.getMinutes()} phút,Ngày {current.getDate()} Tháng {current.getMonth() + 1} Năm {current.getFullYear()}</i>\n          </div>\n          <div className=\"infoCus\">\n            Họ tên: <b><span className=\"text-uppercase font-weight-bold\">{customer.full_name}</span></b>\n            <span className=\"ml-25\">NS: {date.toLocaleString('en-GB').slice(0, 10)} {`(${getAge(date.toLocaleString('en-GB').slice(0, 10))})`}</span>\n            <span className=\"ml-25 \">GT: {customer.gender === \"male\" ? \" Nam\" : \" Nữ\"} </span>\n            <span className=\"ml-25\">SĐT:  {phone}</span>\n            <br />\n            <span>Địa chỉ: {`${street}${ward}${district}${province}`}</span><br></br>\n            <span className=\"d-block\"> Chẩn Đoán : <b>{this.props.diagnosis}</b></span>\n          </div>\n          <div className=\"text-center\">\n            <h5><b>MÔ TẢ CHI TIẾT SIÊU ÂM</b></h5>\n          </div>\n          <div className=\"conclusion\" style={{ whiteSpace: 'pre-line' }}>\n            {description} <br />\n          </div>\n          <h5 className=\"m-2\"><b align=\"left\">KẾT LUẬN:\n            {conclusion}\n          </b></h5>\n          <div className=\"d-flex justify-content-between px-4 mt-1\">\n            <div className=\"text-center resultFile mr-auto ml-5\">\n              {tab == 2 ? this.state.photos.map(photo => {\n                return (\n                  <div>\n                    <img className=\"resultFile\" src={photo} />\n                  </div>\n                )\n              }) :\n                <div className=\"d-flex justify-content-between m-0\">\n                  <div>\n                    <img className=\"resultFile\" src={urlFileImg.fileImg} /></div>\n                </div>\n              }\n            </div>\n            <div className=\"text-center mr-5\">\n              Bắc Ninh, Ngày {current.getDate()} Tháng {current.getMonth() + 1} Năm {current.getFullYear()}<br></br>\n              <strong>BÁC SĨ</strong><br></br>\n              <i>(ký, ghi rõ họ tên)</i> <br></br><br></br><br></br><br></br>\n              <b className=\"mt-5\">{doctorInfo.full_name}</b>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TestResult;\n","import React, { Component, Fragment } from \"react\";\nimport { ShareService } from \"../../../../Shared\";\nimport { Row, Col, Table } from \"reactstrap\";\nimport logo from '../../../../Asset/Img/logo.png';\nimport HeaderPrint from \"../../../../Shared/Components/HeaderPrint/HeaderPrint\";\nimport { moneyToWord,getAge } from '../../../Reception/Shared/Util';\nclass XrayResultPrint extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: this.props.style,\n    };\n  }\n  componentDidUpdate = (prevProps) => {\n    const jobStep = this.props.selectedJobStepRunning || {};\n    let customer = jobStep ? jobStep.order ? jobStep.order.customer : {} : {}\n    if (this.props.style !== prevProps.style) {\n      this.setState((state) => ({\n        ...state,\n        resultStyle: {\n          ...state.resultStyle,\n          display: this.props.style,\n        },\n      }));\n    }\n    if (customer.code) {\n      ShareService.createEtccode(customer.code, 'barcode');\n    }\n  };\n  render() {\n    const jobStep = this.props.selectedJobStepRunning || {};\n    const order = jobStep.order || {};\n    const customer = order.customer || {};\n    const current = new Date();\n    let date = new Date(customer.birthday);\n    let address = customer.contacts ? customer.contacts[0].address : {};\n    const street = address.street ? `${address.street}` : '';\n    const ward = address.ward ? `  -${address.ward}` : '';\n    const district = address.district ? `-${address.district}` : '';\n    const province = address.province ? `-${address.province}` : '';\n    let phone = customer.contacts ? customer.contacts[0].phone : \"\";\n    let xrayResult = this.props.xrayResult ? this.props.xrayResult.results ? this.props.xrayResult.results[0] : {} : {};\n    let conclusion = xrayResult ? xrayResult.conclusion : \"\";\n    let description = xrayResult ? xrayResult.description : \"\";\n    let doctorInfo = JSON.parse(window.sessionStorage.getItem('user'));\n    return (\n      <div className=\"border border-secondary font-print \" style={{ display: this.state.display }} >\n        <div className=\"printXrayResult position-relative mt-3\" id=\"printXray\">\n          <div className=\"absolute\">\n            <Row className=\"pt-3\">\n              <Col sm=\"8\">\n                <Row className=\"text-left m-0\">\n                  <HeaderPrint></HeaderPrint>\n                </Row>\n              </Col>\n              <Col className=\"end\">\n                <canvas id=\"barcode\" style={{ height: \"13mm\" }}></canvas>\n              </Col>\n            </Row>\n          </div>\n          <h5 className=\"text-center m-0 title-card-lg\" >\n            <b>KẾT QUẢ X-QUANG</b>\n          </h5>\n          <div className=\"text-center\">\n            <i>{current.getHours()} giờ {current.getMinutes()} phút,Ngày {current.getDate()} Tháng {current.getMonth() + 1} Năm {current.getFullYear()}</i>\n          </div>\n          <div className=\"infoCus\">\n            Họ tên: <b><span className=\"text-uppercase font-weight-bold\">{customer.full_name}</span></b>\n            <span className=\"ml-25\">NS: {date.toLocaleString('en-GB').slice(0, 10)} {`(${getAge(date.toLocaleString('en-GB').slice(0, 10))})`}</span>\n            <span className=\"ml-25 \">GT: {customer.gender === \"male\" ? \" Nam\" : \" Nữ\"} </span>\n            <span className=\"ml-25\">SĐT:  {phone}</span>\n            <br />\n            <span>Địa chỉ: {`${street}${ward}${district}${province}`}</span><br></br>\n            <span className=\"d-block\"> Chẩn Đoán : <b>{this.props.diagnosis}</b></span>\n          </div>\n          <h5 align=\"center\" className=\"mb-3\"><b >MÔ TẢ CHI TIẾT CHỤP X-QUANG</b></h5>\n          <div className=\"description\" style={{ whiteSpace: 'pre-line' }}>\n            {description} <br />\n          </div>\n          <h5 className=\"m-2\"><b align=\"left\">KẾT LUẬN :\n            {conclusion}\n          </b></h5>\n          <div className=\"d-flex justify-content-between px-4 mt-1\">\n            <div className=\"text-center mr-auto ml-5\">\n              {/* <strong>BÁC SĨ ĐIỀU TRỊ</strong><br></br>\n              <i>(ký, họ tên)</i> */}\n            </div>\n            <div className=\"text-center mr-5\">\n              Bắc Ninh ,Ngày {current.getDate()} Tháng {current.getMonth() + 1} Năm {current.getFullYear()}<br></br>\n              <strong>BÁC SĨ</strong><br></br>\n              <i>(ký, ghi rõ họ tên)</i> <br></br><br></br><br></br><br></br>\n              <b className=\"mt-5\">{doctorInfo.full_name}</b>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default XrayResultPrint;\n","import { Http } from \"../../../Helper/Http\";\nimport  UtilService  from \"../../../Shared/Services/UtilService\";\nimport { LOCALSTORAGE } from '../../../Constances/const';\n\nconst API_ENDPOINT = {\n    BASE: \"/job\",\n    GET_LIST_LOCATION: \"/location/list\",\n    GET_CUS_BY_LOC: \"/step/list\",\n    GET_ENT_BY_LOC: \"/location/service/list\",\n    GET_ENT_INDEX_LIST_BY_SER_ID: \"/service/service/get\",\n    UPDATE_ENT_RESULT: \"/step/finish\",\n    TAKE_SAMPLE: \"/step/update\",\n\n    UPLOAD_PHOTO: \"/data/photo/upload\",\n    DOWNLOAD_PHOTO: \"/data/photo/download/\",\n    GETMETADATA : \"/data/get/\"\n}\nclass Ent extends UtilService {\n    constructor() {\n        super();\n        if (Ent._instance) {\n            return Ent._instance;\n        }\n        Ent._instance = this;\n    }\n    userList = [];\n    selectedUser = -1;\n\n    get location() {\n        return JSON.parse(sessionStorage.getItem(LOCALSTORAGE.LOCATION) || '{}');\n    }\n    set location(data) {\n        sessionStorage.setItem(LOCALSTORAGE.LOCATION, JSON.stringify(data))\n    }\n\n    async getCustomerByLocationAndStatus(params) {\n      const url = `${API_ENDPOINT.BASE}${API_ENDPOINT.GET_CUS_BY_LOC}`;\n      return (await Http.get(url, params)).data;\n    }\n    \n    async getEntByLocation(location_id) {\n      const url = `${API_ENDPOINT.GET_ENT_BY_LOC}`;\n      return (await Http.get(url, location_id)).data;\n    }\n    \n    async getEntIndexListByServiceID(id) {\n      const url = `${API_ENDPOINT.GET_ENT_INDEX_LIST_BY_SER_ID}`;\n      return (await Http.get(url, id)).data;\n    }\n    \n    async getListLocation() {\n      return (await Http.get(`${API_ENDPOINT.GET_LIST_LOCATION}`)).data;\n    }\n    \n    async uploadPhoto(data) {\n      const url = `${API_ENDPOINT.UPLOAD_PHOTO}`;\n      return (await Http.post(url, data));\n    }\n\n    async downloadPhoto(name) {\n      const url = `${API_ENDPOINT.DOWNLOAD_PHOTO}`\n      return (await Http.get(url+name))\n    }\n    // async getMetadatImg(name) {\n    //   const url = `${API_ENDPOINT.GETMETADATA}`\n    //   return (await Http.get(url+name))\n    // }\n    finishEntResult(entResult) {\n        return Http.post(\n          `${API_ENDPOINT.BASE}${API_ENDPOINT.UPDATE_ENT_RESULT}`,\n          entResult\n        );\n    }\n    \n    takeSample = async (step) => {\n        const url = `${API_ENDPOINT.BASE}${API_ENDPOINT.TAKE_SAMPLE}`;\n        return await Http.post(url, step);\n    };\n}\n\nconst instance = new Ent();\nexport default instance;","import React, { Component, Fragment } from \"react\";\nimport { ShareService } from \"../../../../Shared\";\nimport { Row, Col, Table } from \"reactstrap\";\nimport HeaderPrint from \"../../../../Shared/Components/HeaderPrint/HeaderPrint\";\nimport EntService from \"../../share/EntService\";\nimport { moneyToWord, getAge } from '../../../Reception/Shared/Util';\nclass EntResultPrint extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: this.props.style,\n      photos: []\n    };\n  }\n\n  componentDidMount = () => {\n     let tab = this.props.tab;\n    let promise = [];\n    let urls = this.props.upload;\n      urls.map(url => {\n        promise.push(EntService.downloadPhoto(url.name))\n      })\n      Promise.all(promise).then(arr => {\n        this.setState({\n          photos: arr.map(el => el.config.url)\n        })\n      })\n  }\n\n  componentDidUpdate = (prevProps) => {\n    const jobStep = this.props.selectedJobStepRunning || {};\n    let customer = jobStep ? jobStep.order ? jobStep.order.customer : {} : {}\n    if (this.props.style !== prevProps.style) {\n      this.setState((state) => ({\n        ...state,\n        resultStyle: {\n          ...state.resultStyle,\n          display: this.props.style,\n        },\n      }));\n    } \n    if (customer.code) {\n      ShareService.createEtccode(customer.code, 'barcode');\n    }\n  };\n\n  render() {\n    let doctorInfo = JSON.parse(window.sessionStorage.getItem('user'));\n    const jobStep = this.props.selectedJobStepRunning || {};\n    const order = jobStep.order || {};\n    const customer = order.customer || {};\n    const current = new Date();\n    let date = new Date(customer.birthday);\n    let address = customer.contacts ? customer.contacts[0].address : {};\n    const street = address.street ? `${address.street}` : '';\n    const ward = address.ward ? `  -${address.ward}` : '';\n    const district = address.district ? `-${address.district}` : '';\n    const province = address.province ? `-${address.province}` : '';\n    let phone = customer.contacts ? customer.contacts[0].phone : \"\";\n    let entResult = this.props.entResult ? this.props.entResult.results ? this.props.entResult.results[0] : {} : {};\n    let conclusion = entResult ? entResult.conclusion : \"\";\n    let description = entResult ? entResult.description : \"\";\n    let urlFileImg = this.props.urlFileImg || {};\n    let tab = this.props.tab;\n    return (\n      <div className=\"border border-secondary font-print \" style={{ display: this.state.display }} >\n        <div className=\"printEntResult position-relative mt-3\" id=\"printEnt\">\n          <div className=\"absolute\">\n            <Row className=\"pt-3\">\n              <Col sm=\"8\">\n                <Row className=\"text-left m-0\">\n                  <HeaderPrint></HeaderPrint>\n                </Row>\n              </Col>\n              <Col className=\"end\">\n                <canvas id=\"barcode\" style={{ height: \"13mm\" }}></canvas>\n              </Col>\n            </Row>\n          </div>\n          <h5 className=\"text-center m-0 title-card-lg\">\n            <b>KẾT QUẢ NỘI SOI</b>\n          </h5>\n          <div className=\"text-center\">\n            <i>{current.getHours()} giờ {current.getMinutes()} phút,Ngày {current.getDate()} Tháng {current.getMonth() + 1} Năm {current.getFullYear()}</i>\n          </div>\n          <div className=\"infoCus\">\n            Họ tên: <b><span className=\"text-uppercase font-weight-bold\">{customer.full_name}</span></b>\n            <span className=\"ml-25\">NS: {date.toLocaleString('en-GB').slice(0, 10)} {`(${getAge(date.toLocaleString('en-GB').slice(0, 10))})`}</span>\n            <span className=\"ml-25 \">GT: {customer.gender === \"male\" ? \" Nam\" : \" Nữ\"} </span>\n            <span className=\"ml-25\">SĐT:  {phone}</span>\n            <br />\n            <span>Địa chỉ: {`${street}${ward}${district}${province}`}</span><br></br>\n            <span className=\"d-block\"> Chẩn Đoán : <b>{this.props.diagnosis}</b></span>\n          </div>\n          <h5 align=\"center\" className=\"mb-1\"> <b>MÔ TẢ CHI TIẾT NỘI SOI</b></h5>\n          <div className=\"conclusion\" style={{ whiteSpace: 'pre-line' }}>\n            {description} <br />\n          </div>\n          <Row>\n            <div className=\"d-flex justify-content-between m-0\">\n              {tab == 2 ? this.state.photos.map(photo => {\n                return (\n                  <div>\n                    <img className=\"resultFile\" src={photo} />\n                  </div>\n                )\n              }) :\n                <div className=\"d-flex justify-content-between m-0\">\n                  <div><img className=\"resultFile\" src={urlFileImg.rightearImg} /></div>\n                  <div><img className=\"resultFile\" src={urlFileImg.leftearImg} /></div>\n                  <div><img className=\"resultFile\" src={urlFileImg.noseImg} /></div>\n                  <div><img className=\"resultFile\" src={urlFileImg.throatImg} /></div>\n                </div>\n              }\n            </div>\n          </Row>\n          <h5 className=\"m-2\"><b align=\"left\">KẾT LUẬN :\n            {conclusion}\n          </b></h5>\n          <div className=\"d-flex justify-content-between px-4 mt-1\">\n            <div className=\"text-center mr-auto ml-5\">\n            </div>\n            <div className=\"text-center mr-5\">\n              Bắc Ninh, Ngày {current.getDate()} Tháng {current.getMonth() + 1} Năm {current.getFullYear()}<br></br>\n              <strong>BÁC SĨ</strong><br></br>\n              <i>(ký, ghi rõ họ tên)</i> <br></br><br></br><br></br><br></br>\n              <b className=\"mt-5\">{doctorInfo.full_name}</b>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EntResultPrint;","import React, { useEffect, useState } from 'react';\nimport { Table, Input } from \"reactstrap\";\nconst BC2800 = (props) => {\n    const { result } = props;\n    useEffect(() => {\n    }, [result])\n    return (\n        <div className=\"patientResult customCard \">\n            <div className=\"table-responsive min-h-80 df-h-58\">\n\n                <div className=\"text-left\">\n                    <table className=\"table table-head-fixed table-bordered\">\n                        <thead>\n\n                            <tr>\n                                <th className=\"dw-3\"> STT </th>\n                                <th className=\"dw-30\"> Tên Xét Nghiệm </th>\n                                <th className=\"dw-14\"> Kết quả </th>\n                                <th className=\"dw-24\">Chỉ số bình thường</th>\n                                <th className=\"dw-16\"> Đơn vị </th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"bodyTable\">\n                            {Object.entries(result).filter(el => el[0] !== \"name\" && el[0] !== \"sample_id\" && el[0] !== \"device\"&& el[0] !== \"ctime\").map((key, index) => {\n                                return <tr >\n                                    <td>{index + 1}</td>\n                                    <td>{key[0]}</td>\n                                    <td className={key[1].value > key[1].range[1]\n                                        ? 'colorResultValueRed'\n                                        : key[1].value < key[1].range[0]\n                                            ? 'colorResultValueBlue'\n                                            : key[1].value !== \"Negative\"\n                                                ? 'colorResultValueRed'\n                                                : ''}\n                                    >\n                                        {key[1].value}</td>\n                                    <td>{key[1].range.map(el => el).join(\"-\")}</td>\n                                    <td>{key[1].unit}</td>\n                                </tr>\n                            })}\n                            {/* {result && result.attr.map((attr, idx) => render_row(attr, idx))} */}\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n        </div >\n    )\n\n}\nexport default BC2800;","import React, { useEffect, useState } from 'react';\nimport { Table, Input } from \"reactstrap\";\nconst UA66 = (props) => {\n    const { result } = props;\n    useEffect(() => {\n    }, [result])\n    if (Object.entries(result).length > 0) {\n        return (\n            <div className=\"patientResult customCard \">\n                <div className=\"table-responsive min-h-80 df-h-58\">\n                    <div className=\"text-left\">\n                        <table className=\"table table-head-fixed table-bordered\">\n                            <thead>\n                               \n                                <tr>\n                                    <th className=\"dw-3\"> STT </th>\n                                    <th className=\"dw-30\"> Tên Xét Nghiệm </th>\n                                    <th className=\"dw-14\"> Kết quả </th>\n                                    <th className=\"dw-24\">Chỉ số bình thường</th>\n                                    <th className=\"dw-16\"> Đơn vị </th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"bodyTable\">\n                                {Object.entries(result).filter(el => el[0] !== \"name\" && el[0] !== \"device\" && el[0] !== \"sample_id\"&& el[0] !== \"ctime\").map((key, index) => {\n                                    return <tr >\n                                        <td>{index + 1}</td>\n                                        <td>{key[0]}</td>\n                                        <td className={key[1].value > key[1].range[1]\n                                            ? 'colorResultValueRed'\n                                            : key[1].value < key[1].range[0]\n                                                ? 'colorResultValueBlue'\n                                                : ''}\n                                        >{key[1].value}</td>\n                                        <td>{key[1].range.map(el => el).join(\"-\")}</td>\n                                        <td>{key[1].unit}</td>\n                                    </tr>\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\nexport default UA66;","import React, { useEffect, useState } from 'react';\nimport { Table, Input } from \"reactstrap\";\nconst BS200E = (props) => {\n    const { result } = props;\n    useEffect(() => {\n    }, [result]);\n    return (\n        <div className=\"patientResult customCard \">\n            <div className=\"table-responsive min-h-80 df-h-58\">\n\n                <div className=\"text-left\">\n                    <table className=\"table table-head-fixed table-bordered\">\n                        <thead>\n\n                            <tr>\n                                <th className=\"dw-3\"> STT </th>\n                                <th className=\"dw-30\"> Tên Xét Nghiệm </th>\n                                <th className=\"dw-14\"> Kết quả </th>\n                                <th className=\"dw-24\">Chỉ số bình thường</th>\n                                <th className=\"dw-16\"> Đơn vị </th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"bodyTable\">\n                            {Object.entries(result).filter(el => el[0] !== \"name\" && el[0] !== \"device\" && el[0] !== \"sample_id\"&& el[0] !== \"ctime\").map((key, index) => {\n                               console.log(key[1].range);\n                               return <tr >\n                                    <td>{index + 1}</td>\n                                    <td>{key[0]}</td>\n                                    <td className={key[1].value > key[1].range[1]\n                                        ? 'colorResultValueRed'\n                                        : key[1].value < key[1].range[0]\n                                            ? 'colorResultValueBlue'\n                                            : ''}\n                                    >\n                                        {key[1].value}</td>\n                                    <td>{key[1].range.map(el => el).join(\"-\")}</td>\n                                    <td>{key[1].unit}</td>\n                                </tr>\n                            })}\n\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div >\n    )\n}\nexport default BS200E;","import React, { useEffect, useState } from 'react';\nimport { Table, Input } from \"reactstrap\";\nconst Test = (props) => {\n    const { result } = props;\n    useEffect(() => {\n    }, [result])\n    if (Object.entries(result).length > 0) {\n        return (\n            <div className=\"patientResult customCard \">\n                <div className=\"table-responsive min-h-80 df-h-58\">\n\n                    <div className=\"text-left\">\n                        <table className=\"table table-head-fixed table-bordered\">\n                            <thead>\n\n                                <tr>\n\n                                    <th className=\"dw-3\"> STT </th>\n                                    <th className=\"dw-30\"> Tên Xét Nghiệm </th>\n                                    <th className=\"dw-14\"> Kết quả </th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"bodyTable\">\n                                {Object.entries(result).filter(el => el[0] !== \"name\" && el[0] !== \"device\" && el[0] !== \"sample_id\"&& el[0] !== \"ctime\").map((key, index) => {\n                                    return (\n                                        <tr >\n                                            <td>{index + 1}</td>\n                                            <td>{key[0]}</td>\n                                            <td>{key[1].value}</td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\nexport default Test;","import React, { useEffect, useState } from 'react';\nconst Other = (props) => {\n    const { result } = props;\n    useEffect(() => {\n    }, [result])\n    return (\n        <div>\n            <div className=\"patientResult customCard Other\">\n                <div className=\"table-responsive min-h-80 df-h-58\">\n                    <div className=\"text-left\">\n                        {\n                            Object.entries(result).filter(el => el[0] !== \"name\" && el[0] !== \"device\" && el[0] !== \"sample_id\"&& el[0] !== \"ctime\").map(parentKey => {\n                                return (\n                                    parentKey[1] != null ?\n                                        <table className=\"table table-head-fixed table-bordered\">\n                                            <thead>\n                                                <tr>\n                                                    <th className=\"dw-14\">{parentKey[0]}</th>\n                                                    <th>Kết quả</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    Object.entries(parentKey[1]).map((key, index) => {\n                                                        return (\n                                                            typeof key[1] === 'object' ?\n                                                                <>\n                                                                    {\n                                                                        Object.entries(key[1]).map(el => {\n                                                                            return (\n                                                                                <tr>\n                                                                                    <td>{el[0]}</td>\n                                                                                    <td>{el[1]}</td>\n                                                                                </tr>\n                                                                            )\n                                                                        })\n                                                                    }</>\n                                                                :\n                                                                <tr>\n                                                                    <td>{key[0]}</td>\n                                                                    <td>{key[1]}</td>\n                                                                </tr>\n                                                        )\n                                                    }\n                                                    )}\n                                            </tbody>\n                                        </table>\n                                        :\n                                        null\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            </div >\n\n        </div >\n    )\n}\nexport default Other;","import React, { useEffect, useState } from 'react';\nimport { Table, Input } from \"reactstrap\";\nconst IMMUNE = (props) => {\n    const { result } = props;\n    useEffect(() => {\n    }, [result])\n    if (Object.entries(result).length > 0) {\n        return (\n            <div className=\"patientResult customCard \">\n                <div className=\"table-responsive min-h-80 df-h-58 \">\n\n                    <div className=\"text-left\">\n                        <table className=\"table table-head-fixed table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th className=\"dw-3\"> STT </th>\n                                    <th className=\"dw-30\"> Tên Xét Nghiệm </th>\n                                    <th className=\"dw-14\"> Kết quả </th>\n                                    <th className=\"dw-24\">Chỉ số bình thường</th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"bodyTable\">\n                                {Object.entries(result).filter(el => el[0] !== \"name\" && el[0] !== \"device\" && el[0] !== \"sample_id\"&& el[0] !== \"ctime\").map((key, index) => {\n                                    return <tr >\n                                        <td>{index + 1}</td>\n                                        <td>{key[0]}</td>\n                                        <td className={key[1].value > key[1].range[1]\n                                            ? 'colorResultValueRed'\n                                            : key[1].value < key[1].range[0]\n                                                ? 'colorResultValueBlue'\n                                                : ''}\n\n                                        >\n                                            {key[1].value}</td>\n                                        <td>{key[1].range.map(el => el).join(\"-\")}</td>            \n                                    </tr>\n                                })}\n                            </tbody>\n                        </table>\n                        <div >\n\n                        </div>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n    return <>\n\n    </>\n}\nexport default IMMUNE;","import React, { useEffect, useState } from \"react\";\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\nimport { NAMEDEVICE } from \"../../../../../Constances/const\";\nimport BC2800 from \"./BC2800\";\nimport UA66 from \"./UA66\";\nimport BS200E from \"./BS200E\";\nimport Test from \"./Test\";\nimport Other from \"./Other\";\nimport Immune from \"./IMMUNE\";\nimport classnames from 'classnames';\nconst ResultExam = (props) => {\n    const { resultsExam, } = props;\n    const selectExamResultTab = (index)=>{\n        setActiveTab(index)\n      }\n      const [activeTab, setActiveTab] = useState(0);\n    return (\n        <div>\n            <Nav tabs className=\"selectTabs\">\n          {\n            resultsExam.map((e, index) => (\n              <NavItem className=\"titleTabs\">\n                <NavLink className={classnames({ active: activeTab === index })} onClick={() => { selectExamResultTab(index); }}>\n                  <b className=\"title-card\">{e.device}</b>\n                </NavLink>\n              </NavItem>\n            ))\n          }\n        </Nav>\n        <TabContent activeTab={activeTab}>\n          {\n            resultsExam.map((el, index) => (\n              <TabPane tabId={index} className=\"customCard\">\n                <div className=\"ResultExam\">\n                        {el.device == NAMEDEVICE.BC2800 && <BC2800\n                            result={el}\n                        ></BC2800>}\n                        {el.device == NAMEDEVICE.UA66 && <UA66\n                            result={el}\n                        ></UA66>}\n                        {el.device == NAMEDEVICE.TEST && <Test\n                            result={el}\n                        ></Test>}\n                        {el.device == NAMEDEVICE.BS200E && <BS200E\n                            result={el}\n                        ></BS200E>}\n                        {el.device == NAMEDEVICE.OTHER && <Other\n                            result={el}\n                        ></Other>}\n                        {el.device == NAMEDEVICE.IMMUNE && <Immune\n                            result={el}\n                        ></Immune>}\n                    </div>\n              </TabPane>\n            ))\n          }\n        </TabContent>\n            \n        </div>\n    )\n}\nexport default ResultExam;","import React from \"react\";\nimport { Form, ModalNoti } from \"../../../../../Shared\";\nimport DoctorServices from \"../../../Shared/DoctorService\";\nimport PrintDiagnostic from \"./PrintDiagnostic\";\nimport Select from 'react-select';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Col,\n  Row,\n  Table,\n} from \"reactstrap\";\nimport PaperResultUltra from \"../../../../Ultrasound/Components/PaperResultUltrasound/PaperResultUltrasound\";\nimport { STEP_TYPE, STATUS,LOCATION_TYPE } from \"../../../../../Constances/const\";\nimport SharedService from \"../../../../../Shared/Services/SharedService\";\nimport { Microscope } from \"../../../../../Shared\";\nimport XrayResultPrint from \"../../../../X-ray/components/XrayResultPrint/XrayResultPrint\";\nimport EntResultPrint from \"../../../../Endoscopic/components/EntResultPrint/EntResultPrint\";\nimport ResultsExam from \"../ResultExam/ResultsExam\";\nimport { Util } from \"../../../../../Helper/Util\"\n\nclass Diagnostic extends Form {\n  constructor(props) {\n    super(props);\n    this.state = {\n      txtSearch: \"\",\n      results: {},\n      locsByService: [],\n      listSelectedService: [],\n      servicesList: [],\n      selectedService: -1,\n      assignedServices: [],\n      examServiceList: [],\n      emergencyList: [],\n      entServiceList: [],\n      xrayServiceList: [],\n      ultraSoundServiceList: [],\n      totalPrice: 0,\n      totalOrigin: 0,\n      testResultList: [],\n      selectedTestResult: {},\n      orderCode: [],\n      message: \"\",\n      show: false,\n      stt: \"1\",\n      textDiagnosis: \"\",\n      showPrint: false,\n      showComfirm: false,\n    };\n\n  }\n\n  resetFrom = () => {\n    this.setState({\n      emergencyList: [],\n      examServiceList: [],\n      entServiceList: [],\n      xrayServiceList: [],\n      ultraSoundServiceList: [],\n    })\n  }\n  componentDidUpdate = (preProps) => {\n    if (preProps.job.id !== this.props.job.id &&\n      this.props.job &&\n      this.props.job.steps &&\n      this.props.job.steps.length\n    ) {\n      let textDiagnosis = this.props.job.state.textDiagnosis;\n      let stepResultList = this.props.job.steps.filter(s => s.type === STEP_TYPE.TEST && s.status !== STEP_TYPE.CANCEL);\n      let testResultList = stepResultList.filter(s => s.order.items.length > 0)\n      for (let i = 0; i < testResultList.length; i++) {\n        let cusList2 = testResultList[i].order.items.filter(eb => {\n          return eb.quantity != 0\n        })\n        if (cusList2.length == 0) {\n          testResultList.splice(i, 1)\n          i--\n        }\n      }\n      this.setState({ testResultList, textDiagnosis, assignedServices: [] });\n      testResultList.map(t => {\n        this.props.resultList.forEach(r => {\n          if (t.type === STEP_TYPE.TEST && t.status === STATUS.DONE && r.orderId === t.order_id) t.seen = r.seen;\n        })\n      });\n      this.resetFrom()\n    }\n  }\n\n  onChangeSearch = (e) => {\n    this.setState({\n      txtSearch: e.target.value,\n    });\n  };\n\n  filter = (array, value, key) => {\n    return array.filter((a) => Object.keys(a).some((k) => a[k] === value));\n  };\n\n  onDelete = (diagnostic) => {\n    let { assignedServices } = this.state;\n    assignedServices.splice(assignedServices.findIndex((e) => e.value === diagnostic.value), 1);\n    this.setState({\n      assignedServices,\n      totalPrice: assignedServices.reduce((a, b) => a - b.price, 0),\n      totalOrigin: assignedServices.reduce((a, b) => a - b.price_origin, 0)\n    });\n  };\n\n  onSubmitDiagnostic = () => {\n    let { assignedServices, examServiceList, entServiceList, xrayServiceList, emergencyList, ultraSoundServiceList } = this.state;\n    DoctorServices.updateJobStep({ id: this.props.stepId, status: STATUS.RUNNING }).then(res => {\n      this.props.onRefresh();\n    }).catch(err => console.log(err))\n    assignedServices.map(el => {\n      if (el.location.type === LOCATION_TYPE.EMERGENCY) {\n        emergencyList.push(el)\n        this.setState({\n          emergencyList\n        })\n      }\n      if (el.location.type === LOCATION_TYPE.TESTING) {\n        examServiceList.push(el)\n        this.setState({\n          examServiceList\n        })\n      }\n      if (el.location.type === LOCATION_TYPE.XRAY) {\n        xrayServiceList.push(el)\n        this.setState({\n          xrayServiceList\n        })\n      }\n      if (el.location.type === LOCATION_TYPE.ENT) {\n        entServiceList.push(el)\n        this.setState({\n          entServiceList\n        })\n      }\n      if (el.location.type === LOCATION_TYPE.ULTRASOUND) {\n        ultraSoundServiceList.push(el)\n        this.setState({\n          ultraSoundServiceList\n        })\n      }\n    })\n    let emergencyLoc = emergencyList.length > 0 ? emergencyList[0].location_id : \" \";\n    let examLoc = examServiceList.length > 0 ? examServiceList[0].location_id : \" \";\n    let entLoc = entServiceList.length > 0 ? entServiceList[0].location_id : \" \";\n    let xrayLoc = xrayServiceList.length > 0 ? xrayServiceList[0].location_id : \" \";\n    let ultraLoc = ultraSoundServiceList.length > 0 ? ultraSoundServiceList[0].location_id : \" \";\n    let addJobStepEmer = DoctorServices.addJobStep({\n      job_id: this.props.job.id,\n      location_id: emergencyLoc,\n      type: STEP_TYPE.TEST,\n      items: emergencyList.map(el => ({\n        ref: 'service',\n        ref_id: el.value,\n        quantity: '1'\n      }))\n    })\n    let addJobStepExam = DoctorServices.addJobStep({\n      job_id: this.props.job.id,\n      location_id: examLoc,\n      type: STEP_TYPE.TEST,\n      items: examServiceList.map(el => ({\n        ref: 'service',\n        ref_id: el.value,\n        quantity: '1'\n      }))\n    })\n    let addJobStepEnt = DoctorServices.addJobStep({\n      job_id: this.props.job.id,\n      location_id: entLoc,\n      type: STEP_TYPE.TEST,\n      items: entServiceList.map(el => ({\n        ref: 'service',\n        ref_id: el.value,\n        quantity: '1'\n      }))\n    })\n    let addJobStepXray = DoctorServices.addJobStep({\n      job_id: this.props.job.id,\n      location_id: xrayLoc,\n      type: STEP_TYPE.TEST,\n      items: xrayServiceList.map(el => ({\n        ref: 'service',\n        ref_id: el.value,\n        quantity: '1'\n      }))\n    })\n    let addJobStepUltraSound = DoctorServices.addJobStep({\n      job_id: this.props.job.id,\n      location_id: ultraLoc,\n      type: STEP_TYPE.TEST,\n      items: ultraSoundServiceList.map(el => ({\n        ref: 'service',\n        ref_id: el.value,\n        quantity: '1'\n      }))\n    })\n    let promises = [];\n    let promisesResult = [];\n    if (examServiceList.length > 0) {\n      promises.push(addJobStepExam)\n      promisesResult.push({ \"name\": \"jobStepExam\" })\n    }\n    if (emergencyList.length > 0) {\n      promises.push(addJobStepEmer)\n      promisesResult.push({ \"name\": \"jobStepEmer\" })\n    }\n    if (entServiceList.length > 0) {\n      promises.push(addJobStepEnt)\n      promisesResult.push({ \"name\": \"jobStepEnt\" })\n    }\n    if (xrayServiceList.length > 0) {\n      promises.push(addJobStepXray)\n      promisesResult.push({ \"name\": \"jobStepXray\" })\n    }\n    if (ultraSoundServiceList.length > 0) {\n      promises.push(addJobStepUltraSound)\n      promisesResult.push({ \"name\": \"jobStepUtralsound\" })\n    }\n    Promise.all(promises).then(arr => {\n      this.resetFrom()\n      this.setState({\n        show: true,\n        promisesResult,\n        message: \"Yêu cầu đã được gửi đi thành công\",\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        message: \"Có lỗi xảy ra, xin vui lòng thử lại!\",\n      });\n    })\n  };\n\n  closeNotice = () => {\n    this.setState((state) => ({\n      ...state,\n      message: \"\",\n    }));\n  };\n\n  onSelectSevice = (ev) => {\n    let { assignedServices, servicesList, selectedService } = this.state;\n    DoctorServices.getLocationsByService(ev.value).then(res => {\n      assignedServices.map(el => {\n        if (ev.value === el.value) {\n          this.setState({\n            message: \"Đã có dịch vụ\"\n          })\n          assignedServices.splice(assignedServices.findIndex((e) => e.value === ev.value), 1);\n          this.setState({\n            assignedServices,\n          })\n        }\n      })\n      if (res.data.length == 1) {\n        this.setState({\n          locsByService: res.data[0],\n        })\n        let service = ev;\n        service.location_id = this.state.locsByService.id;\n        service.location = this.state.locsByService;\n        assignedServices.push(service);\n        servicesList.splice(this.state.selectedService, 1);\n        this.setState({\n          servicesList,\n          assignedServices,\n          selectedService,\n          totalPrice: assignedServices.reduce((a, b) => a + b.price, 0),\n          totalOrigin: assignedServices.reduce((a, b) => a + b.price_origin, 0)\n        })\n      }\n      else {\n        this.setState({\n          locsByService: res.data\n        })\n      }\n    }).catch(err => {\n      console.log(err);\n      this.setState((state) => ({\n        message: \"Có lỗi, xin vui lòng thử lại sau\",\n      }));\n    })\n\n  }\n\n  onSelectLocService = (locId) => {\n    let { selectedService, assignedServices, locsByService } = this.state;\n    let servicesList = this.props.servicesList\n    let service = servicesList[selectedService];\n    service.location_id = locId;\n    service.location = locsByService.find(l => l.id == locId);\n    assignedServices.push(service);\n    servicesList.splice(selectedService, 1);\n    this.setState({\n      servicesList,\n      assignedServices,\n      selectedService: -1,\n      locsByService: [],\n      totalPrice: assignedServices.reduce((a, b) => a + b.price, 0),\n      style: \"block\",\n    });\n  }\n\n  onExamResultReiview = (testing, index) => {\n    let testResultList = this.state.testResultList;\n    this.props.resultList.map(r => {\n      if (r.orderId === testing.order_id) r.seen = true;\n    })\n    testResultList[index].seen = true;\n    let resultsExam = [];\n    testing.results.map(el => {\n      if (Object.keys(el).length > 1) {\n        resultsExam.push(el)\n\n      }\n    })\n    let showResult = null;\n    let idPrint = \"\";\n    let tabPrint = 1;\n    if (testing.location) {\n      if (testing.location.type ===LOCATION_TYPE.TESTING) {\n        tabPrint = 1\n        showResult = <ResultsExam\n          resultsExam={resultsExam}\n        ></ResultsExam>\n      }\n      if (testing.location.type === LOCATION_TYPE.ENT) {\n        tabPrint = 2\n        showResult = <EntResultPrint\n          upload={testing.upload}\n          selectedJobStepRunning={testing}\n          entResult={testing}\n          diagnosis={this.state.textDiagnosis}\n          tab={\"2\"}\n        ></EntResultPrint>\n        idPrint = \"printEnt\"\n      }\n      if (testing.location.type === LOCATION_TYPE.XRAY) {\n        tabPrint = 2\n        showResult = <XrayResultPrint\n          selectedJobStepRunning={testing}\n          xrayResult={testing}\n          diagnosis={this.state.textDiagnosis}\n        ></XrayResultPrint>\n        idPrint = \"printXray\"\n      }\n      if (testing.location.type === LOCATION_TYPE.ULTRASOUND) {\n        tabPrint = 2\n        showResult = <PaperResultUltra\n          tab={\"2\"}\n          upload={testing.upload}\n          selectedJobStepRunning={testing}\n          ultraResult={testing}\n          diagnosis={this.state.textDiagnosis}\n        ></PaperResultUltra>\n        idPrint = \"printUltra\"\n      }\n    }\n    this.setState({\n      selectedTestResult: testing,\n      showResult,\n      idPrint,\n      testResultList,\n      resultsExam,\n      tabPrint\n    })\n  }\n  Print = async (id) => {\n    await SharedService.print(id);\n    await this.setState({\n      show: false,\n      promisesResult: [],\n      xrayServiceList: [],\n      examServiceList: [],\n      entServiceList: [],\n      ultraSoundServiceList: [],\n      selectedTestResult: {}\n    })\n  }\n\n  showFromPrint = () => {\n    if (this.state.assignedServices.length > 0) {\n      this.setState({\n        showPrint: true\n      })\n    }\n    else {\n      this.setState({\n        message: \"Chưa có dịch vụ.\"\n      })\n    }\n\n  }\n  closeFromPrint = () => {\n    this.setState({\n      showPrint: false,\n      showComfirm: false\n    })\n  }\n  submitPrint = () => {\n    this.onSubmitDiagnostic();\n    this.Print(\"print-diag\");\n    this.setState({\n      showPrint: false,\n    })\n  }\n  render() {\n    let { servicesList, job } = this.props;\n    let { txtSearch, showPrint, showComfirm, showResult, idPrint, totalOrigin, selectedService, locsByService, promisesResult, assignedServices, totalPrice, testResultList, selectedTestResult, stt, show, examServiceList, entServiceList, xrayServiceList, ultraSoundServiceList } = this.state;\n    if (txtSearch) {\n      servicesList = servicesList.filter((service) => {\n        return service.name.toLowerCase().indexOf(txtSearch) !== -1;\n      });\n    }\n    let servicesExam = servicesList.map((ev, index) => ({\n      value: ev.id,\n      label: ev.name,\n      code: ev.code,\n      price: ev.price,\n      price_origin: ev.origin_price,\n    }))\n    return (\n      <div className=\"customCard Diagnostic\" id=\"Diagnostic\">\n        <Col className=\"choice-diag\">\n          <p className=\"title-card mb-0\"><Microscope xmlns=\"http://www.w3.org/2000/svg\" className=\"flaticon-icons\" fill=\"#28b76b\" /> Loại xét nghiệm</p>\n        </Col>\n        <Col className=\"choice-diag mb-2\">\n          <Select\n            placeholder=\"Chọn dịch vụ xét nghiệm\"\n            options={servicesExam}\n            onChange={(ev) => this.onSelectSevice(ev)}\n            id=\"service_id\"\n            required\n          ></Select>\n        </Col>\n        <Col md={12} className=\"table-responsive min-h-62 list-diag\">\n          <p className=\"title-card\"><span className=\"material-icons\">playlist_add</span> Yêu cầu xét nghiệm</p>\n          <Table size=\"sm\" className=\"table table-head-fixed table-bordered\">\n            <thead>\n              <tr>\n                <th className=\"list-diag-index\" >#</th>\n                <th className=\"list-diag-name\">Tên</th>\n                <th className=\"list-diag-room\">Phòng</th>\n                <th className=\"list-diag-quantity\">Số lượng</th>\n                <th className=\"list-diag-price\">Giá tiền</th>\n                <th className=\"list-diag-delete\">Tùy chọn</th>\n              </tr>\n            </thead>\n\n            {testResultList.length ? (\n              testResultList.map((testing, index) => {\n                return (\n                  <tbody className=\"body-half-screen\">\n                    <tr onClick={() => this.onExamResultReiview(testing, index)} className={`pointer ${testing.seen === false ? 'notiResult' : null}`} key={testing.id}>\n                      <td className=\"list-diag-index\" >{index + 1}</td>\n                      <td className=\"list-diag-name\" >{testing.order.items.filter(e => e.quantity > 0).map(el => el.ref_value.name).splice(0, 3).join(\",\")}</td>\n                      <td className=\"list-diag-room\" >{testing.location.name}</td>\n                      <td className=\"list-diag-quantiy\">1</td>\n                      <td className=\"list-diag-price\" >{Util.formatPrice(testing.order.total)}</td>\n                      <td className=\"list-diag-delete\" ></td>\n                    </tr>\n                  </tbody>\n                )\n              })\n            ) : null}\n\n            {assignedServices ? (\n              assignedServices.map((diagnostic, index) => {\n                return (\n                  <tbody className=\"body-half-screen\">\n                    <tr className=\"pointer\" key={diagnostic.id}>\n                      <td className=\"list-diag-index\">{testResultList.length + index + 1}</td>\n                      <td className=\"list-diag-name\">{diagnostic.label}</td>\n                      <td className=\"list-diag-room\">{diagnostic.location.name}</td>\n                      <td className=\"list-diag-quantiy\">1</td>\n                      <td className=\"list-diag-price\">{Util.formatPrice(diagnostic.price)}</td>\n                      <td onClick={() => this.onDelete(diagnostic)} className=\"list-diag-delete\">Xóa</td>\n                    </tr>\n                  </tbody>\n                );\n              })\n            ) : (\n              <tbody className=\"body-half-screen\">\n                <tr>\n                  <td className=\"list-diag-index\">---</td>\n                  <td className=\"list-diag-id\">---</td>\n                  <td className=\"list-diag-name\">---</td>\n                  <td className=\"list-diag-room\">---</td>\n                  <td className=\"list-diag-quantiy\"></td>\n                  <td className=\"list-diag-delete\">---</td>\n                </tr>\n              </tbody>\n            )}\n\n          </Table>\n        </Col>\n        <Row className=\"pr-15 pl-15\">\n          <Col sm={8}>\n            <p className=\"title-card\"><span className=\"material-icons md-18\">monetization_on</span>\n              Tổng tiền: {new Intl.NumberFormat('de-DE').format(totalPrice)}đ\n            </p>\n            <p className=\"title-card\"><span className=\"material-icons md-18\">monetization_on</span>\n              Giá gốc: {new Intl.NumberFormat('de-DE').format(totalOrigin)}đ\n            </p>\n          </Col>\n          <Col sm={4} className=\"btn-count-print end\">\n            <Button\n              hidden={!job || !job.id}\n              onClick={() => this.showFromPrint()}\n            >In</Button>\n          </Col>\n        </Row>\n        <Modal isOpen={selectedService >= 0}>\n          <ModalHeader>Thông tin loại xét nghiệm</ModalHeader>\n          <ModalBody>\n            <div className=\"info-diagnostic\">\n              <div> Tên loại xét nghiệm: {servicesList[selectedService]?.name}</div>\n              <Row className=\"selectRoom\" >\n                {locsByService.length ? locsByService.map(lo => {\n                  return (<Col className=\"item\" key={lo.id} sm={6}>\n                    <Button onClick={() => this.onSelectLocService(lo.id)}>{lo.name}</Button>\n                  </Col>)\n                }) : null}\n              </Row>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => this.setState({ selectedService: -1 })}>Hủy</Button>\n          </ModalFooter>\n        </Modal>\n        <Modal isOpen={selectedTestResult && selectedTestResult.id}>\n          <ModalHeader>Kết quả xét nghiệm</ModalHeader>\n          <ModalBody>\n            <Row>\n              <Col>\n                {showResult}\n              </Col>\n            </Row>\n          </ModalBody>\n          <ModalFooter>\n            <Button hidden={this.state.tabPrint == 1} onClick={() => this.Print(idPrint)\n\n            }>In kết quả</Button>\n            <Button color=\"danger\" onClick={() => this.setState({ selectedTestResult: {} })}>Đóng</Button>\n          </ModalFooter>\n        </Modal>\n        {/* ==========================================Modal In=============================================== */}\n        <Modal isOpen={showPrint}>\n          <ModalBody>\n            <PrintDiagnostic\n              totalOrigin={totalOrigin}\n              assignedServices={assignedServices}\n              textDiagnosis={this.state.textDiagnosis}\n              diagnosis={this.props.textDiagnosis}\n              cusData={this.props.cusData}></PrintDiagnostic>\n          </ModalBody>\n          <ModalFooter >\n            <Button color=\"danger\" onClick={() => this.closeFromPrint()}>Hủy</Button>{\" \"}\n            <Button onClick={() => this.submitPrint()}>Lưu</Button>\n          </ModalFooter>\n        </Modal>\n        <ModalNoti message={this.state.message} done={() => this.closeNotice()}></ModalNoti>\n      </div>\n    );\n  }\n}\n\nexport default Diagnostic;\n","import React from 'react';\nimport { Col, Row, Input } from 'reactstrap';\nimport DoctorServices from '../../../Shared/DoctorService'\nimport { Form } from '../../../../../Shared';\nimport { Util } from '../../../../../Helper/Util';\nclass PreExamination extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            blood: '',\n            height: '',\n            temp: '',\n            weight: '',\n            allergy: ''\n        }\n    }\n\n    componentDidUpdate = (preProps) => {\n        if (preProps.job.id !== this.props.job.id) {\n            let blood = this.props.job.state.subclinical.blood || '';\n            let height = this.props.job.state.subclinical.height || '';\n            let temp = this.props.job.state.subclinical.temp || '';\n            let weight = this.props.job.state.subclinical.weight || '';\n            this.setState({\n                blood,\n                height,\n                temp,\n                weight,\n\n            })\n            let id = this.props.job.ref_id\n            DoctorServices.getOneCustomer(id).then(res => {\n                let allergy = res.data.allergy || '';\n                this.setState({\n                    allergy,\n                })\n            })\n        }\n    }\n\n    onHandelChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    onBlurDiagnosis = () => {\n        let { job } = this.props;\n        let id = this.props.job.ref_id\n        let subclinical = {\n            blood: this.state.blood,\n            temp: this.state.temp,\n            weight: this.state.weight,\n            height: this.state.height\n        }\n        DoctorServices.postSubclinical({\n            id: job.id,\n            state: {\n                subclinical\n            }\n        }).then(res => {\n            job.state = job.state || {};\n            job.state.subclinical = subclinical;\n            console.log('Thành Công', res);\n        })\n        let allergy = this.state.allergy;\n\n        DoctorServices.postAllergyToCus(id, {\n            allergy: allergy\n        }).then(res => {\n            console.log('Thành Công', res);\n        })\n    }\n\n    render() {\n        let { temp, height, weight, blood, allergy } = this.state\n        return (\n            <div className=\"PreExamination \">\n                <Row>\n                    <p className=\"title-card\"><span className=\"material-icons\">create</span> Dấu hiệu sống</p>\n                    <Col sm=\"7\">\n                        <Row className=\"info\">\n                            <Col sm={6}>\n                                <Row className=\"mb-0\">\n                                    <Col sm={4}>\n                                        <span>Nhiệt độ:</span>\n                                    </Col>\n                                    <Col className=\"m-0 p-0\">\n                                        <Input\n                                            onKeyDown={(e) => Util.onKeyDown(e)}\n                                            data-index=\"1\"\n                                            name=\"temp\"\n                                            value={temp}\n                                            onChange={e => this.onHandelChange(e)}\n                                            onBlur={() => { this.onBlurDiagnosis() }}\n                                            disabled={!this.props.job.id}\n                                        ></Input>\n                                        <p className=\"m-1\"> °C</p>\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col sm={6}>\n                                <Row className=\"mb-0\">\n                                    <Col sm={4}>\n                                        <span>Huyết áp:</span>\n                                    </Col>\n                                    <Col className=\"m-0 p-0\">\n                                        <Input\n                                            onKeyDown={(e) => Util.onKeyDown(e)}\n                                            data-index=\"2\"\n                                            name=\"blood\"\n                                            value={blood}\n                                            onChange={e => this.onHandelChange(e)}\n                                            onBlur={() => { this.onBlurDiagnosis() }}\n                                            disabled={!this.props.job.id}\n                                        >\n                                        </Input>\n                                        <p className=\"m-1\">mmHg</p>\n                                        \n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <Row className=\"info\">\n                            <Col sm={6}>\n                                <Row className=\"mb-0\">\n                                    <Col sm={4}>\n                                        <span>Cân nặng:</span>\n                                    </Col>\n                                    <Col className=\"m-0 p-0\">\n                                        <Input name=\"weight\"\n                                            onKeyDown={(e) => Util.onKeyDown(e)}\n                                            data-index=\"3\"\n                                            value={weight}\n                                            onChange={e => this.onHandelChange(e)}\n                                            onBlur={() => { this.onBlurDiagnosis() }}\n                                            disabled={!this.props.job.id}\n                                        ></Input>\n                                        <p className=\"m-1\">KG</p>\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col sm={6}>\n                                <Row className=\"mb-0\">\n                                    <Col sm={4}>\n                                        <span>Chiều cao:</span>\n                                    </Col>\n                                    <Col className=\"m-0 p-0\">\n                                        <Input name=\"height\"\n                                            onKeyDown={(e) => Util.onKeyDown(e)}\n                                            data-index=\"4\"\n                                            value={height}\n                                            onChange={e => this.onHandelChange(e)}\n                                            onBlur={() => { this.onBlurDiagnosis() }}\n                                            disabled={!this.props.job.id}\n                                        ></Input>\n                                        <p className=\"m-1\">CM</p>\n                                        \n                                    </Col>\n                                   \n                                </Row>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col sm=\"5\" className=\"\">\n                        <Row>\n                            <Col sm=\"2\">\n                                <p className=\"text-danger\"><b>Dị ứng:</b></p>\n                            </Col>\n                            <Col sm=\"10\">\n                                <textarea\n                                    className=\"form-control allergy\"\n                                    name=\"allergy\"\n                                    value={allergy}\n                                    onChange={e => this.onHandelChange(e)}\n                                    onBlur={this.onBlurDiagnosis}\n                                    disabled={!this.props.job.id}\n                                ></textarea>\n                            </Col>\n\n                        </Row>\n\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\nexport default PreExamination;","import React, { useEffect } from 'react';\nimport { Col, Row } from 'reactstrap';\nimport SharedService from '../../../../../Shared/Services/SharedService'\nimport HeadedPrint from '../../../../../Shared/Components/HeaderPrint/HeaderPrint'\nimport { ONE_DAY, PRODUCT_UNIT } from '../../../../../Constances/const';\nconst PrintDiagnostic = (props) => {\n    const CusArr = props.CusArr ? props.CusArr : {};\n    const { reExamDate } = props\n    const job = props.job;\n    let doctorInfo = JSON.parse(window.sessionStorage.getItem('user'));\n    const textSymptom = job.state?.textSymptom;\n    const textDiagnosis = job.state?.textDiagnosis;\n    const cusData = job.steps ? job.steps[0].order.customer : {};\n    const current = new Date();\n    let phone = cusData.contacts ? cusData.contacts[0].phone : \"\";\n    let address = cusData.contacts ? cusData.contacts[0].address : {};\n    const street = address.street ? `${address.street}` : '';\n    const ward = address.ward ? `  -${address.ward}` : '';\n    const district = address.district ? `-${address.district}` : '';\n    const province = address.province ? `-${address.province}` : '';\n    let date = new Date(cusData.birthday);\n    let age =  Math.floor((Date.now() - date.getTime()) / (365 * ONE_DAY)) || 0\n    let { etcArr, otcArr, otcCode, etcCode } = props;\n    let etcTotal = 0;\n    let otcTotal = 0;\n    let rowEtcArr = etcArr.filter(el => !el.old).map((el, index) => {\n        etcTotal += el.total;\n        return (\n            <Row>\n                <Col xs={{ size: '7', offset: '1'}}>\n                    <div className=\"pb-5\"><b>{index + 1}</b>/ {el.name} <b>({el.parts[0]?.name} {el.parts[0]?.quantity})</b></div>\n                    <div className=\"pb-5\"><i>{el.attrs?.instruction}</i></div>\n                </Col>\n                <Col xs=\"1\">{el.quantity}</Col>\n                <Col xs={{ size: '1', offset: '1'}}>\n                    {PRODUCT_UNIT.map(u => {\n                        if(u.code === el?.unit)\n                        return <span>{u.label}</span>\n                    })}\n                </Col>\n            </Row>\n        )\n    })\n\n\n    let rowOtcArr = otcArr.filter(el => !el.old).map((el, index) => {\n        otcTotal += el.total;\n        return (\n            <Row>\n                <Col xs={{ size: '7', offset: '1'}}>\n                    <div className=\"pb-5\"><b>{index + 1}</b>/ {el.name} <b>({el.parts[0]?.name} {el.parts[0]?.quantity})</b></div>\n                    <div className=\"pb-5\"><i>{el.attrs.instruction}</i></div>\n                </Col>\n                <Col xs=\"1\">{el.quantity}</Col>\n                <Col xs={{ size: '1', offset: '1'}}>\n                    {PRODUCT_UNIT.map(u => {\n                        if(u.code === el?.unit)\n                        return <span>{u.label}</span>\n                    })}\n                </Col>\n            </Row>\n        )\n    })\n    useEffect(() => {\n        if (etcCode) {\n            SharedService.createEtccode(etcCode, \"canvasIdEtc\")\n        }\n        if (otcCode && otcArr.length > 0) {\n            SharedService.createEtccode(otcCode, \"canvasIdOtc\")\n        }\n        if (cusData.code) {\n            SharedService.createEtccode(cusData.code.toString(), \"canvasCusCode\")\n        }\n        if (cusData.code && otcArr.length > 0) {\n            SharedService.createEtccode(cusData.code.toString(), \"canvasCusCodeOtc\")\n        }\n    }, [etcCode, otcCode, cusData.code, CusArr.code])\n    return (\n\n        <div className=\"border border-secondary font-print printPrescription\">\n            <div className=\"medPrintId position-relative\" id=\"medPrintId\" >\n                <br></br>\n                <div className=\"PrintEtc\" id=\"PrintEtc\">\n                    <div className=\"absolute\">\n                        <Row>\n                            <Col sm=\"7\">\n                                <Row className=\"text-left\">\n                                    <HeadedPrint></HeadedPrint>\n                                </Row>\n                            </Col>\n                            <Col xs=\"5\">\n                                <canvas id=\"canvasIdEtc\" style={{ width: \"220px\", height: \"15mm\", marginRight: '20px' }}></canvas>\n                            </Col>\n                        </Row>\n                    </div>\n                    <h5 className=\"text-center font-weight-bold\">\n                        <b>ĐƠN THUỐC</b>\n                    </h5>\n                    <div className=\"text-center\">\n                        <i>Ngày {current.getDate()} Tháng {current.getMonth() + 1} Năm {current.getFullYear()}</i>\n                    </div>\n                    <br></br>\n                    <div className=\"info-Cus\">\n                        <Row>\n                            <Col sm=\"6\">\n                                <div className=\"text-left\">\n                                    <canvas id=\"canvasCusCode\" style={{ height: \"14mm\" }}></canvas>\n                                </div>\n                            </Col>\n                            <Col sm=\"1\">\n                            </Col>\n                            <Col sm=\"5\">\n                                Mã phiếu thu: {etcCode}\n                            </Col>\n                        </Row>\n                        <Row  className=\"pt-10\">\n                            <Col sm=\"4\">\n                                Họ tên: <b>{cusData.full_name}</b>\n                            </Col>\n                            <Col sm=\"3\">\n                                Ngày Sinh: {date.toLocaleString('en-GB').slice(0, 10)}\n                            </Col>\n                            <Col sm=\"2\">\n                                Tuổi: {age}\n                            </Col>\n                            <Col sm=\"3\">\n                                Giới tính: {cusData.gender === \"male\" ? \"Nam\" : \" Nữ\"}\n                            </Col>\n                        </Row>\n                        <Row className=\"pt-10\">\n                            <Col sm='9'>\n                                Địa chỉ: {`${street}${ward}${district}${province}`}\n                            </Col>\n                            <Col sm=\"3\">\n                                SĐT: {phone}\n                            </Col>\n                        </Row>\n                        <Row className=\"pt-10  pb-10\">\n                            <div>Chẩn đoán: <b>{textDiagnosis}</b></div>\n                        </Row>\n                    </div>\n                    {/* <b align=\"left\"><p>Danh sách đơn thuốc</p></b> */}\n                    {/* <div className=\"justify-content-between\">\n                        <Table border=\"1\" align=\"center\">\n                            <thead>\n                                <th>#</th>\n                                <th>Tên thuốc</th>\n                                <th>Số lượng</th>\n                                <th>Cách dùng</th>\n                            </thead>\n                            <tbody>\n                                {rowEtcArr}\n                            </tbody>\n                        </Table>\n                    </div> */}\n                    <div className=\"order-product\">\n                        <Row className=\"pt-5\">\n                            <Col className=\"pl-20\" xs={{ 'size': '6', 'offset': '2' }}><u>Thuốc điều trị</u></Col>\n                            <Col xs=\"2\"><u>Số lượng</u></Col>\n                            <Col xs={2}><u>Đơn vị</u></Col>\n                        </Row>\n                        {rowEtcArr}\n                    </div>\n                    <div className=\"d-flex justify-content-between px-4\">\n                        <div>\n                            <div className=\"pb-5 pt-30\"><b>Nếu bất thường đến cơ sở y tế gần nhất.</b></div>\n                            <div className=\"pb-5\"><b>Khám lại sau : {reExamDate ? reExamDate : \".....\"} Ngày!</b></div>\n                            <div><b>Khám lại mang theo đơn này.</b></div>\n                        </div>\n                        <div className=\"text-center mr-10\">\n                            <div className=\"text-center mr-auto ml-5 \">\n                                <strong>Bác sĩ điều trị</strong><br></br>\n                                <i>(ký, ghi rõ họ tên)</i> <br></br><br></br><br></br><br></br>\n                                <b className=\"mt-5\">{doctorInfo.full_name}</b>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                {/* <----------------------- Tách From-----------------------------> */}\n\n                {otcArr.length > 0 ?\n                    <div className={otcArr.length > 0 ? \"show\" : \"unShow\"} >\n                        <div className=\"PrintOtc\" id=\"PrintOtc\" >\n                            <div className=\"absolute\">\n                                <Row>\n                                    <Col sm=\"7\">\n                                        <Row className=\"text-left\">\n                                            <HeadedPrint></HeadedPrint>\n                                        </Row>\n                                    </Col>\n                                    <Col>\n                                        <canvas id=\"canvasIdOtc\" style={{ width: \"240px\", height: \"16mm\", paddingRight: '20px' }}></canvas>\n                                    </Col>\n                                </Row>\n                            </div>\n                            <h5 className=\"text-center font-weight-bold\">\n                                <b>ĐƠN THUỐC BỔ SUNG</b>\n                            </h5>\n                            <div className=\"info-customer text-center\">\n                            </div>\n                            <div className=\"text-center\">\n                                <i>Ngày {current.getDate()} Tháng {current.getMonth() + 1} Năm {current.getFullYear()}</i>\n                            </div>\n                            <br></br>\n                            <div className=\"info-Cus\">\n                                <div className=\"text-left\">\n                                    <canvas id=\"canvasCusCodeOtc\" style={{ height: \"13mm\" }}></canvas>\n                                </div>\n                                <Row>\n                                    <Col sm=\"6\">\n                                        Họ và tên: <b>{cusData.full_name}</b>\n                                    </Col>\n                                    <Col sm=\"1\">\n                                    </Col>\n                                    <Col sm=\"5\">\n                                        Mã phiếu thu: {etcCode}\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"6\">\n                                        Ngày Sinh: {date.toLocaleString('en-GB').slice(0, 10)}\n                                    </Col>\n                                    <Col sm=\"1\">\n                                    </Col>\n                                    <Col sm=\"5\">\n                                        Giới tính:{cusData.gender === \"male\" ? \"Nam\" : \"Nữ\"}\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm='6'>\n                                        Địa chỉ : {`${street}${ward}${district}${province}`}\n                                    </Col>\n                                    <Col sm=\"1\">\n                                    </Col>\n                                    <Col sm=\"5\">\n                                        Số điện thoại : {phone}\n                                    </Col>\n                                </Row>\n                            </div>\n                            {/* <b align=\"left\"><p>Danh sách đơn thuốc</p></b> */}\n                            {/* <div className=\"justify-content-between\">\n                                <Table border=\"1\" align=\"center\">\n                                    <thead>\n                                        <tr>\n                                            <th>#</th>\n                                            <th>Tên thuốc</th>\n                                            <th>Số lượng</th>\n                                            <th>Cách dùng</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {rowOtcArr}\n                                    </tbody>\n                                </Table>\n                            </div> */}\n                            <div className=\"order-product\"> \n                                <Row className=\"pt-5\">\n                                    <Col xs={{ 'size': '7', 'offset': '1' }}><u>Thuốc điều trị</u></Col>\n                                    <Col xs=\"4\"><u>Số lượng</u></Col>\n                                </Row>\n                                {rowOtcArr}\n                            </div>\n                            <div className=\"d-flex justify-content-between px-4 \">\n                                <div>\n                                    <div className=\"pb-5 pt-30\"><b>Nếu bất thường đến cơ sở y tế gần nhất.</b></div>\n                                    <div className=\"pb-5\"><b>Khám lại sau : {reExamDate ? reExamDate : \".....\"} Ngày!</b></div>\n                                    <div><b>Khám lại mang theo đơn này.</b></div>\n                                </div>\n                                <div className=\"text-center mr-10\">\n                                    <strong>Bác sĩ điều trị</strong><br></br>\n                                    <i>(ký, ghi rõ họ tên)</i> <br></br><br></br><br></br><br></br>\n                                    <b className=\"mt-5\">{doctorInfo.full_name}</b>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                : null}\n\n            </div>\n        </div>\n    )\n}\nexport default PrintDiagnostic;\n","import React from 'react';\nimport { Col, Row, Table } from 'reactstrap';\nimport SharedService from '../../../../../Shared/Services/SharedService';\nimport HeadedPrint from '../../../../../Shared/Components/HeaderPrint/HeaderPrint';\nimport { ONE_DAY, PRODUCT_UNIT } from '../../../../../Constances/const';\nexport class PrintPre extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      doctorInfo: null\n    }\n  }\n  componentDidMount() {\n    let doctorInfo = JSON.parse(window.sessionStorage.getItem('user'));\n    this.setState({ doctorInfo })\n  }\n  componentDidUpdate(preProps) {\n    let { etcArr, cusData, otcArr, etcCode, otcCode } = this.props;\n    let rowOtcArr = otcArr.filter(el => !el.old)\n    if(etcArr.length  > 0)  {\n      SharedService.createEtccode(cusData.code.toString(), \"canvasCusEtc\")\n      preProps.etcCode !== etcCode && SharedService.createEtccode(etcCode, 'canvasOrderEtc')\n    }\n    if (rowOtcArr.length > 0) {\n      preProps.otcCode !== otcCode && SharedService.createEtccode(otcCode, 'canvasOrderOtc')\n      SharedService.createEtccode(cusData.code.toString(), \"canvasCusOtc\")\n    }\n   \n  }\n  render() {\n    let { etcArr, etcCode, cusData, otcCode, otcArr, job, reExamDate } = this.props;\n    const customerCode = cusData ? cusData.code : null;\n    const current = new Date();\n    let phone = cusData && cusData.contacts ? cusData.contacts[0].phone : null;\n    let address = cusData && cusData.contacts ? cusData.contacts[0].address : {};\n    let date = new Date(cusData ? cusData.birthday : null);\n    let age = Math.floor((Date.now() - date.getTime()) / (365 * ONE_DAY)) || 0;\n    let weight = job.state?.subclinical?.weight || '';\n    let textDiagnosis = job.state?.textDiagnosis\n    let rowEtcArr = etcArr ? etcArr.filter(el => !el.old).map((el, index) => {\n      return (\n        <Row className=\"item-product\">\n          <Col xs={{ size: '7' }}>\n            <div className=\"title-product\"><b>{index + 1}</b>/ {el.name} <b>({el.parts[0]?.name} {el.parts[0]?.quantity})</b></div>\n            <div><i>{el.attrs?.instruction}</i></div>\n          </Col>\n          <Col className=\"pl-20\" xs=\"1\">{el.quantity}</Col>\n          <Col className=\"pl-20\" xs={{ size: '1', offset: '1' }}>\n            {PRODUCT_UNIT.map(u => {\n              if (u.code === el?.unit)\n                return <span>{u.label}</span>\n            })}\n          </Col>\n        </Row>\n      )\n    }) : null;\n    let rowOtcArr = otcArr ? otcArr.filter(el => !el.old).map((el, index) => {\n      return (\n        <Row className=\"item-product\">\n          <Col xs={{ size: '7' }}>\n            <div className=\"title-product\"><b>{index + 1}</b>/ {el?.name} <b>({el.parts[0]?.name} {el.parts[0]?.quantity})</b></div>\n            <div><i>{el.attrs?.instruction}</i></div>\n          </Col>\n          <Col className=\"pl-20\" xs=\"1\">{el.quantity}</Col>\n          <Col className=\"pl-20\" xs={{ size: '1', offset: '1' }}>\n            {PRODUCT_UNIT.map(u => {\n              if (u.code === el?.unit)\n                return <span>{u.label}</span>\n            })}\n          </Col>\n        </Row>\n      )\n    }) : null;\n    return (\n      <div className=\"PrintPre receiptContainer\" >\n        <div className=\"print-pharmacy medPrintId position-relative\" id=\"medPrintId\" >\n          <div className=\"pl-30 pr-15 pb-20 PrintEtc\" id=\"PrintEtc\">\n            <Row className=\"pt-20 header-print\">\n              <div className=\"print-w-60 absolute\">\n                <HeadedPrint />\n              </div>\n              <div className=\"print-w-40\">\n                <canvas id=\"canvasOrderEtc\" style={{ height: \"13mm\", marginRight: '20px' }}></canvas>\n              </div>\n            </Row>\n            <div className=\"text-center print-title\">\n              ĐƠN THUỐC\n            </div>\n            <div className=\"text-center\">\n              <i> {current.getHours()} Giờ {current.getMinutes()} Phút, Ngày {current.getDate()} Tháng {current.getMonth() + 1} Năm {current.getFullYear()}</i>\n            </div>\n            <div className=\"info-cus\">\n              <div className=\"text-left  print-w-50\">\n                <canvas id=\"canvasCusEtc\" style={{ height: \"13mm\" }}></canvas>\n              </div>\n              <div className=\"print-w-50 text-center\">\n                Mã phiếu thu: {etcCode}\n              </div>\n            </div>\n            <div className=\"info-cus\" >\n              <div className=\"print-mw-30 name-print\">\n                Họ tên: <b>{cusData.full_name}</b>\n              </div>\n              <div className=\"pl-10 birthday-print\">\n                Ngày Sinh: {date.toLocaleString('en-GB').slice(0, 10)} {\"  \"} ({age} tuổi)\n              </div>\n              {cusData && cusData.gender ?\n                <div className=\"pl-10 gender-print\">\n                  Giới: {cusData.gender === \"male\" ? \"Nam\" : cusData.gender === \"female\" ? \"Nữ\" : \"\"}\n                </div>\n                : <div className=\"gender-print\"></div>}\n              <div className=\"weight-print\">Nặng: {weight}kg</div>\n            </div>\n\n            <div className=\"info-cus pb-5\">\n              <div className=\"address-print\">\n                Địa chỉ : {address?.street}-{address?.ward}-{address?.district}-\n                { address?.province?.indexOf(\"Thành phố\") > -1 ? address?.province?.replace(\"Thành phố \", \"\") : address?.province?.replace(\"Tỉnh \", \"\") }\n              </div>\n              <div className=\"phone-print\">\n                ĐT : {phone}\n              </div>\n            </div>\n            <div>Chẩn đoán: <b>{textDiagnosis}</b></div>\n            <div className=\"order-product\">\n              <Row className=\"pt-5 title-order\">\n                <Col xs={{ 'size': '6', 'offset': '1' }}><u>Thuốc điều trị</u></Col>\n                <Col xs=\"2\"><u>Số lượng</u></Col>\n                <Col xs={2}><u>Đơn vị</u></Col>\n              </Row>\n              {rowEtcArr}\n            </div>\n            <div className=\"d-flex justify-content-between px-4\">\n              <div>\n                <div className=\"pb-5 pt-30\"><b>Nếu bất thường đến cơ sở y tế gần nhất.</b></div>\n                <div className=\"pb-5\"><b>Khám lại sau : {reExamDate ? reExamDate : \".....\"} Ngày!</b></div>\n                <div><b>Khám lại mang theo đơn này.</b></div>\n              </div>\n              <div className=\"text-center mr-10\">\n                <div className=\"text-center mr-auto ml-5 \">\n                  <strong>Bác sĩ điều trị</strong><br></br>\n                  <i>(ký, ghi rõ họ tên)</i> <br></br><br></br><br></br><br></br>\n                  <b className=\"mt-5\">{this.state.doctorInfo?.full_name}</b>\n                </div>\n              </div>\n            </div>\n          </div>\n          {rowOtcArr.length > 0 &&\n            <div className=\"pl-30 pr-15 PrintEtc\" id=\"PrintOtc\">\n              <Row className=\"header-print\">\n                <div className=\"print-w-60 absolute\">\n                  <HeadedPrint />\n                </div>\n                <div className=\"print-w-40\">\n                  <canvas id=\"canvasOrderOtc\" style={{ height: \"13mm\", marginRight: '20px' }}></canvas>\n                </div>\n              </Row>\n              <div className=\"text-center print-title\">\n                ĐƠN THUỐC\n              </div>\n              <div className=\"text-center\">\n                <i> {current.getHours()} Giờ {current.getMinutes()} Phút, Ngày {current.getDate()} Tháng {current.getMonth() + 1} Năm {current.getFullYear()}</i>\n              </div>\n              <div className=\"info-cus\">\n                <div className=\"text-left  print-w-50\">\n                  <canvas id=\"canvasCusOtc\" style={{ height: \"13mm\" }}></canvas>\n                </div>\n                <div className=\"print-w-50 text-center\">\n                  Mã phiếu thu: {otcCode}\n                </div>\n              </div>\n              <div className=\"info-cus\" >\n                <div className=\"print-mw-30 name-print\">\n                  Họ tên: <b>{cusData.full_name}</b>\n                </div>\n                <div className=\"pl-10 birthday-print\">\n                  Ngày Sinh: {date.toLocaleString('en-GB').slice(0, 10)} {\"  \"} ({age} tuổi)\n                </div>\n                {cusData && cusData.gender ?\n                  <div className=\"pl-10 gender-print\">\n                    Giới: {cusData.gender === \"male\" ? \"Nam\" : cusData.gender === \"female\" ? \"Nữ\" : \"\"}\n                  </div>\n                  : <div className=\"gender-print\"></div>}\n                <div className=\"weight-print\">Nặng: {weight}kg</div>\n              </div>\n\n              <div className=\"info-cus pb-5\">\n                <div className=\"address-print\">\n                  Địa chỉ : {address?.street}-\n                  {address?.ward}-\n                  {address?.district}-\n                  { address?.province?.indexOf(\"Thành phố\") > -1 ? address.province.replace(\"Thành phố \", \"\") : address.province.replace(\"Tỉnh \", \"\") }\n                </div>\n                <div className=\"phone-print\">\n                  ĐT : {phone}\n                </div>\n              </div>\n              <div>Chẩn đoán: <b>{textDiagnosis}</b></div>\n              <div className=\"order-product\">\n                <Row className=\"pt-5 title-order\">\n                  <Col xs={{ 'size': '6', 'offset': '1' }}><u>Thuốc điều trị</u></Col>\n                  <Col xs=\"2\"><u>Số lượng</u></Col>\n                  <Col xs={2}><u>Đơn vị</u></Col>\n                </Row>\n                {rowOtcArr}\n              </div>\n              <div className=\"d-flex justify-content-between px-4\">\n                <div>\n                  <div className=\"pb-5 pt-30\"><b>Nếu bất thường đến cơ sở y tế gần nhất.</b></div>\n                  <div className=\"pb-5\"><b>Khám lại sau : {reExamDate ? reExamDate : \".....\"} Ngày!</b></div>\n                  <div><b>Khám lại mang theo đơn này.</b></div>\n                </div>\n                <div className=\"text-center mr-10\">\n                  <div className=\"text-center mr-auto ml-5 \">\n                    <strong>Bác sĩ điều trị</strong><br></br>\n                    <i>(ký, ghi rõ họ tên)</i> <br></br><br></br><br></br><br></br>\n                    <b className=\"mt-5\">{this.state.doctorInfo?.full_name}</b>\n                  </div>\n                </div>\n              </div>\n            </div>}\n        </div>\n\n      </div>\n    );\n  }\n}","import { Http } from \"../../../../Helper/Http.js\";\n\nconst API_ENDPOINT = {\n    GET_ORDER: '/order/order/get?code=',\n\n    GET_CUSTOMER: '/customer/customer/get?code=',\n\n    GET_ORDER_BY_CUSTOMER: '/job/job/list?type=buy&&customer_id=',\n\n    GET_JOB: '/job/job/list?customer_id=',\n\n    LIST_LOT: '/inventory/lot/list',\n\n    CREATE_TRANSACTION: '/inventory/transaction/for_order',\n\n    CREATE_TRANSACTION_RETAIL: '/inventory/transaction/for_retail',\n\n    CREATE_ACCOUNTING_TRANSACTION: '/accounting/transaction/create',\n\n    SEARCH_PRODUCT: '/inventory/search?by=product&&text=',\n\n    FINISH_ORDER: '/job/step/finish',\n\n    CREATE_ORDER: '/job/step/add',\n\n    CREATE_DETAIL_ORDER: '/retail/create',\n\n    UPDATE_QUANTITY_PRODUCT: '/order/item/update',\n}\n\nclass PharmacyService {\n  constructor() {\n    if (PharmacyService._instance) {\n      return PharmacyService._instance;\n    }\n    PharmacyService._instance = this;\n\n    // ... Your rest of the constructor code goes after this\n  }\n\n  getOrder(code) {\n    return Http.get(API_ENDPOINT.GET_ORDER + code);\n  }\n  getOrderByCustomer(id) {\n    return Http.get(API_ENDPOINT.GET_ORDER_BY_CUSTOMER + id);\n  }\n  getCustomer(code) {\n    return Http.get(API_ENDPOINT.GET_CUSTOMER + code);\n  }\n  getJob(customerId){\n    return Http.get(API_ENDPOINT.GET_JOB + customerId);\n  }\n  listLot() {\n    return Http.get(API_ENDPOINT.LIST_LOT);\n  }\n  createTransaction(data) {\n    return Http.post(API_ENDPOINT.CREATE_TRANSACTION, data);\n  }\n  createTransactionRetail(data) {\n    return Http.post(API_ENDPOINT.CREATE_TRANSACTION_RETAIL, data);\n  }\n  createAccountingTransaction(data) {\n    return Http.post(API_ENDPOINT.CREATE_ACCOUNTING_TRANSACTION, data);\n  }\n  searchProduct(text) {\n    return Http.get(API_ENDPOINT.SEARCH_PRODUCT + text);\n  }\n\n  finishOrder(data) {\n    return Http.post(API_ENDPOINT.FINISH_ORDER, data);\n  }\n\n  createOrder(data) {\n    return Http.post(API_ENDPOINT.CREATE_ORDER, data);\n  }\n\n  createRetailOrder(data) {\n    return Http.post(API_ENDPOINT.CREATE_DETAIL_ORDER, data);\n  }\n  updateQuantity(data) {\n    return Http.post(API_ENDPOINT.UPDATE_QUANTITY_PRODUCT, data);\n  }\n}\n\nconst instance = new PharmacyService();\n\nexport default instance;\n","import React, { useState } from 'react';\nimport { Input, Table } from 'reactstrap';\nimport PharmacyService from '../../../../Pharmacy/Components/Shared/PharmacyService';\nimport ModalNoti from '../../../../../Shared/Components/ModalNoti/ModalNoti'\nimport { ONE_DAY } from '../../../../../Constances/const';\n\nconst FormSearch = (props) => {\n    const [list, setList] = useState([]);\n\n    const [pattern, setPattern] = useState('');\n\n    const [notiMessage, setNotiMessage] = useState('');\n\n    const [focusSearch, setFocusSearch] = useState(false);\n\n    const onFocusSearch = () => {\n        setFocusSearch(true);\n    }\n    const onBlurSearch = () => {\n        if(pattern.length === 0){\n            setFocusSearch(false);\n        }  \n    }\n    const onChangeSearch = (e) => {    \n        setPattern(e.target.value);\n\n        if(pattern.length>0){\n            setFocusSearch(true);\n            PharmacyService.searchProduct(pattern)\n            .then(res => {\n                let arr = res.data.filter (i => {\n                    if(i.item.oldestLot){\n                        let result = remainDate(i.item.oldestLot.exp_date);\n                        if (result < 31) {\n                            i.item.oldestLot.color = '#e09491';\n                        } else if (result < 91) {\n                            i.item.oldestLot.color = '#80d1a6';\n                        } else {\n                            i.item.oldestLot.color = 'black';\n                        }                \n                        const ALMOST_OUT =100;\n                        const NORMAL = 300;\n                        i.item.color = i.item.totalRemain<ALMOST_OUT ? '#d26d69' : i.item.totalRemain < NORMAL ? '#28b76b' : 'black';\n                        return i;\n                    }\n                })\n                setList(arr);\n            }).catch(err => {\n                console.log(err);      \n            });\n        }\n    } \n    const onKeyDown = (e) => {\n        if(e.keyCode === 13 && list.length > 0 && pattern){\n            setPattern('');\n            setFocusSearch(false)\n            props.onSelect(list[0].item);\n        }\n    }\n    const addMed = (ev, item) => {\n        if(item.oldestLot){\n            setPattern('');\n            setFocusSearch(false)\n            props.onSelect(item);\n        }else{\n            setNotiMessage('Sản phẩm này hiện đang không bán!');\n        }\n    }\n    const remainDate = (exp_date) => {\n        let now = Date.now();\n        let time = new Date(exp_date).getTime();\n        let result = (time - now) / ONE_DAY;\n        return Math.ceil(result);\n    }\n    const doneAlert = () => {\n        setNotiMessage('');\n    }\n    let itemSearch = list.map((data, i) => {\n        return (\n            <tr className=\"pointer\" key={i}  onClick={(ev) => addMed(ev, data.item)} >\n                <td> {data.item.name} </td>\n                <td>{data.item.parts.map((p,index) => {\n                        return <span key={index}>{p.name}, </span>\n                    })} \n                </td>   \n                <td> {new Intl.NumberFormat('de-DE').format(data.item.price)}đ </td>\n                <td> <span style={{ 'color' : data.item.oldestLot.color }}>{ data.item.oldestLot?  data.item.oldestLot.code : 'Null'}</span> </td>\n                <td> { data.item.oldestLot?  data.item.oldestLot.remain : 'Null'} </td>\n                <td> <span style={{ 'color' : data.item.color }}>{data.item.totalRemain}</span> </td>\n            </tr>\n        );\n    });\n    \n    return (\n        <div className=\"filter\">\n            <div>\n                <Input onChange={e => onChangeSearch(e)}\n                    className=\"pattern-product\"\n                    placeholder='Nhập tên thuốc'\n                    value={pattern}\n                    disabled={props.order_id !== ''}\n                    onFocus={onFocusSearch}\n                    onBlur={onBlurSearch}\n                    onKeyDown={onKeyDown}\n                />\n            </div>\n        {pattern !== '' ?\n            <div>\n                <Table size=\"sm\" hover striped bordered className=\"list-prescription\">\n                    <thead>\n                        <tr>\n                            <th>Tên</th>\n                            <th>Thành phần</th>\n                            <th>Giá</th>\n                            <th>Lô cũ nhất</th>\n                            <th>Tồn kho</th>\n                            <th>Tổng tồn kho</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {itemSearch}\n                    </tbody>\n                </Table>\n            </div>\n        : null  }\n        {focusSearch ? <div className=\"pharmacy-opacity pharmacy-opacity-top\"></div> : null}\n        {/* {focusSearch ? <div className=\"pharmacy-opacity pharmacy-opacity-bot\"></div> : null} */}\n        <ModalNoti message={notiMessage} done={doneAlert}></ModalNoti>\n        </div>\n    )\n}\n\nexport default FormSearch;","import React from 'react';\nimport { Col, Row, Table, Button, Input, Modal, ModalHeader, ModalBody, ModalFooter, } from 'reactstrap';\nimport PrintPrescription from './printPrescriptions'\nimport { PrintPre } from './PrintPre';\nimport { Form, ModalNoti, ShareService } from '../../../../../Shared';\nimport DoctorServices from '../../../Shared/DoctorService';\nimport { STEP_TYPE, ORDER_TYPE, SERVICE_TYPE, STATUS, PRODUCT_UNIT } from \"../../../../../Constances/const\";\nimport FormSearch from \"./FormSearch\"\nimport SharedService from \"../../../../../Shared/Services/SharedService\";\nimport { ROUTE } from \"../../../../../Constances/const\";\nimport ReactToPrint from \"react-to-print\";\nclass Prescriptions extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            prodOther: '',\n            job: props.job,\n            tab: 1,\n            messaget: '',\n            renderOTCArr: [],\n            renderETCArr: [],\n            etcArr: [],\n            tPriceETC: 0,\n            otcArr: [],\n            tPriceOTC: 0,\n            orderCode: [],\n            newOrderCode: [],\n            etcCode: '',\n            otcCode: '',\n            show: false,\n            cusSubInfo: {},\n            SubMedArr: [],\n            subCode: \"\",\n            reExamDate: \"\",\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.job.id !== prevState.job.id) {\n            return { job: nextProps.job };\n        }\n        return null;\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.job !== this.props.job) {\n            let job = this.props.job;\n            let etcArr = [].concat(...job.steps.filter(s => s.type === STEP_TYPE.BUY && s.order.type === ORDER_TYPE.ETC.code)\n                .map(s => s.order.items))\n                .map(it => {\n                    let med = it.ref_value;\n                    med.quantity = it.quantity;\n                    med.total = +it.quantity * +med.price;\n                    med.old = true;\n                    med.attrs.instruction = it.attrs?.instruction;\n                    return med;\n                });\n            let otcArr = [].concat(...job.steps.filter(s => s.type === STEP_TYPE.BUY && s.order.type === ORDER_TYPE.OTC.code)\n                .map(s => s.order.items))\n                .map(it => {\n                    let med = it.ref_value;\n                    med.quantity = it.quantity;\n                    med.total = +it.quantity * +med.price;\n                    med.old = true;\n                    med.attrs.instruction = it.attrs?.instruction;\n                    return med;\n                });\n            this.setState({\n                job: this.props.job,\n                tab: 1,\n                etcArr,\n                tPriceETC: this.calTPrice(etcArr),\n                otcArr,\n                tPriceOTC: this.calTPrice(otcArr),\n            });\n\n        }\n    }\n\n    onChangeQuantity = (ev, index) => {\n        let keyMedArr = this.state.tab == 1 ? 'etcArr' : 'otcArr';\n        let keyTPrice = this.state.tab == 1 ? 'tPriceETC' : 'tPriceOTC';\n        let medArr = this.state[keyMedArr];\n        medArr[index].quantity = ev.target.value;\n        medArr[index].total = +ev.target.value * +medArr[index].price;\n        let tPrice = this.calTPrice(medArr);\n        this.setState({\n            [keyMedArr]: medArr,\n            [keyTPrice]: tPrice,\n        })\n    }\n\n    onChangeInstruction = (ev, index) => {\n        let keyMedArr = this.state.tab == 1 ? 'etcArr' : 'otcArr';\n        let medArr = this.state[keyMedArr];\n        medArr[index].attrs.instruction = ev.target.value;\n        this.setState({\n            [keyMedArr]: medArr,\n        })\n    }\n    addMed = (med) => {\n        const { textSymptom, textDiagnosis } = this.state.job?.state || '';\n        if(textSymptom && textDiagnosis) {\n            let { tab, etcArr, tPriceETC, otcArr, tPriceOTC, job } = this.state;\n            const jobSubclinical = job.state?.subclinical;\n            med.note = '';\n            med.quantity = 1;\n            med.total = med.price;\n            med.attrs.instruction = jobSubclinical && jobSubclinical.weight && jobSubclinical.weight < 30 ?\n                `Ngày uống: ${med.attrs.default_daily_usage} lần x ${med.attrs.unit === 'tablet' ? (med.attrs.max_dose_per_kg * jobSubclinical.weight / med.attrs.strength) + 'viên' : med.attrs.max_dose_per_kg * jobSubclinical.weight + med.attrs.unit}`   \n                : `Ngày uống: ${med.attrs.default_daily_usage} lần x ${med.attrs.unit === 'tablet' ? med.attrs.default_quantity / med.attrs.strength + ' viên' : med.attrs.default_quantity + med.attrs.unit}`\n    \n            if (tab == 1) {\n                let count = 0;\n                etcArr.forEach(e => {\n                    if (e.id === med.id) count++;\n                });\n                if (count > 0) {\n                    this.setState({ message: 'Đã có thuốc này trong đơn!' })\n                } else {\n                    etcArr.push(med);\n                    tPriceETC = this.calTPrice(etcArr);\n                }\n            } else {\n                let count = 0;\n                otcArr.forEach(e => {\n                    if (e.id === med.id) count++;\n                });\n                if (count > 0) {\n                    this.setState({ message: 'Đã có thuốc này trong đơn!' })\n                } else {\n                    otcArr.push(med);\n                    tPriceOTC = this.calTPrice(otcArr);\n                }\n            }\n            console.log(etcArr);\n            this.setState({\n                etcArr,\n                tPriceETC,\n                otcArr,\n                tPriceOTC,\n            })\n        } else {\n            this.setState({\n                message: 'Triệu chứng và chẩn đoán không được bỏ trống'\n            })\n        }\n    }\n    addProdOther = () => {\n        let { prodOther, etcArr, otcArr, tab } = this.state\n        let med = {\n            name: prodOther,\n            attrs: {\n                instruction: 'Có thể thay thế bằng loại thuốc tương tự.'\n            },\n            dontHave:  true,\n            parts: [],\n        }\n        if (tab == 1) {\n            etcArr.push(med);\n            this.setState({ \n                etcArr,\n                prodOther: '' \n            })\n        }else{\n            otcArr.push(med);\n            this.setState({ \n                otcArr,\n                prodOther: '' \n            })\n        }\n        console.log(otcArr);\n    }\n    onRemoveMed = (index) => {\n        let keySource = this.state.tab == 1 ? 'etcArr' : 'otcArr';\n        let source = this.state[keySource];\n        let keyPrice = this.state.tab == 1 ? 'tPriceETC' : 'tPriceOTC'\n        source.splice(index, 1);\n        this.setState({\n            [keySource]: source,\n            [keyPrice]: this.calTPrice(source)\n        })\n    }\n\n    calTPrice(medArr) {\n        return medArr.reduce((a, b) => +a + +b.total, 0);\n    }\n\n    submitListProduct = () => {\n        const { textSymptom, textDiagnosis } = this.state.job.state;\n        if (textSymptom && textDiagnosis) {\n            let promises = [];\n            let arr = [{ key: 'etcArr', order_type: ORDER_TYPE.ETC.code }, { key: 'otcArr', order_type: ORDER_TYPE.OTC.code }];\n            arr.forEach(el => {\n                let newAssignment = this.state[el.key].filter(med => !med.old && !med.dontHave);\n                if (newAssignment.length) {\n                    promises.push(DoctorServices.addJobStep({\n                        job_id: this.props.job.id,\n                        type: STEP_TYPE.BUY,\n                        order_type: el.order_type,\n                        items: newAssignment.map(it => ({\n                            ref: 'product',\n                            ref_id: it.id,\n                            quantity: it.quantity,\n                            attrs: {\n                                instruction: it.attrs.instruction,\n                            }\n                        }))\n                    }))\n                }\n            })\n            Promise.all(promises).then(res => {\n                let newOrderCode = []\n                let { orderCode } = this.state;\n                res.forEach(el => {\n                    orderCode.push(el.data);\n                    newOrderCode.push(el.data)\n                });\n                this.setState({\n                    orderCode,\n                    message: 'Yêu cầu thuốc thành công!'\n                });\n\n                if (newOrderCode.length == 2) {\n                    this.setState({\n                        etcCode: newOrderCode[0].code,\n                        otcCode: newOrderCode[1].code\n                    });\n                }\n                else if (newOrderCode.length == 1) {\n                    this.setState({\n                        etcCode: newOrderCode[0].code,\n                        otcCode: newOrderCode[0].code,\n                    })\n                }\n\n            }).catch(err => {\n                this.setState({ message: 'Có lỗi xảy ra, xin vui lòng thử lại' })\n                console.log(err);\n            })\n        } else {\n            this.setState({\n                message: 'Triệu chứng và chẩn đoán không được bỏ trống'\n            })\n        }\n\n    }\n    handleClose = () => {\n        this.setState({\n            show: false\n        })\n    }\n    onSetDone = () => {\n        this.setState({\n            show: true\n        })\n    }\n    onDone = () => {\n        const id = this.props.stepId;\n        const status = STATUS.DONE;\n        DoctorServices.finishDiagnosis({ id: id, results: [status]}).then(res => {\n            this.props.onRefresh()\n            this.setState({\n                message: \"Đã hoàn thành\",\n                show: false,\n                // reExamDate: ''\n            })\n            window.location.reload();\n        }).catch(err => console.log(err))\n    }\n\n    closeNotice = () => {\n        this.setState(state => ({\n            ...state,\n            message: \"\"\n        }))\n    }\n\n    print = async () => {\n        await SharedService.print(\"medPrintId\")\n    }\n    reExamination = (el) => {\n        this.setState({\n            reExamDate: el.target.value\n        })\n    }\n    render() {\n        let { job, etcArr, tPriceETC, otcArr, tPriceOTC, tab, } = this.state;\n        let renderETCArr = etcArr.map((med, i) => this.renderMed(med, i))\n        let renderOTCArr = otcArr.map((med, i) => this.renderMed(med, i))\n        return (\n            <div className=\"Prescriptions\">\n                <Row className=\"panel-heading mt-0  \">\n                    <Col sm=\"4\" className=\"title-card\">\n                        <span\n                            onClick={() => this.setState({ tab: 1 })}\n                            className={tab == 1 ? 'active_tab' : ''}\n                        >Đơn chỉ định</span>{\"  \"}\n                        <span\n                            onClick={() => this.setState({ tab: 2 })}\n                            className={tab == 2 ? 'active_tab' : ''}\n                        >Đơn bổ sung</span>\n                    </Col>\n                    <Col sm=\"3\">\n                        <Input\n                            placeholder=\"Nhập thuốc không có tại quầy\"\n                            value={this.state.prodOther}\n                            onChange={el => this.setState({ prodOther: el.target.value })}\n                        ></Input>\n                    </Col>\n                    <Col sm=\"1\">\n                        <Button onClick={this.addProdOther}>Thêm</Button>\n                    </Col>\n                    <Col sm={{ size: '2', offset: '2' }}>\n                        <Input\n                            placeholder=\"nhập số ngày khám lại\"\n                            value={this.state.reExamDate}\n                            onChange={el => this.reExamination(el)}\n                        ></Input>\n                    </Col>\n                </Row>\n                <div className=\"panel-body\">\n                    <div className=\"list-choice-prescription\">\n                        <div className=\"product-table table-responsive min-h-50 df-h-25\">\n                            <table className=\"table table-head-fixed table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th className=\"product-index dh-3\">#</th>\n                                        <th className=\"product-name dh-3\">Tên Dược</th>\n                                        <th className=\"product-part dh-3\">Hoạt chất</th>\n                                        <th className=\"product-unit dh-3\">Đơn vị</th>\n                                        <th className=\"product-route dh-3\">Đường dùng</th>\n                                        <th className=\"product-instruction dh-3\">Cách dùng</th>\n                                        <th className=\"product-quantity dh-3\">Số lượng</th>\n                                        <th className=\"product-price dh-3\">Đơn giá</th>\n                                        <th className=\"product-total dh-3\">Tổng</th>\n                                        <th className=\"product-options dh-3\"></th>\n                                    </tr>\n                                </thead>\n                                <tbody className=\"body-half-screen\">\n                                    {tab == 1 ?\n                                        renderETCArr : renderOTCArr\n                                    }\n                                    <tr>\n                                        <th className=\"\">#</th>\n                                        <th className=\"search-product\"><FormSearch order_id='' onSelect={this.addMed}></FormSearch></th>\n                                        <th className=\"\"></th>\n                                        <th className=\"\"></th>\n                                        <th className=\"\"></th>\n                                        <th className=\"\"></th>\n                                        <th className=\"\"></th>\n                                        <th className=\"\"></th>\n                                        <th className=\"\"></th>\n                                        <th className=\"\"></th>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        <Row>\n                            <Col sm={3} className=\"pl-0\">\n                                <p className=\"title-card\"><span className=\"material-icons\">monetization_on</span> Tổng tiền: <span>{tab == 1 ? new Intl.NumberFormat('de-DE').format(tPriceETC) : new Intl.NumberFormat('de-DE').format(tPriceOTC)}đ</span></p>\n                            </Col>\n                            <Col className=\"btn-count-print end pr-0\">\n                               \n                                <Button color='primary' hidden={!job || !job.id}\n                                    onClick={this.submitListProduct}>Yêu cầu thuốc</Button>{' '}\n                                <ReactToPrint\n                                    trigger={() => <Button  hidden={!job || !job.id} color='primary'>In đơn thuốc</Button>}\n                                    content={() => this.componentRef}\n                                />{' '}\n                                {/* <Button color='primary'\n                                    hidden={!job || !job.id}\n                                    onClick={this.print}\n                                >In Đơn Thuốc</Button>{' '} */}\n                                <Button color='primary' hidden={!job || !job.id}\n                                    onClick={() => this.onSetDone()}>Hoàn thành</Button>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n                <Modal isOpen={this.state.show}>\n                    <ModalHeader>Xác nhận hoàn thành bệnh nhân</ModalHeader>\n                    <ModalBody className=\"text-center\">\n                        Bạn hãy xác nhận hoàn thành bệnh nhân\n                    </ModalBody>\n                    <ModalFooter>\n                        <Row>\n                            <Col sm=\"12\" className=\"end\"><Button onClick={this.onDone}>Xác nhận</Button>{\" \"}\n                                <Button color=\"danger\" onClick={this.handleClose}>Hủy</Button>\n                            </Col>\n                        </Row>\n                    </ModalFooter>\n                </Modal>\n                <div hidden>\n                    <PrintPre ref={(el) => (this.componentRef = el)} etcArr={etcArr} reExamDate={this.state.reExamDate} otcCode={this.state.otcCode} tab={this.state.tab} cusData={job && job.steps ? job.steps[0]?.order?.customer : {}} job={job} etcCode={this.state.etcCode} otcArr={otcArr} />\n                </div>\n                {/* <PrintPrescription etcArr={etcArr} reExamDate={this.state.reExamDate} otcCode={this.state.otcCode} job={job} etcCode={this.state.etcCode} otcArr={otcArr}\n                    cusData={this.props.cusData}\n                ></PrintPrescription> */}\n                <ModalNoti message={this.state.message} done={() => this.setState({ message: '' })}></ModalNoti>\n            </div>\n        );\n    }\n\n    renderMed = (med, index) => {\n        let { job } = this.state;\n        return (\n            <tr className={`pointer${med.old ? ' old' : ''}`} key={index}>\n                <td className=\"product-index dh-3 middle \">{index + 1}</td>\n                <td className=\"product-name dh-3\">{med.name}</td>\n\n                <td className=\"product-part dh-3\">{med.parts?.map(p => p.name).join(', ')}</td>\n                <td className=\"product-unit dh-3 middle\">\n                    {PRODUCT_UNIT.map(u => {\n                        if(u.code === med?.unit)\n                        return <span>{u.label}</span>\n                    })}\n                </td>\n                <td className=\"product-route dh-3 middle\">{ROUTE.map(r => {\n                    if (med.attrs.route === r.value)\n                        return r.name\n                })}</td>\n                <td className=\"product-item-instruction no-padding dh-3\">\n                    <Input type=\"textarea\" value={med.attrs.instruction} disabled={med.old}\n                        onChange={(ev) => this.onChangeInstruction(ev, index)} ></Input>\n                </td>\n                <td className=\"product-quantity product-item-quantity dh-3 middle\">\n                    <Input type=\"number\" value={med.quantity} disabled={med.old}\n                        onChange={(ev) => this.onChangeQuantity(ev, index)} />\n                </td>\n                <td className=\"product-price dh-3 middle\">{med.price ? new Intl.NumberFormat('de-DE').format(med.price) + 'đ' : null}</td>\n                <td className=\"product-total dh-3 middle\">{med.price ? new Intl.NumberFormat('de-DE').format(med.total) + 'đ' : null}</td>\n\n                {med.old ? <td className=\"product-options dh-3 middle\"></td> : <td className=\"dh-3 choice-prescription-delete\" onClick={() => this.onRemoveMed(index)}>Xóa</td>}\n            </tr>\n        )\n    }\n}\n\nexport default Prescriptions;","import React from 'react';\nimport DoctorServices from '../../../Shared/DoctorService';\nimport { Input, Row, Col } from \"reactstrap\";\nimport { Util } from '../../../../../Helper/Util'\nimport { STEP_TYPE } from \"../../../../../Constances/const\";\nimport { Form } from '../../../../../Shared';\n\nclass Diagnosis extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textDiagnosis: '',\n            textSymptom: '',\n            message: '',\n            testResultList: [],\n        }\n    }\n\n    componentDidUpdate = (preProps) => {\n        if (preProps.job.id !== this.props.job.id) {\n            this.setState({\n                textDiagnosis: this.props.job.state.textDiagnosis,\n                textSymptom: this.props.job.state.textSymptom,\n            })\n        }\n        if (preProps.job.id !== this.props.job.id &&\n            this.props.job &&\n            this.props.job.steps &&\n            this.props.job.steps.length\n        ) {\n            let testResultList = this.props.job.steps.filter(s => s.type === STEP_TYPE.TEST);\n            this.setState({ testResultList });\n        }\n    }\n    onBlurDiagnosis = () => {\n        let { job } = this.props\n        if (this.state.textDiagnosis !== '') {\n            DoctorServices.postSubclinical({\n                id: job.id,\n                state: {\n                    textSymptom: this.state.textSymptom,\n                    textDiagnosis: this.state.textDiagnosis,\n                }\n            }).then(res => {\n                job.state = job.state || {};\n                job.state.textDiagnosis = this.state.textDiagnosis;\n                job.state.textSymptom = this.state.textSymptom;\n                console.log(\"thành công\", res);\n            })\n            this.props.onChangetextDiagnosis(this.state.textDiagnosis)\n        }\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    render() {\n        return (\n            <div className='Diagnosis'>\n                <Row>\n                    <p className=\"title-card\"><span className=\"material-icons\">playlist_add_check</span>Triệu chứng</p>\n                    <textarea\n                        className=\"form-control symptom\"\n                        value={this.state.textSymptom}\n                        name=\"textSymptom\"\n                        onChange={this.onChange} onBlur={() => { this.onBlurDiagnosis() }}\n                        disabled={!this.props.job.id}></textarea>\n                </Row>\n                <Row>\n                    <p className=\"title-card\"><span className=\"material-icons\">playlist_add_check</span> Chẩn đoán</p>\n                    <textarea\n                        className=\"form-control diag\"\n                        value={this.state.textDiagnosis}\n                        onKeyDown={(e) => Util.onKeyDown(e)}\n                        data-index=\"6\"\n                        name=\"textDiagnosis\"\n                        onChange={this.onChange} onBlur={() => { this.onBlurDiagnosis() }}\n                        disabled={!this.props.job.id}\n                    ></textarea>\n                </Row>\n            </div>\n        )\n    }\n}\nexport default Diagnosis;","import React from \"react\";\nimport { Row, Col, TabContent, TabPane, Nav, NavItem, NavLink, } from \"reactstrap\";\nimport { Form } from \"../../../../Shared\";\nimport Diagnostic from \"./Diagnostic/Diagnostic\";\nimport PreExamination from \"./PreExamination/PreExamination\";\nimport Prescriptions from \"./Prescriptions/Prescriptions\";\nimport DoctorServices from \"../../Shared/DoctorService\";\nimport CustomerForm from \"../../../../Shared/Components/CustomerForm/CustomerForm\";\nimport PatientList from \"../../../../Shared/Components/PatientList/PatientList\";\nimport Diagnosis from \"./Diagnosis/Diagnosis\";\nimport { withRouter } from \"react-router\";\nimport { STATUS, SERVICE_TYPE, LOCATION_TYPE } from \"../../../../Constances/const\";\nimport { Microscope } from \"../../../../Shared\";\nimport classnames from 'classnames';\nclass JobDoctor extends Form {\n  constructor(props) {\n    super(props);\n    this.state = {\n      servicesList: [],\n      ProductList: [],\n      patientList: [],\n      selectedJobStep: {},\n      selectedJob: {},\n      textDiagnosis: \"\",\n      activeTab: '1',\n      titleWaitForExam: \"Danh Sách Bệnh Nhân Chờ\",\n      navActiveListPeople: false,\n      navActiveExam: false,\n      notiQuantity: 0,\n      resultList: []\n    };\n  }\n  componentDidMount() {\n    let promises = [\n      DoctorServices.getListServices(),\n      DoctorServices.getListProduct(),\n    ];\n    Promise.all(promises).then(([serviceList, medList]) => {\n      let data = serviceList.data\n        .filter(el => el.type === SERVICE_TYPE.TEST || el.type === SERVICE_TYPE.ENT || el.type === SERVICE_TYPE.ULTRASOUND || el.type === SERVICE_TYPE.XRAY || el.type === SERVICE_TYPE.OTHER);\n      this.setState({\n        servicesList: data,\n        ProductList: medList.data,\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  onSelectJobStep = async (jobStep) => {\n    DoctorServices.getJobById({ id: jobStep.job_id }).then(res => {\n      res.state = res.state || {};\n      res.state.subclinical = res.state.subclinical || {};\n      res.state.textDiagnosis = res.state.textDiagnosis || '';\n      this.setState({\n        selectedJobStep: jobStep,\n        selectedJob: res,\n      });\n    }).catch(err => {\n      console.log(err);\n    })\n  };\n  selectTypeCustomer = (tab) => {\n    let { activeTab } = this.state\n    if (activeTab !== tab) this.setState({ activeTab: tab })\n  }\n  handleReviewExamResult = (ser_id) => {\n  }\n\n  jobListAction = {\n    refresh: null,\n  }\n  setNotiQuantity = (num) => {\n    this.setState({\n      notiQuantity: num\n    })\n  }\n  shortKeyShowListPeople = (e) => {\n    if (e.ctrlKey && e.key === \"l\") {\n      e.preventDefault();\n      this.setState({ navActiveListPeople: true, })\n    }\n  }\n\n  myRef = React.createRef();\n  handleClickOutside = e => {\n    if (!this.myRef.current.contains(e.target)) {\n      this.setState({ navActiveListPeople: false });\n    }\n  };\n  hiddenPatientList = () => {\n    this.setState({ navActiveListPeople: false });\n  }\n  onChangetextDiagnosis = (ev) => {\n    this.setState({\n      textDiagnosis: ev\n    })\n  }\n  render() {\n    // console.log(DoctorServices.location, 986543);\n    let locationType = DoctorServices.location.type;\n    let {\n      notiQuantity,\n      servicesList,\n      ProductList,\n      selectedJobStep,\n      selectedJob,\n      activeTab,\n    } = this.state;\n    let cusData = selectedJobStep.order ? selectedJobStep.order.customer : {};\n    let location_id = selectedJobStep.location ? selectedJobStep.location.id : \"\";\n    return (\n      <div className=\"JobDoctor\" onKeyDown={(e) => this.shortKeyShowListPeople(e)} tabIndex=\"0\">\n        <Row className=\"title-card\">\n          <Col>\n            <span>{DoctorServices.location?.name}</span>\n          </Col>\n          <Col className=\"end\">\n            <span className=\"select-office text-right\" onClick={() => {\n              DoctorServices.location = {};\n              window.location.replace('/app/doctor')\n            }}><b>Chuyển phòng</b></span>\n          </Col>\n        </Row>\n        <hr className=\"mb-0 mt-0\" />\n        <Row className=\"content\">\n          <Col>\n            <Row className=\"mt-1 mb-15\">\n              <Col sm=\"7\">\n                <div className=\"customCard p-15 mr-15 content-left\">\n                  <CustomerForm data={cusData} mode=\"compact\" />\n                  <PreExamination job={selectedJob} />\n                  <Diagnosis job={selectedJob} onChangetextDiagnosis={this.onChangetextDiagnosis} />\n                </div>\n              </Col>\n              <Col sm=\"5\">\n                <Diagnostic\n                  textDiagnosis={this.state.textDiagnosis}\n                  resultList={this.state.resultList}\n                  servicesList={servicesList}\n                  cusData={cusData}\n                  stepId={selectedJobStep.id}\n                  job={selectedJob}\n                  onRefresh={this.jobListAction.refresh}\n                />\n              </Col>\n            </Row>\n            <Row className=\"customCard p-15\">\n              <Prescriptions\n                ProductList={ProductList}\n                cusData={cusData}\n                job={selectedJob}\n                stepId={selectedJobStep.id}\n                onRefresh={this.jobListAction.refresh}\n              />\n            </Row>\n          </Col>\n        </Row>\n        <div className={this.state.navActiveListPeople || this.state.navActiveExam ? \"nav-active\" : \"nav-disable\"}>\n          <div className=\"group-btn\">\n            {/* <button className=\"btn-circle btn-people mb-2\"\n              onClick={() => this.setState({ navActiveListPeople: true })}\n            ><span className=\"material-icons\">people</span></button> */}\n            <p className=\"btn-circle btn-people mb-2 pointer\"\n              onClick={() => this.setState({ navActiveListPeople: true })}\n            ><span className=\"material-icons\">people</span><sup>{notiQuantity > 0 ? <div>{notiQuantity}</div> : null}</sup></p>\n          </div>\n          <div className=\"content\">\n            <div className={this.state.navActiveListPeople ? \"display\" : \"none-display\"}>\n              <div ref={this.myRef}>\n                {locationType === LOCATION_TYPE.EMERGENCY ?\n                  <div>\n                    <Nav tabs className=\"selectTabs\">\n                      <NavItem className=\"titleTabs\">\n                        <NavLink className={classnames({ active: activeTab === '1' })} onClick={() => { this.selectTypeCustomer('1'); }}><b className=\"title-card\">Bệnh nhân chờ khám cấp cứu</b></NavLink>\n                      </NavItem>\n                      <NavItem className=\"titleTabs\">\n                        <NavLink className={classnames({ active: activeTab === '2' })} onClick={() => { this.selectTypeCustomer('2'); }}><b className=\"title-card\">Bệnh nhân chờ cấp cứu</b></NavLink>\n                      </NavItem>\n                      <NavItem className=\"titleTabs\">\n                        <NavLink className={classnames({ active: activeTab === '3' })} onClick={() => { this.selectTypeCustomer('3'); }}><b className=\"title-card\">Bệnh nhân đã hoàn thành</b></NavLink>\n                      </NavItem>\n                    </Nav>\n                    <TabContent activeTab={activeTab} >\n                      <TabPane tabId=\"1\" className=\"customCard\">\n                        <PatientList\n                          hiddenPatientList={this.hiddenPatientList}\n                          titleOfList={this.state.titleWaitForExam}\n                          action={this.jobListAction}\n                          onSelectJobStep={(jobStep) => this.onSelectJobStep(jobStep)}\n                          location_id={DoctorServices.location.id}\n                          status={[STATUS.READY, STATUS.RUNNING]}\n                          type={SERVICE_TYPE.EXAM}\n                          setNotiQuantity={this.setNotiQuantity}\n                          resultList={this.state.resultList}\n                          hasNoti={true}\n                          mode=\"doctor\" />\n                      </TabPane>\n                      <TabPane tabId=\"2\" className=\"customCard\">\n                        <PatientList\n                          hiddenPatientList={this.hiddenPatientList}\n                          titleOfList={this.state.titleWaitForExam}\n                          action={this.jobListAction}\n                          onSelectJobStep={(jobStep) => this.onSelectJobStep(jobStep)}\n                          location_id={DoctorServices.location.id}\n                          status={[STATUS.READY, STATUS.RUNNING]}\n                          type={SERVICE_TYPE.TEST}\n                          mode=\"doctor\" />\n                      </TabPane>\n                      <TabPane tabId=\"3\" className=\"customCard\">\n                        <PatientList\n                          hiddenPatientList={this.hiddenPatientList}\n                          titleOfList={this.state.titleWaitForExam}\n                          action={this.jobListAction}\n                          onSelectJobStep={(jobStep) => this.onSelectJobStep(jobStep)}\n                          location_id={DoctorServices.location.id}\n                          status={[STATUS.DONE]}\n                          type={SERVICE_TYPE.TEST}\n                          mode=\"doctor\" />\n                      </TabPane>\n                    </TabContent>\n\n                  </div>\n                  :\n                  <div>\n                    <Nav tabs className=\"selectTabs\">\n                      <NavItem className=\"titleTabs\">\n                        <NavLink className={classnames({ active: activeTab === '1' })} onClick={() => { this.selectTypeCustomer('1'); }}><b className=\"title-card\">Bệnh nhân chờ khám</b></NavLink>\n                      </NavItem>\n                      <NavItem className=\"titleTabs\">\n                        <NavLink className={classnames({ active: activeTab === '2' })} onClick={() => { this.selectTypeCustomer('2'); }}><b className=\"title-card\">Bệnh nhân đã hoàn thành</b></NavLink>\n                      </NavItem>\n                    </Nav>\n                    <TabContent activeTab={activeTab} >\n                      <TabPane tabId=\"1\" className=\"customCard\">\n                        <PatientList\n                          hiddenPatientList={this.hiddenPatientList}\n                          titleOfList={this.state.titleWaitForExam}\n                          action={this.jobListAction}\n                          onSelectJobStep={(jobStep) => this.onSelectJobStep(jobStep)}\n                          location_id={DoctorServices.location.id}\n                          status={[STATUS.READY, STATUS.RUNNING]}\n                          type={SERVICE_TYPE.EXAM}\n                          setNotiQuantity={this.setNotiQuantity}\n                          resultList={this.state.resultList}\n                          hasNoti={true}\n                          mode=\"doctor\" />\n                      </TabPane>\n                      <TabPane tabId=\"2\" className=\"customCard\">\n                        <PatientList\n                          hiddenPatientList={this.hiddenPatientList}\n                          titleOfList={this.state.titleWaitForExam}\n                          action={this.jobListAction}\n                          onSelectJobStep={(jobStep) => this.onSelectJobStep(jobStep)}\n                          location_id={DoctorServices.location.id}\n                          status={[STATUS.DONE]}\n                          type={SERVICE_TYPE.EXAM}\n                          mode=\"doctor\" />\n                      </TabPane>\n                    </TabContent>\n                  </div>       \n                 \n                }\n\n              </div>\n              <div className=\"doctor-opacity\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(JobDoctor);\n","import React from 'react';\nimport { Form } from '../../../../Shared';\nimport DoctorServices from '../../Shared/DoctorService';\nimport LocationSelecter from '../../../../Shared/Components/LocationSelecter/LocationSelecter';\nimport { withRouter } from 'react-router';\nimport {LOCATION_TYPE} from '../../../../Constances/const'\n\n\n\n\nclass Main extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            locationList: [],\n        }\n    }\n    componentDidMount() {\n        DoctorServices.getListLocation().then(res => {\n            const result = res.data.filter((item) => item.type === LOCATION_TYPE.EXAMINATION||item.type===LOCATION_TYPE.EMERGENCY);\n            this.setState({\n                locationList: result,\n            })\n        }\n        )\n        const location_id = localStorage.getItem('location_id');\n        this.onLoadLocation(location_id);      \n    }\n    onLoadLocation = (location_id)=>{\n        if(location_id){\n            this.props.history.push('doctor/room/' + location_id);\n        }\n    }\n\n    onSelect = (id, name) => {\n        this.props.history.push('doctor/room/' + id);\n    }\n\n    render() {\n        return (\n            <div style={{ padding: '20px' }}>\n                <LocationSelecter \n                    list={this.state.locationList} \n                    onSelect={this.onSelect}                    \n                ></LocationSelecter>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Main)\n","\nimport React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport DoctorService from \"./Shared/DoctorService\";\nimport JobDoctor from \"./Components/JobDoctor/JobDoctor\";\nimport Main from './Components/Main/Main';\nimport PrintDiagnostic from \"./Components/JobDoctor/Diagnostic/PrintDiagnostic\";\nimport prescription from \"./Components/JobDoctor/Prescriptions/printPrescriptions\";\nimport { LOCATION_TYPE } from \"../../Constances/const\";\n\nclass Doctor extends Component {\n  render() {\n    const { path } = this.props.match;\n    return (\n      <div className=\"Doctor\">\n        <Switch>\n          <Route exact path={`${path}/`} render={() => {\n            if (!DoctorService.location.id || !DoctorService.location.type !== LOCATION_TYPE.EXAMINATION) {\n              return (<Main></Main>)\n            } else {\n              return (<Redirect to={`${path}/room/${DoctorService.location.id}`} ></Redirect>)\n            }\n          }} />\n          <Route exact path={`${path}/room/:id`} component={JobDoctor} />\n          <Route exact path={`${path}/printDiag`} component={PrintDiagnostic} />\n          <Route exact path={`${path}/PrintPre`} component={prescription} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Doctor;\n","import React, { Component, Fragment } from \"react\";\nimport { withRouter } from \"react-router-dom\"\n\nclass ItemLot extends Component {\n\n  onDelete = (id) => {\n    this.props.onDelete(id);\n  };\n  getDate(timeStamp){\n    return new Date(timeStamp)\n  }\n\n  render() {\n    let { listLot, index } = this.props;\n    let ctime=new Date(listLot.mtime)\n      return (\n        <Fragment>\n          { listLot.product_name !== 'NA' ? \n          <tr  key={index}>\n            <th scope=\"row\">{index + 1}</th>\n            <td>{listLot.code}</td>\n            <td>{listLot.product_name}</td>\n            <td>{listLot.warehouse_name}</td>\n            <td>{listLot.total}</td>\n            <td>{listLot.remain}</td>\n            <td>{listLot.man_date}</td>\n            <td>{listLot.exp_date}</td>\n            <td>{ctime.toLocaleString('en-GB')}</td>\n          </tr>\n          :null }\n        </Fragment>\n      );\n    }\n}\n\nexport default withRouter(ItemLot);\n","import { Http } from \"../../../../Helper/Http.js\";\n\nconst API_ENDPOINT = {\n  //////// LOCATION\n  LIST_WAREHOUSE: '/inventory/warehouse/list',\n  LIST_BATCH: '/inventory/lot/list?warehouse_id=',\n  LIST_TRANSACTION: '/inventory/transaction/list',\n  LIST_PRODUCT: '/product/list',\n  LIST_PRODUCER: '/product/producer/list',\n\n  DELETE_PRODUCER: '/product/producer/delete',\n  GET_PRODUCER: '/product/producer/get?id=',\n  EDIT_PRODUCER: '/product/producer/update',\n  POST_PRODUCER: '/product/producer/create',\n\n  GET_PRODUCT: '/product/get?id=',\n\n  ALL_BATCH: '/inventory/lot/list',\n  GET_LOT: '/inventory/lot/get?id=',\n  POST_BATCH: '/inventory/lot/create',\n\n  GET_TRANSACTION: '/inventory/transaction/get?id=',\n  CREATE_TRANSACTION_FOR_LOT: '/inventory/transaction/for_lot',\n}\n\nclass InventoryService {\n  constructor() {\n    if (InventoryService._instance) {\n      return InventoryService._instance;\n    }\n    InventoryService._instance = this;\n\n    // ... Your rest of the constructor code goes after this\n  }\n\n\n  //LIST WAREHOUSE\n  listWareHouse() {\n    return Http.get(API_ENDPOINT.LIST_WAREHOUSE);\n  }\n  //LIST BATCH\n  listLot(warehouse_id) {\n    return Http.get(API_ENDPOINT.LIST_BATCH + warehouse_id);\n  }\n  //LIST TRANSACTION\n  listTransaction() {\n    return Http.get(API_ENDPOINT.LIST_TRANSACTION);\n  }\n  //LIST PRODUCT\n  listProduct() {\n    return Http.get(API_ENDPOINT.LIST_PRODUCT);\n  }\n\n  //ALL BATCH\n  allLot() {\n    return Http.get(API_ENDPOINT.ALL_BATCH);\n  }\n  //DELETE BATCH\n  deleteLot() {\n    throw new Error(\"cannot delete lot\");\n  }\n\n  //GET PRODUCT\n  getProduct(id) {\n    return Http.get(API_ENDPOINT.GET_PRODUCT + id);\n  }\n  //GET BATCH\n  getLot(id) {\n    return Http.get(API_ENDPOINT.GET_LOT + id);\n  }\n\n  //GET TRANSACTION\n  getTransaction(id) {\n    return Http.get(API_ENDPOINT.GET_TRANSACTION + id)\n  }\n\n  //CREATE TRANSACTION\n  createTransactionForLot(data) {\n    return Http.post(API_ENDPOINT.CREATE_TRANSACTION_FOR_LOT, data);\n  }\n\n  //PRODUCT\n  postProduct(payload) {\n    return Http.post(`${API_ENDPOINT.BASE}/create`, payload)\n  }\n  getProductById(id) {\n    return Http.get(`${API_ENDPOINT.BASE}/get`, { id })\n  }\n  delProduct(id) {\n    return Http.post(`${API_ENDPOINT.BASE}/delete`, { id })\n  }\n  editProduct(payload) {\n    return Http.post(`${API_ENDPOINT.BASE}/update`, payload)\n  }\n\n  /////////////WAREHOUSE\n  getWarehouseList() {\n    return Http.get(`${API_ENDPOINT.BASE}/warehouse/list`)\n  }\n  ///////***************************** */\n\n  getLotById(id) {\n    return Http.get(`${API_ENDPOINT.BASE}/lot/get`, { id })\n  }\n  getLotList() {\n    return Http.get(`${API_ENDPOINT.BASE}/lot/list`)\n  }\n  createLot(data) {\n    return Http.post(API_ENDPOINT.POST_BATCH, data)\n  }\n  editLot(payload) {\n    return Http.post(`${API_ENDPOINT.BASE}/lot/update`, (payload))\n  }\n\n  //PRODUCER\n  getProducerList() {\n    return Http.get(`${API_ENDPOINT.LIST_PRODUCER}`)\n  }\n  deleteProducer(data) {\n    return Http.post(`${API_ENDPOINT.DELETE_PRODUCER}`, data)\n  }\n  getProducerbyId(id) {\n    return Http.get(API_ENDPOINT.GET_PRODUCER + id)\n  }\n  editProducer(payload) {\n    return Http.post(API_ENDPOINT.EDIT_PRODUCER, payload)\n  }\n  postProducer(payload) {\n    return Http.post(API_ENDPOINT.POST_PRODUCER, payload)\n  }\n}\n\nconst instance = new InventoryService();\n\nexport default instance;\n","import React, { Component } from \"react\";\nimport { Table, Col, Button, Input, Label, Row } from \"reactstrap\";\nimport ItemLot from './ItemLot';\nimport { Link } from \"react-router-dom\";\nimport InventoryService from \"../Shared/InventoryService\";\nimport ModalConfirm from '../../../../Shared/Components/ModalConfirm/ModalConfirm';\n\nclass ListLot extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      listWareHouse: [],\n      listLot: [],\n      listProduct: [],\n      notiConfirm: '',\n      textSearch: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  // list data location\n  getData() {\n\n    let promiseArr = [];\n    promiseArr.push(InventoryService.allLot());\n    promiseArr.push(InventoryService.listWareHouse());\n    promiseArr.push(InventoryService.listProduct());\n    Promise.all(promiseArr).then(([list_lot, list_warehouse, list_product]) => {\n      let listLot = list_lot.data;\n      let listWareHouse = list_warehouse.data;\n      let listProduct = list_product.data;\n\n      listLot.map(lo => {\n        let foundP = listProduct.find(p => {\n          return lo.product_id === p.id\n        })\n        lo.product_name = foundP ? foundP.name : 'NA';\n        let foundWH = listWareHouse.find(wh => {\n          return lo.warehouse_id === wh.id\n        })\n        lo.warehouse_name = foundWH ? foundWH.name : 'NA';\n        return lo;\n      })\n\n      this.setState({\n        listLot\n      });\n    })\n    .catch((err) => {\n      this.setState({\n        notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n      })\n      console.log(err);\n    });\n  }\n\n  onDelete = (id) => {\n    this.setState({\n      notiConfirm: 'Bạn có chắc chắn muốn xóa !!',\n      id: id\n    })\n  };\n\n  answer = (isYes) => {\n    if (isYes) {\n      let data = {\n        id: this.state.id\n      }\n      InventoryService.deleteLot(data)\n        .then(() => {\n          this.setState({ notiConfirm: '' })\n          this.getData();\n          window.location.href = './inventory/lot'\n        }).catch((err) => {\n          this.setState({\n            notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n          })\n          console.log(err);\n        });\n    } else {\n      this.setState({ notiConfirm: '' })\n    }\n  }\n\n  render() {\n    let { listLot, textSearch } = this.state;\n    let itemLot = listLot.filter(i => i.code?.toUpperCase()?.includes(`${textSearch.toUpperCase()}`) )\n    .map((itemB, index) => {\n      return <ItemLot index={index} listLot={itemB} key={index} onDelete={this.onDelete} />;\n    });\n    return (\n      <Col xs={{ size: '10', offset: '1'}} className=\"customCard mt-3\">\n        <div >\n          <h1 className=\"title-card-lg\">Danh sách lô</h1>\n        </div>\n        <div className=\"addNew\">\n         \n        </div>\n        <Row>\n          <Label xs={1}>Tìm kiếm</Label>\n          <Col xs={2}>\n            <Input placeholder=\"Nhập tên lô\" type=\"search\" onChange={e => this.setState({ textSearch: e.target.value})} />\n          </Col>\n          <Col xs={{ size: '2', offset: '7'}} className=\"end\">\n            <Link to={`./lot/0`}>\n              <Button outline color=\"primary\">Thêm mới</Button>\n            </Link>\n          </Col>\n        </Row>\n        <div className=\"tableManager pt-10\">\n          <Table className=\"managerTable\" hover striped bordered>\n            <thead>\n              <tr>\n                <th >STT</th>\n                <th >Số lô</th>\n                <th>Product</th>\n                <th>Kho</th>\n                <th>Số lượng</th>\n                <th>Tồn kho</th>\n                <th>NSX</th>\n                <th>HSD</th>\n                <th>Ngày tạo</th>\n              </tr>\n            </thead>\n            <tbody className=\"bodyTable\">\n            {itemLot}\n            </tbody>\n          </Table>\n        </div>\n        <ModalConfirm message={this.state.notiConfirm} answer={this.answer}></ModalConfirm>\n      </Col>\n    );\n  }\n}\n\nexport default ListLot;\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, FormGroup, Label, Input, Col, Row } from \"reactstrap\";\nimport InventoryService from \"../Shared/InventoryService\";\nimport ModalNoti from \"../../../../Shared/Components/ModalNoti/ModalNoti\"\nimport ReactAutocomplete from \"react-autocomplete\";\n\nconst FormLot = () => {\n  const [Lot, setLot] = useState({\n    code: \"\",\n    warehouse_id: \"\",\n    product_id: \"\",\n    total: \"\",\n    man_date: \"\",\n    exp_date: \"\",\n  });\n  const [refresh, setRefresh] = useState(true);\n  const [value, setValue] = useState(\"\");\n  \n  const [ProductList, setProductList] = useState([]);\n  //////////////// Sơn_8-4-2021\n  const [WarehouseList, setWarehouseList] = useState([]);\n  ////////////////\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\n  const [notiMessage, setNotiMessage] = useState(\"\");\n  useEffect(() => {\n    fetchProductList();\n    //////////////// Sơn_8-4-2021\n    fetchWarehouseList();\n    ////////////////\n  }, []);\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setLot((Lot) => ({ ...Lot, [name]: value }));\n  };\n\n  const fetchProductList = async () => {\n    let fetchProductList = await InventoryService.listProduct();\n    setProductList(fetchProductList.data);\n  };\n  ////////////////////////////////////////////////\n  const fetchWarehouseList = async () => {\n    let fetchWarehouseList = await InventoryService.listWareHouse();\n    setWarehouseList(fetchWarehouseList.data);\n  };\n  //////////////////////////////////////////////\n  const createLot = () => {\n    const payload = Lot;\n    return InventoryService.createLot(payload);\n  };\n\n  let Warehouse_list = WarehouseList.map((data, i) => {\n    return (\n      <option value={data.id} key={i}>\n        {data.name}\n      </option>\n    );\n  });\n  ////////////////////\n  const onChangeProduct = (e) => {\n    setValue(e.target.value);\n  }\n  const onSelectProduct = (value, item) => {\n    setValue(value)\n    setLot({...Lot, product_id : item.id})\n  }\n  const handleSubmitForm = () => {\n    if(!Lot.warehouse_id) {\n      setNotiMessage('Bạn chưa chọn nhà kho!');\n      setRefresh(false)\n      return\n    } else if(!Lot.code || !Lot.product_id || !Lot.total || !Lot.man_date || !Lot.exp_date) {\n      setNotiMessage('Bạn chưa nhập đủ thông tin!');\n      setRefresh(false)\n    } else {\n      createLot()\n      .then(() => {\n        setNotiMessage('Thêm mới thành công!');\n      })\n      .catch((err) => {\n        console.log(err);\n        setNotiMessage('Có lỗi xảy ra, vui lòng thử lại!');\n      });\n    }\n  };\n\n  const done = () => {\n    if(refresh) {\n      setNotiMessage(\"\");\n      setLot((Lot) => ({ ...Lot, \n        code: \"\",\n        warehouse_id: \"\",\n        product_id: \"\",\n        total: \"\",\n        man_date: \"\",\n        exp_date: \"\", \n      }));\n      setValue(\"\");\n      setRefresh(true);\n    }else {\n      setNotiMessage(\"\");\n      setRefresh(true);\n    }\n    \n  };\n  return (\n    <Fragment>\n      <div className=\"FormLot\">\n        <Row>\n          <ModalNoti message={notiMessage} done={done}></ModalNoti>\n          <Col xs=\"1\"></Col>\n          <Col xs=\"10\">\n            <h1 className=\"title-card-lg\">Thêm Lô Mới</h1>\n            <FormGroup name=\"form_item\">\n              <Row>\n                <Col xs=\"5\">\n                  <Row>\n                    <Col xs=\"4\">\n                      <Label>Tên kho</Label>\n                    </Col>\n                    <Col>\n                      <Input\n                        type=\"select\"\n                        id=\"warehouse_id\"\n                        name=\"warehouse_id\"\n                        value={Lot.warehouse_id}\n                        onChange={(e) => handleChange(e)}\n                      >\n                        <option>Chọn nhà kho</option>\n                        {Warehouse_list}\n                      </Input>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs=\"4\">\n                      <Label>Tên lô</Label>\n                    </Col>\n                    <Col>\n                      <Input\n                        type=\"text\"\n                        id=\"code\"\n                        name=\"code\"\n                        value={Lot.code}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Nhập tên lô\"\n                      ></Input>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs=\"4\">\n                      <Label>Sản phẩm</Label>\n                    </Col>\n                    <Col className=\"auto-form-control\">\n                    <ReactAutocomplete       \n                      items={ProductList}\n                      shouldItemRender={(item, value) => item.name.toLowerCase().indexOf(value.toLowerCase()) > -1}\n                      getItemValue={item => item.name}\n                      renderMenu={ children => (\n                        <div className= \"menu\">\n                           {children.slice(0, 9)}\n                        </div>\n                    )}\n                      renderItem={(item) =>\n                        <div\n                          key={item.id}\n                        >\n                          {item.name}\n                        </div>\n                      }\n                      // value={Lot.product_id}\n                      // onChange={e => setLot({...Lot, product_id : e.target.value})}\n                      // onSelect={value => setLot({...Lot, product_id : value})}\n                      value = {value}\n                      onChange = { e => onChangeProduct(e)}\n                      onSelect = { (value, item) => onSelectProduct(value, item)}\n                    />\n                    </Col>\n                  </Row>               \n                 \n                </Col>\n                <Col xs={{size: '5', offset: '2'}}>\n                <Row>\n                    <Col xs=\"4\">\n                      <Label>Số lượng</Label>\n                    </Col>\n                    <Col>\n                      <Input\n                        type=\"number\"\n                        id=\"total\"\n                        name=\"total\"\n                        value={Lot.total}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Nhập số lượng\"\n                      ></Input>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs=\"4\">\n                      <Label>Ngày nhập</Label>\n                    </Col>\n                    <Col>\n                      <Input\n                        type=\"date\"\n                        name=\"man_date\"\n                        id=\"man_date\"\n                        value={Lot.man_date}\n                        onChange={(e) => handleChange(e)}\n                      ></Input>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs=\"4\">\n                      <Label>Ngày hết hạn</Label>\n                    </Col>\n                    <Col>\n                      <Input\n                        type=\"date\"\n                        name=\"exp_date\"\n                        id=\"exp_date\"\n                        value={Lot.exp_date}\n                        onChange={(e) => handleChange(e)}\n                      ></Input>\n                         \n                    </Col>\n                    <Col xs={12}>\n                      <div className=\"btnControlLot\">\n                        <Button\n                          outline\n                          color=\"primary\"\n                          className=\"btnAddNew\"\n                          onClick={() => handleSubmitForm()}\n                        >\n                          Thêm mới\n                        </Button>\n                          &nbsp; &nbsp;\n                        <Link to=\"/app/inventory/lot\">\n                          <Button className=\"mr-2\" color=\"danger\">Quay lại</Button>\n                        </Link>\n                      </div>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n           \n            </FormGroup>\n          </Col>\n          <Col xs=\"1\"></Col>\n        </Row>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default FormLot;\n","import React, { Component } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\"\nimport { Button } from \"reactstrap\";\n\nclass ItemProducer extends Component {\n\n    onDelete = (id) => {\n        this.props.onDelete(id);\n    };\n\n    render() {\n        let { listProducer, index } = this.props;\n        return (\n                <tr key={index}>\n                    <th scope=\"row\">{index + 1}</th>\n                    <td  className=\"ID\">{listProducer.id}</td>\n                    <td className=\"name\">{listProducer.name}</td>\n                    <td>{listProducer.description}</td>\n                    <td >\n                        <div>            \n                            <Link to={`./producer/${listProducer.id}`} className=\"btn btn-primary btn-sm\" >Sửa {\" \"}</Link>\n                            {\" \"}<Button className=\"btn-sm\" color=\"danger\" onClick={() => this.onDelete(listProducer.id)}>Xóa</Button>\n                        </div>\n                    </td>\n                </tr>\n        );\n    }\n}\n\nexport default withRouter(ItemProducer);\n","import React, { Component } from \"react\";\nimport { Table, Container, Button } from \"reactstrap\";\nimport ItemProducer from './ItemProducer';\nimport { Link } from \"react-router-dom\";\nimport InventoryService from \"../Shared/InventoryService\";\nimport ModalConfirm from '../../../../Shared/Components/ModalConfirm/ModalConfirm';\n\n\nclass ProducerList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      notiConfirm: '',\n      listProducer :[],\n\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  // list data location\n  getData() {\n\n    let promiseArr = [];\n    promiseArr.push(InventoryService.getProducerList());\n    Promise.all(promiseArr).then(([list_producer]) => {\n      let listProducer = list_producer.data;\n      this.setState({\n        listProducer\n      });\n    })\n    .catch((err) => {\n      this.setState({\n        notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n      })\n      console.log(err);\n    });\n  }\n\n  onDelete = (id) => {\n    this.setState({\n      notiConfirm: 'Bạn có chắc chắn muốn xóa !!',\n      id: id\n    })\n   \n  };\n\n  answer = (isYes) => {\n    if (isYes) {\n      let data = {\n        id: this.state.id\n      }\n      console.log(data);\n      InventoryService.deleteProducer(data)\n        .then(() => {\n          this.setState({ notiConfirm: '' })\n          this.getData();\n        }).catch((err) => {\n          this.setState({\n            notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n          })\n          console.log(err);\n        });\n    } else {\n      this.setState({ notiConfirm: '' })\n    }\n  }\n\n  render() {\n    let { listProducer } = this.state;\n    let itemProducer = listProducer.map((itemB, index) => {\n      return <ItemProducer index={index} listProducer={itemB} key={index} onDelete={this.onDelete} />;\n    });\n    return (\n      <Container className=\"customCard mt-3\">\n        <div>\n          <h1 className=\"title-card-lg\">Danh sách nhà sản xuất</h1>\n        </div>\n        <div className=\"addNew\">\n          <Link to={`./producer/0`}>\n            <Button outline color=\"primary\">Thêm mới</Button>\n          </Link>\n        </div>\n        <div className=\"tableManager\">\n          <Table className=\"managerTable\" bordered hover striped>\n            <thead>\n              <tr>\n                <th >STT</th>\n                <th className=\"ID\">ID</th>\n                <th >Tên </th>\n                <th>Thông tin nhà sản xuất</th>\n                <th>Thuộc tính</th>\n              </tr>\n            </thead>\n            <tbody className=\"bodyTable\">\n              {itemProducer}\n            </tbody>\n          </Table>\n        </div>\n        <ModalConfirm message={this.state.notiConfirm} answer={this.answer}></ModalConfirm>\n      </Container>\n    );\n  }\n}\n\nexport default ProducerList;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { Button, FormGroup, Input, Col, Row } from 'reactstrap';\nimport ModalConfirm from \"../../../../Shared/Components/ModalConfirm/ModalConfirm\"\nimport ModalNoti from \"../../../../Shared/Components/ModalNoti/ModalNoti\"\nimport InventoryService from '../Shared/InventoryService';\nimport { Link, useParams } from \"react-router-dom\"\n\nconst FormProducer = () => {\n  let { id } = useParams();\n  const [producer, setProducer] = useState({\n    name: \"\",\n    description: \"\"\n\n  })\n  const [confirmMessage, setConfirmMessage] = useState(\"\")\n  const [notiMessage, setNotiMessage] = useState(\"\")\n  useEffect(() => {\n    if (id !== \"0\") {\n      fetchProducer();\n    }\n  }, [])\n\n  const fetchProducer = async () => {\n    let fetchProducer = await InventoryService.getProducerbyId(id)\n    setProducer(fetchProducer.data)\n  }\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setProducer((producer) => ({ ...producer, [name]: value }));\n  }\n  const editProducer = () => {\n    const payload = producer\n    return InventoryService.editProducer(payload)\n  }\n  const postProducer = () => {\n    const payload = producer\n    return InventoryService.postProducer(payload)\n  }\n  const handleSubmitForm = () => {\n    if (id === \"0\") {\n      postProducer().then(() => {\n            setNotiMessage(\"Thêm mới !\")\n        }).catch((err) => {\n            console.log(err)\n            setNotiMessage(\"Có lỗi xảy ra, vui lòng thử lại!\")\n        })\n\n    } else {\n        //cap nhat\n        setConfirmMessage(\"Bạn đồng ý cập nhật ?\")\n    }\n}\nconst answer = (answer) => {\n  if (answer) {\n    editProducer().then(() => {\n          setConfirmMessage(\"\")\n          setNotiMessage(\"Bạn đã cập nhật thành công!\")\n      }).catch(() => {\n          setNotiMessage(\"Có lỗi xảy ra, vui lòng thử lại!\")\n      })\n\n  } else {\n      setConfirmMessage(\"\")\n  }\n}\n\nconst done = () => {\n  setNotiMessage(\"\")\n}\n\n  return (\n    <Fragment>\n      <Row>\n        <Col xs={2}></Col>\n        <Col xs={8}>\n        <ModalConfirm message={confirmMessage} answer={answer}></ModalConfirm>\n        <ModalNoti message={notiMessage} done={done}></ModalNoti>\n        <h2 className=\"title-card-lg\">{id !== \"0\" ? \"Chỉnh sửa Nhà Sản Xuất\" : \"Thêm mới Nhà Sản Xuất\"}</h2>\n          <FormGroup name=\"producer\">\n            <Row>\n              <Col xs=\"4\">Tên nhà sản xuất</Col>\n              <Col xs=\"8\"> <Input type=\"input\" name=\"name\" id=\"name\" value={producer.name} placeholder=\"nhập tên nhà sx\" onChange={(e) => handleChange(e)} /></Col>\n            </Row>\n            <Row>\n              <Col xs=\"4\">Thông tin nhà sản xuất</Col>\n              <Col xs=\"8\"> <Input type=\"input\" name=\"description\" id=\"description\" value={producer.description} placeholder=\"Nhập thông tin nhà sản xuất\" onChange={(e) => handleChange(e)} /></Col>\n            </Row>\n          </FormGroup>\n          <div className=\"producerCreateControl\">\n            <Button outline color=\"primary\" onClick={() => handleSubmitForm()}>{id !== \"0\" ? \"Cập nhật\" : \"Thêm mới\"}</Button>\n            <Link to=\"/app/inventory/producer\">\n              {\" \"}<Button className=\"mr-2\" color=\"danger\">Quay lại</Button>\n            </Link>\n          </div>\n        </Col>\n        <Col xs={2}></Col>\n      </Row>\n    </Fragment>\n  );\n}\n\nexport default FormProducer;","import React, { Component } from \"react\";\n\nclass ItemTransaction extends Component {\n\n  onDelete = (id) => {\n    this.props.onDelete(id);\n  };\n\n  render() {\n    let { listTransaction, index } = this.props;\n    let ctime = new Date(listTransaction.ctime)\n    return (\n        <tr key={index}>\n          <th scope=\"row\">{index + 1}</th>\n          <td className=\"batchName\">{listTransaction.lot_code}</td>\n          <td>{listTransaction.product_name}</td>\n          <td>{listTransaction.warehouse_name}</td>\n          <td className=\"amount\">{listTransaction.amount}</td>\n          <td>{ctime.toLocaleString('en-GB')}</td>\n        </tr>\n    );\n  }\n}\n\nexport default ItemTransaction;\n","import React, { Component } from \"react\";\nimport { Table, Container, Button } from \"reactstrap\";\nimport ItemTransaction from './ItemTransaction';\nimport { Link } from \"react-router-dom\";\nimport InventoryService from \"../Shared/InventoryService\";\nimport ProductService from '../../../Product/Components/Shared/ProductService';\nimport ModalConfirm from '../../../../Shared/Components/ModalConfirm/ModalConfirm';\n\n\nclass ListTransaction extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      listTransaction: [],\n      listWareHouse: [],\n      listLot: [],\n      notiConfirm: '',\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  // list data location\n  getData() {\n    let promiseArr = [];\n    promiseArr.push(InventoryService.listTransaction());\n    promiseArr.push(InventoryService.allLot());\n    promiseArr.push(InventoryService.listWareHouse());\n    promiseArr.push(ProductService.listProduct());\n    Promise.all(promiseArr).then(([list_transaction, list_lot, list_warehouse, list_product]) => {\n      let listLot = list_lot.data;\n      let listWareHouse = list_warehouse.data;\n      let listTransaction = list_transaction.data;\n      let listProduct = list_product.data;\n\n      listTransaction.map(tr => {\n        let foundB = listLot.find(b => {\n          return tr.lot_id === b.id\n        })\n        tr.lot_code = foundB ? foundB.code : 'NA';\n        let foundWH = listWareHouse.find(wh => {\n          return tr.warehouse_id === wh.id\n        })\n        tr.warehouse_name = foundWH ? foundWH.name : 'NA';\n\n        let foundP = listProduct.find(p => {\n          return tr.product_id === p.id\n        })\n        tr.product_name = foundP ? foundP.name : 'NA';\n        return tr;\n      })\n\n      this.setState({\n        listTransaction\n      });\n    })\n      .catch((err) => {\n        this.setState({\n          notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n        })\n        console.log(err);\n      });\n  }\n\n  onDelete = (id) => {\n    this.setState({\n      notiConfirm: 'Bạn có chắc chắn muốn xóa !!',\n      id: id\n    })\n  };\n\n  answer = (isYes) => {\n    if (isYes) {\n      let data = {\n        id: this.state.id\n      }\n      InventoryService.deleteTransaction(data)\n        .then(() => {\n          this.setState({ notiConfirm: '' })\n          this.getData();\n          window.location.href = './transaction'\n        }).catch((err) => {\n          this.setState({\n            notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n          })\n          console.log(err);\n        });\n    } else {\n      this.setState({ notiConfirm: '' })\n    }\n  }\n\n  render() {\n    let { listTransaction } = this.state;\n    let itemTransaction = listTransaction.map((itemT, index) => {\n      return <ItemTransaction index={index} listTransaction={itemT} key={index} onDelete={this.onDelete} />;\n    });\n    return (\n      <Container className=\"transaction customCard mt-3\">\n        <div>\n          <h1 className=\"title-card-lg\">Danh sách nhập xuất</h1>\n        </div>\n        <div>\n          <Link to={`./transaction/create`}>\n            <Button className=\"btnAdd\" outline color=\"primary\">\n              <span>Thêm Mới</span>\n            </Button>\n          </Link>\n        </div>\n        <Table className=\"transactionTable\" hover bordered striped>\n          <thead>\n            <tr>\n              <th >STT</th>\n              <th className=\"batchName\" >Số lô</th>\n              <th>sản phẩm</th>\n              <th>Kho</th>\n              <th className=\"amount\">Số lượng</th>\n              <th>Ngày tạo  </th>\n            </tr>\n          </thead>\n          <tbody className=\"bodyTable\">\n             {itemTransaction}\n          </tbody>\n        </Table>\n        <ModalConfirm message={this.state.notiConfirm} answer={this.answer}></ModalConfirm>\n      </Container>\n    );\n  }\n}\n\nexport default ListTransaction;\n","import React, { Component } from \"react\";\nimport InventoryService from \"../Shared/InventoryService\";\nimport ModalNoti from '../../../../Shared/Components/ModalNoti/ModalNoti';\nimport { Row, Col, Button, Form, FormGroup, Label, Input, Container, } from \"reactstrap\";\nimport ReactAutocomplete from \"react-autocomplete\";\n\nclass FormTransaction extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      product_id: '',\n      productName: \"\",\n      amount: 0,\n      warehouse_id: '',\n      lot_id: '',\n      notiMessage: '',\n      listWareHouse: [],\n      listProduct: [],\n      listLot: [],\n      valueP: '',\n      valueL: '',\n    };\n  }\n\n  componentDidMount() {\n    InventoryService.listProduct()\n    .then((res) => {\n      this.setState({\n        listProduct: res.data\n      })\n    }).catch((err) => { \n      this.setState({\n        notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n      })\n      console.log(err) \n    });\n    InventoryService.allLot()\n    .then((response) => {\n      this.setState({\n        listLot: response.data\n      })\n    }).catch((error) => { \n      this.setState({\n        notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n      })\n      console.log(error) \n    });\n    InventoryService.listWareHouse()\n    .then((response) => {\n      this.setState({\n        listWareHouse: response.data\n      })\n    }).catch((error) => { \n      this.setState({\n        notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n      })\n      console.log(error) \n    });\n    return;\n  }\n\n  onBack = () => {\n    window.history.back();\n  }\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = () => {\n    let { valueL, valueP, product_id, amount, lot_id, listLot } = this.state;\n    let count = 0;\n    amount = -Number(amount);\n    let ref = 'lot';\n    let ref_id = lot_id;\n    let data = {\n      ref,\n      ref_id,\n      amount,\n      lot_id,\n    };\n    listLot.forEach(l => {\n      if(l.id == lot_id && l.product_id == product_id){\n        count = 1;\n      }\n    });\n    if(count == 0){\n      this.setState({\n        notiMessage: 'Sản phẩm ' + valueP + ' không có trong lô ' + valueL\n      })\n    }else{\n      InventoryService.createTransactionForLot(data)\n        .then(() => {\n          this.setState({\n            notiMessage: 'Thêm mới thành công'\n          })\n        }).catch((err) => {\n          this.setState({\n            notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n          })\n          console.log(err);\n        });\n    }\n  };\n  onChangeProduct = (e) => {\n    this.setState({\n      valueP : e.target.value\n    });\n  }\n  onSelectProduct = (value, item) => {\n    this.setState({\n      valueP: value,\n      product_id: item.id\n    })\n  }\n  onChangeLot = (e) => {\n    this.setState({\n      valueL : e.target.value\n    })\n  }\n  onSelectLot = (value, item) => {\n    this.setState({\n      valueL: value,\n      lot_id: item.id\n    })\n  }\n  doneAlert = () => {\n    if (this.state.notiMessage) {\n      window.history.back();\n    } else {\n      this.setState({ notiMessage: '' })\n    }\n  }\n\n  render() {\n    let { warehouse_id, amount, listWareHouse, listLot, listProduct, valueP, valueL } = this.state;\n    let itemWareHouse = listWareHouse.map((data, i) => {\n      return <option value={data.id} key={i}>{data.name}</option>\n    })\n    \n    return (\n      <section className=\"transaction\">\n        <Container>\n          <Row>\n            <Col xs={{ size: 6, offset: 3 }}>\n              <div>\n                <h2 className=\"title-card-lg\">Thêm mới xuất kho</h2>\n              </div>\n              <Form>\n                <FormGroup className=\"auto-form-control\">\n                  <Label for=\"type\">Tên sản phẩm</Label>\n                  <ReactAutocomplete       \n                      items={listProduct}\n                      renderMenu={ children => (\n                        <div className= \"menu\">\n                           {children.slice(0, 9)}\n                        </div>\n                      )}\n                      shouldItemRender={(item, value) => item.name.toLowerCase().indexOf(value.toLowerCase()) > -1}\n                      getItemValue={item => item.name}\n                      renderItem={(item) =>\n                        <div\n                          key={item.id}\n                        >\n                          {item.name}\n                        </div>\n                      }\n                      value = {valueP}\n                      onChange = {this.onChangeProduct}\n                      onSelect = { (value, item) => this.onSelectProduct(value, item)}\n                    />\n                </FormGroup>\n                <FormGroup className=\"auto-form-control\">\n                  <Label for=\"type\">Tên lô</Label>\n                  <ReactAutocomplete       \n                      items={listLot}\n                      renderMenu={ children => (\n                        <div className= \"menu\">\n                           {children.slice(0, 9)}\n                        </div>\n                      )}\n                      shouldItemRender={(item, value) => item.code.toLowerCase().indexOf(value.toLowerCase()) > -1}\n                      getItemValue={item => item.code}\n                      renderItem={(item) =>\n                        <div\n                          key={item.id}\n                        >\n                          {item.code}\n                        </div>\n                      }\n                      value = {valueL}\n                      onChange = {this.onChangeLot}\n                      onSelect = { (value, item) => this.onSelectLot(value, item)}\n                    />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"warehouse_id\">Nhà kho</Label>\n                  <Input\n                    type=\"select\"\n                    name=\"warehouse_id\"\n                    value={warehouse_id}\n                    onChange={this.onChange}\n                  >\n                    <option> Chọn nhà kho </option>\n                    {itemWareHouse}\n                  </Input>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"amount\">Số lượng</Label>\n                  <Input\n                    type=\"number\"\n                    name=\"amount\"\n                    value={amount}\n                    placeholder=\"Nhập số lượng\"\n                    onChange={this.onChange}\n                  />\n                </FormGroup>\n                <div className=\"btnOptions pt-20\">\n                  <Button outline color=\"primary\" type=\"button\" onClick={this.onSubmit}>\n                    Thêm mới\n                    </Button>\n                  <Button color=\"danger btnDanger\" onClick={this.onBack} >\n                    Hủy Bỏ\n                    </Button>\n                </div>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n        <ModalNoti message={this.state.notiMessage} done={this.doneAlert}></ModalNoti>\n      </section>\n    );\n  }\n}\nexport default FormTransaction;\n","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\n// import { AuthService } from '../../';\n// import { ROLE } from '../../../Constances/const';\n\nimport ListLot from './Components/Lot/ListLot';\nimport FormLot from './Components/Lot/FormLot';\nimport ListProducer from './Components/Producer/Listproducer';\nimport FormProducer from './Components/Producer/FormProducer'\nimport ListTransaction from './Components/Transaction/ListTransaction';\nimport FormTransaction from './Components/Transaction/FormTransaction';\n\nclass Inventory extends Component {\n\n    render() {\n        const { path } = this.props.match;\n        return (\n            <div className=\"Inventory\">\n                <Switch>\n                    <Route exact path={`${path}`} render={() => (<Redirect to=\"inventory/transaction/create\" ></Redirect>)}></Route>\n                    <Route path={`${path}/lot/:id`} exact component={FormLot} />\n                    <Route path={`${path}/lot`} exact component={ListLot} />\n                    <Route path={`${path}/transaction/create`} exact component={FormTransaction} />\n                    <Route path={`${path}/transaction`} exact component={ListTransaction} />\n                    <Route path={`${path}/producer`} exact component={ListProducer} />\n                    <Route path={`${path}/producer/:id`} exact component={FormProducer} />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default Inventory","import React, { useState } from 'react';\nimport { Input, Table } from 'reactstrap';\nimport PharmacyService from '../Shared/PharmacyService';\nimport { ModalNoti } from \"../Shared\"\n\nconst FormSearch = (props) => {\n    const [list, setList] = useState([]);\n\n    const [pattern, setPattern] = useState('');\n\n    const [notiMessage, setNotiMessage] = useState('');\n\n    const [focusSearch, setFocusSearch] = useState(false);\n\n    const onFocusSearch = () => {\n        setFocusSearch(true);\n    }\n    const onBlurSearch = () => {\n        if(pattern.length === 0){\n            setFocusSearch(false);\n        }  \n    }\n    const onChangeSearch = (e) => {    \n        setPattern(e.target.value);\n\n        if(pattern.length>0){\n            setFocusSearch(true);\n            PharmacyService.searchProduct(pattern)\n            .then(res => {\n                res.data.map(i => {\n                    const ALMOST_OUT =100;\n                    const NORMAL = 300;\n                    i.item.color = i.item.totalRemain<ALMOST_OUT ? '#d26d69' : i.item.totalRemain < NORMAL ? '#28b76b' : 'black';\n                    return i;\n                })\n                setList(res.data);\n            }).catch(err => {\n                console.log(err);      \n            });\n        }\n    } \n\n    const addMed = (ev, item) => {\n        if(item.oldestLot){\n            setPattern('');\n            setFocusSearch(false)\n            props.onSelect(item);\n        }else{\n            setNotiMessage('Sản phẩm này hiện đang không bán!');\n        }\n    }\n    \n    const doneAlert = () => {\n        setNotiMessage('');\n    }\n    let itemSearch = list.map((data, i) => {\n        return (\n            <tr className=\"pointer\" key={i}  onClick={(ev) => addMed(ev, data.item)} >\n                <td> {data.item.id} </td>\n                <td> {data.item.name} </td>\n                <td>{data.item.parts.map((p,index) => {\n                        return <span key={index}>{p.name}, </span>\n                    })} \n                </td>   \n                <td> {new Intl.NumberFormat('de-DE').format(data.item.price)}đ </td>\n                <td> { data.item.oldestLot?  data.item.oldestLot.code : 'Không có'} </td>\n                <td> { data.item.oldestLot?  data.item.oldestLot.remain : 'Không có'} </td>\n                <td> <span style={{ 'color' : data.item.color }}>{data.item.totalRemain}</span> </td>\n            </tr>\n        );\n    });\n    \n    return (\n        <div className=\"filter\">\n            <div>\n                <Input onChange={e => onChangeSearch(e)}\n                    className=\"pattern-product\"\n                    placeholder='Nhập tên thuốc'\n                    value={pattern}\n                    disabled={props.order_id !== ''}\n                    onFocus={onFocusSearch}\n                    onBlur={onBlurSearch}\n                />\n            </div>\n        {pattern !== '' ?\n            <div>\n                <Table size=\"sm\" hover striped bordered className=\"list-prescription\">\n                    <thead>\n                        <tr>\n                            <th>Mã</th>\n                            <th>Tên</th>\n                            <th>Thành phần</th>\n                            <th>Giá</th>\n                            <th>Lô cũ nhất</th>\n                            <th>Tồn kho lô</th>\n                            <th>Tổng tồn kho</th>   \n                        </tr>\n                    </thead>\n                    <tbody>\n                        {itemSearch}\n                    </tbody>\n                </Table>\n            </div>\n        : null  }\n        {focusSearch ? <div className=\"pharmacy-opacity pharmacy-opacity-top\"></div> : null}\n        {/* {focusSearch ? <div className=\"pharmacy-opacity pharmacy-opacity-bot\"></div> : null} */}\n        <ModalNoti message={notiMessage} done={doneAlert}></ModalNoti>\n        </div>\n    )\n}\n\nexport default FormSearch;","import React, { Fragment, useEffect } from 'react';\nimport { Col, Row, Table } from 'reactstrap';\nimport SharedService from '../../../../Shared/Services/SharedService';\nimport logo from '../../../../Asset/Img/logo.png';\nimport { moneyToWord } from \"../../../Reception/Shared/Util\";\nimport HeaderPrint from '../../../../Shared/Components/HeaderPrint/HeaderPrint';\n\nconst PrintPharmacy = (props) => {\n    let doctorInfo = JSON.parse(window.sessionStorage.getItem('user'));\n    const cusData = props.cusData;\n    const customerCode = cusData ? cusData.code : null;\n    const current = new Date();\n    let phone = cusData && cusData.contacts ? cusData.contacts[0].phone : null;\n    let address = cusData && cusData.contacts ? cusData.contacts[0].address : {};\n    let date = new Date(cusData ? cusData.birthday : null);\n    let { etcArr, etcCode } = props;\n\n    let rowEtcArr = etcArr ? etcArr.filter(el => !el.old).map((el, index) => {\n        return (\n            <Fragment>\n                {el.amount > 0 ? \n                <tr key={index}>\n                    <td>{index + 1}</td>\n                    <td>{el.name}</td>\n                    {/* <td style={{ 'minHeight': '280px' }}>{el.attrs ? el.attrs.instruction ? el.attrs.instruction : '' : ''}</td> */}\n                    <td className=\"end\">{el.amount}</td>\n                    <td className=\"end\">{new Intl.NumberFormat('de-DE').format(el.price)}</td>\n                    <td className=\"end\">{new Intl.NumberFormat('de-DE').format(el.price * el.amount)}</td>\n                </tr>\n                : null}\n            </Fragment>\n        )\n    }) : null;\n\n    useEffect(() => {\n        if (etcCode) {\n            SharedService.createEtccode(etcCode, 'barCode')\n        }\n        if (customerCode) {\n            SharedService.createCusCode(customerCode.toString())\n        }\n    }, [etcCode, customerCode])\n\n    return (\n        <div className=\"border border-secondary receiptContainer\" style={{ display: 'none' }}>\n            <div className=\"print-pharmacy medPrintId position-relative\" id=\"medPrintId\" >\n                <br></br>\n                <div className=\"PrintEtc\" id=\"PrintEtc\">\n                    <Row>\n                        <Col xs={8} className=\"absolute\">\n                            <Row className=\"text-left\">\n                                <HeaderPrint></HeaderPrint>\n                            </Row>\n                        </Col>\n                        <Col xs={4}>\n                            <Row>\n                                <Col xs={7}>\n                                    <div className=\"end\">\n                                        <canvas id=\"barCode\" style={{ height: \"13mm\" }}></canvas>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                    <div className=\"print-pharmacy-title text-center\">\n                        BIÊN LAI THU TIỀN\n                    </div>\n                    <Row>\n                        <Col xs={2}>\n                            <div className=\"text-left\">\n                                <canvas id=\"canvasCustomer\" style={{ height: \"13mm\" }}></canvas>\n                            </div>\n                        </Col>\n                        <Col xs={{ size: '6', offset: '2'}}>\n                            <div>\n                                <i>Ngày {current.getDate()} Tháng {current.getMonth() + 1} Năm {current.getFullYear()}</i>\n                            </div>\n                        </Col>\n                    </Row>\n                    <div className=\"info-Cus\">\n                        <Row className=\"pb-5\">\n                            <Col sm=\"6\">\n                                Họ và tên: <b>{cusData ? cusData.full_name : null}</b>\n                            </Col>\n                            <Col sm=\"1\">\n                            </Col>\n                            <Col sm=\"5\">\n                                Mã phiếu thu: {etcCode}\n                            </Col>\n                        </Row>\n                        {cusData && cusData.gender ?\n                            <Row className=\"pb-5\">\n                                <Col sm=\"6\">\n                                    Ngày Sinh: {date.toLocaleString('en-GB').slice(0, 10)}\n                                </Col>\n                                <Col sm=\"1\">\n                                </Col>\n                                <Col sm=\"5\">\n                                    Giới tính:{cusData.gender === \"male\" ? \"Nam\" : cusData.gender === \"female\" ? \"Nữ\" : \"\"}\n                                </Col>\n                            </Row>\n                            : null}\n                        {address.street ?\n                            <Row className=\"pb-5\">\n                                <Col sm='6'>\n                                    Địa chỉ : {address.street ? address.street : '' + ' - ' + address.ward ? address.ward : '' + ' - '\n                                        + address.district ? address.district : '' + ' - ' + address.province ? address.province : ''}\n                                </Col>\n                                <Col sm=\"1\">\n                                </Col>\n                                <Col sm=\"5\">\n                                    Số điện thoại : {phone}\n                                </Col>\n                            </Row> :\n                            <Row className=\"pb-5\">\n                                <Col sm=\"5\">\n                                    Số điện thoại : {phone}\n                                </Col>\n                            </Row>\n                        }\n                    </div>\n                    <b align=\"left\"><p className=\"pl-10\">Danh sách đơn thuốc</p></b>\n                    <div className=\"justify-content-between pl-10\">\n                        <Table bordered>\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Thuốc</th>\n                                    {/* <th>Hướng dẫn</th> */}\n                                    <th>Số lượng</th>\n                                    <th>Đơn giá</th>\n                                    <th>Thành tiền</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {rowEtcArr}\n                            </tbody>\n                        </Table>\n                    </div>\n                    <Row>\n                        <Col className=\"end capitalize\">Tổng tiền:&ensp;<b>{new Intl.NumberFormat('de-DE').format(props.total)}VNĐ</b></Col>\n                    </Row>\n                    <Row>\n                        <Col className=\"end capitalize\">Viết bằng chữ: <b>{moneyToWord(props.total || 0)}</b></Col>\n                    </Row>\n                    <Row className=\"px-4 pt-20\">\n                        <Col xs={3} className=\"middle\">\n                            <p>Bệnh nhân</p>\n                            <i>(ký, họ tên)</i>\n                        </Col>\n                        <Col xs={{ 'size': '3', 'offset': '6' }} className=\"middle\">\n                            <p>Người thu tiền</p><br></br>\n                            <i>(ký, ghi rõ họ tên)</i> <br></br><br></br><br></br><br></br>\n                            <b className=\"mt-5\">{doctorInfo.full_name}</b>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default PrintPharmacy;\n","import React, { Component, Fragment } from \"react\";\nimport { Table } from \"reactstrap\";\nimport { ModalConfirm, STATUS, ORDER_TYPE} from \"../Shared\";\n\nclass ModalOrder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notiConfirm: '',\n      index: -1,\n    };\n  }\n\n  onClickOrder = (ev, index) => {\n    this.setState({\n      notiConfirm: 'Chắc chắn chọn đơn này?',\n      index,\n    })\n  }\n  answer = (isYes) => {\n    if (isYes) {\n      this.props.onSelectOrder(this.state.index);\n      this.setState({\n        notiConfirm: '', index: -1,\n      })\n    } else {\n      this.setState({\n        notiConfirm: '',\n        index: -1,\n      })\n    }\n  }\n  render() {\n    let { listOrder } = this.props;\n    let item = listOrder.map((l, index) => {\n      let time = l.order ? new Date(l.order.ctime) : 0;\n      return (\n        <tr key={index} className=\"pointer\" onClick={(ev) => this.onClickOrder(ev, index)}>\n          <td> {index + 1}</td>\n          <td>{l.code}</td>\n          {/* <td></td> */}\n          <td>{l.order ? l.order.type === ORDER_TYPE.ETC.code ? ORDER_TYPE.ETC.label : l.order.type === ORDER_TYPE.OTC.code ? ORDER_TYPE.OTC.label : l.order.type === ORDER_TYPE.OTHER.code? ORDER_TYPE.OTHER.label : '' : null}</td>\n          <td>{l.order ? l.order.status === STATUS.DONE? 'Đã xong' : l.order.status === STATUS.PAID ? 'Đã thanh toán' : 'Chưa thanh toán' : null}</td>\n          <td>{time !== 0 ? time.toLocaleString('en-GB') : null}</td>\n          <td>\n            {l.order ? l.order.items.map((p, i) => {\n              return <span key={i}>{p.ref_value.name}, </span>\n            }) : null}\n          </td>\n          <td>{ new Intl.NumberFormat('de-DE').format(l.order ? l.order.total : 0) }đ</td>\n          {/* <td>{ l.result? l.result.instruction? l.result.instruction : null : null}</td> */}\n        </tr>\n      )\n    });\n    return (\n      <Fragment>\n        <Table>\n          <thead>\n            <tr>\n              <th>STT</th>\n              <th>Mã đơn</th>\n              {/* <th>Bác sĩ</th> */}\n              <th>Loại đơn</th>\n              <th>Trạng thái</th>\n              <th>Ngày tạo </th>\n              <th>Thuốc</th>\n              <th>Thành tiền</th>\n              {/* <th>Chẩn đoán</th> */}\n            </tr>\n          </thead>\n          <tbody className=\"bodyTable\">\n            {item}\n          </tbody>\n        </Table>\n        <ModalConfirm message={this.state.notiConfirm} answer={this.answer} ></ModalConfirm>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default ModalOrder;\n","import React, { Component, Fragment } from \"react\";\nimport { Row, Col, Button, Label, Input, Table, Modal, ModalHeader, ModalBody, ModalFooter, TabContent, TabPane, Nav, NavItem, NavLink  } from \"reactstrap\";\nimport PharmacyService from '../Shared/PharmacyService';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { ModalNoti, ModalConfirm, ONE_DAY, ProductService, ORDER_TYPE, STATUS, Medicine} from \"../Shared\";\nimport CustomerForm from '../../../../Shared/Components/CustomerForm/CustomerForm';\nimport FormSearch from './FormSearch';\nimport PrintPharmacy from './PrintPharmacy';\nimport printJS from 'print-js';\nimport AccountingForm from '../../../Reception/Components/Accounting/AccountingForm/AccountingForm';\nimport ModalOrder from \"./ModalOrder\";\nimport classnames from 'classnames';\n\nclass FormPharmacy extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            notiMessage: '',\n            notiConfirm: '',\n            orderId: '',\n            orderCode: '',\n            jobId: '',\n            jobStepId: '',\n            status: '',\n            customer: {},\n            doctor: {},\n            listProduct: [],\n            listLot: [],\n            listData: [],\n            fakeTable: [{},{},{},{},{}],\n            total: 0,\n            orderType: '',\n            jobCtime: '',\n            jobInstruction: '',\n            jobSubclinical: '',\n            index: -1,\n            show: false,\n            refresh: true,\n            showOrder: false,\n            activeTab: '1',\n            retailCustomerName: '',\n            retailCustomerPhone: '',\n            arrUpdateQty: [],\n        };\n    }\n    componentDidMount() {\n        this.getDataListLot();\n        this.getDataListProduct();\n    }\n    getDataListProduct() {\n        ProductService.listProduct()\n            .then(res => {\n                this.setState({\n                    listProduct: res.data,\n                });\n            }).catch(err => {\n                console.log(err);\n                this.setState({\n                    notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n                });\n            })\n    }\n    getDataListLot() {\n        PharmacyService.listLot()\n            .then(res => {\n                let listLot = [];\n                let data = res.data;\n                data.forEach(l => {\n                    let result = this.remainDate(l.exp_date);\n                    if (result < 31) {\n                        l.color = '#e09491';\n                    } else if (result < 91) {\n                        l.color = '#80d1a6';\n                    } else {\n                        l.color = 'white';\n                    }\n                    l.remainDate = result;\n                    if(l.remain > 0) {\n                        listLot.push(l)\n                    }\n                });\n                this.setState({\n                    listLot\n                });\n            }).catch(err => {\n                console.log(err);\n                this.setState({\n                    notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n                });\n            })\n    }\n    onChangeQ = (e, index, price) => {\n        let amount = e.target.value;\n        if(!Number(amount)) amount = 0;\n        let listData = this.state.listData;\n        let total = this.state.total;\n        \n        let totalItem = listData[index].amount * price * (100 - listData[index].discount) / 100\n\n        total = total - totalItem + amount * price * (100 - listData[index].discount) / 100;\n\n        listData[index].amount = Number(amount);\n        if (listData[index].remain < amount) {\n            listData[index].err = 'Số lượng không đủ';\n        } else {\n            delete listData[index].err;\n        }\n        this.setState({\n            listData,\n            total\n        });\n    }\n\n    onChangeB = (e, index) => {\n        let listData = this.state.listData;\n        let listLot = this.state.listLot;\n        let lot_id = e.target.value\n        listData[index].lot_id = lot_id;\n        listLot.forEach(b => {\n            if (b.id === lot_id) {\n                listData[index].remain = b.remain;\n                listData[index].color = b.color;\n                if (b.remain < listData[index].amount) {\n                    listData[index].err = 'Số lượng không đủ';\n                } else {\n                    delete listData[index].err;\n                }\n            }\n        });\n        this.setState({\n            listData\n        });\n    }\n    onChangeInstruction = (e, index) => {\n        let listData = this.state.listData;\n        listData[index].attrs.instruction = e.target.value;\n        this.setState({ listData });\n    }\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n    onSelect = (item) => {\n        let { listData, orderType, total, fakeTable, jobSubclinical } = this.state;\n        fakeTable.splice(0,1);\n        let obj = {}\n        obj.amount = 1;\n        obj.name = item.name;\n        obj.product_id = item.id;\n        obj.price = item.price;\n        obj.discount = 0;\n        total += obj.price * (100 - obj.discount) / 100;\n        obj.color = item.color;\n        obj.lot_id = item.oldestLot.id;\n        obj.selected = item.oldestLot.index;\n        obj.remain = item.oldestLot.remain;\n        obj.parts = item.parts;\n        obj.attrs = item.attrs;\n        obj.attrs.instruction = 'Ngày uống: ' + (obj.attrs.default_daily_usage) + ' lần x '  + (obj.attrs.unit === 'tablet' ? obj.attrs.default_quantity/obj.attrs.strength + ' viên' :  obj.attrs.default_quantity + obj.attrs.unit)  \n        \n        // jobSubclinical ? jobSubclinical.weight && jobSubclinical.weight < 20 ? \n        // 'Liều theo cân nặng: ' + (obj.attrs.unit === 'tablet' ? (obj.attrs.max_dose_per_kg*jobSubclinical.weight/obj.attrs.strength) + ' viên ' : obj.attrs.max_dose_per_kg*jobSubclinical.weight +obj.attrs.unit) + ' x ' + (obj.attrs.default_quantity/obj.attrs.strength) + ' lần.' \n        // :  jobSubclinical.weight && jobSubclinical.weight > 40  ? obj.attrs ? 'Liều dùng mặc định: ' + (obj.attrs.unit === 'tablet' ? obj.attrs.default_quantity/obj.attrs.strength + ' viên' :  obj.attrs.default_quantity + obj.attrs.unit)\n        // + ' x ' + (obj.attrs.default_quantity/obj.attrs.strength) + ' lần.' : null\n        // : obj.attrs ? 'Liều dùng mặc định: ' + (obj.attrs.unit === 'tablet' ? obj.attrs.default_quantity/obj.attrs.strength + ' viên' :  obj.attrs.default_quantity + obj.attrs.unit)\n        // + ' x ' + (obj.attrs.default_quantity/obj.attrs.strength) + ' lần.' : null +  'Liều theo cân nặng: ' + (obj.attrs.unit === 'tablet' ? (obj.attrs.max_dose_per_kg*jobSubclinical.weight/obj.attrs.strength) + ' viên ' : obj.attrs.max_dose_per_kg*jobSubclinical.weight +obj.attrs.unit) + ' x ' + (obj.attrs.default_quantity/obj.attrs.strength) + ' lần.' \n        // : obj.attrs ? 'Liều dùng mặc định: ' + (obj.attrs.unit === 'tablet' ? obj.attrs.default_quantity/obj.attrs.strength + ' viên' :  obj.attrs.default_quantity + obj.attrs.unit)\n        // + ' x ' + (obj.attrs.default_quantity/obj.attrs.strength) + ' lần.' : null;\n\n        let result = this.remainDate(item.oldestLot.exp_date);\n        if (result < 31) {\n            obj.color = '#e09491';\n        } else if (result < 91) {\n            obj.color = '#80d1a6';\n        } else {\n            obj.color = 'white';\n        }\n\n        listData.push(obj);\n        if (orderType !== ORDER_TYPE.OTHER.code) {\n            this.setState({\n                fakeTable,\n                listData,\n                total,\n                orderType: ORDER_TYPE.OTHER.code,\n            })\n        } else {\n            this.setState({\n                fakeTable,\n                listData,\n                total\n            });\n        }\n    }\n    onDelete = (e, index) => {\n        this.setState({\n            notiConfirm: 'Bạn chắc chắn muốn xóa ?',\n            index\n        });\n    }\n\n    answer = (isYes) => {\n        if (isYes) {\n            let { listData, index, total, fakeTable } = this.state;\n            if (index < 0) {\n                this.setState({\n                    id: '',\n                    notiConfirm: '',\n                    orderId: '',\n                    orderCode: '',\n                    status: '',\n                    customer: {},\n                    listData: [],\n                    total: 0,\n                    orderType: '',\n                    index: -1,\n                    doctor: {},\n                    jobCtime: '',\n                    jobInstruction: '',\n                    jobSubclinical: '',\n                    retailCustomerName: '',\n                    retailCustomerPhone: '',\n                    fakeTable: [{},{},{},{},{},{}],\n                });\n            } else {\n                let item = listData[index];\n                total -= item.amount * item.price * (100 - item.discount) / 100;\n                listData.splice(index, 1);\n                if(listData.length < 5){\n                    fakeTable.push({});\n                }\n                if (listData.length < 1) {\n                    this.setState({\n                        listData,\n                        index: -1,\n                        notiConfirm: '',\n                        total,\n                        orderType: '',\n                        fakeTable\n                    });\n                } else {\n                    this.setState({\n                        listData,\n                        index: -1,\n                        notiConfirm: '',\n                        total,\n                        fakeTable\n                    });\n                }\n            }\n        } else {\n            this.setState({\n                notiConfirm: '',\n                index: -1,\n            });\n        }\n    };\n\n    OnSubmitOrderId = () => {\n        let orderCode = this.state.orderCode;\n        let fakeTable = this.state.fakeTable;\n        PharmacyService.getOrder(orderCode)\n            .then(res => {\n                let result = res.data.view_order;\n                let doctor = res.data.user;\n                let jobId = res.data.job.id;\n                let jobCtime = res.data.job.ctime;\n                let jobInstruction = res.data.job.state.textDiagnosis;\n                let jobSubclinical = res.data.job.state.subclinical;\n                let listProduct = [];\n                let orderId = result.id;\n                let orderType = result.type;\n                let jobStepId = result.ref_id;\n                let listLot = this.state.listLot;\n                result.items.forEach((item) => {\n                    if (item.ref === 'product') {\n                        listProduct.push(item);\n                    }\n                });\n                let listData = [];\n                let total = 0;\n                listProduct.forEach((p) => {\n                    let obj = {};\n                    obj.itemId = p.id;\n                    obj.amount = p.quantity;\n                    obj.name = p.ref_value.name;\n                    obj.attrs = p.ref_value.attrs;\n                    obj.attrs.instruction = 'Ngày uống: ' + (obj.attrs.default_daily_usage) + ' lần x '  + (obj.attrs.unit === 'tablet' ? obj.attrs.default_quantity/obj.attrs.strength + ' viên' :  obj.attrs.default_quantity + obj.attrs.unit)  \n                    obj.product_id = p.ref_id;\n                    obj.price = p.origin_price;\n                    obj.discount = p.discount;\n                    total += p.quantity * p.ref_value.price * (100 - p.discount) / 100;\n                    let oldestLot = 10000;\n                    listLot.forEach((l, i) => {\n                        if (l.product_id === p.ref_id) {\n                            if (oldestLot > l.remainDate) {\n                                oldestLot = l.remainDate;\n                                obj.color = l.color;\n                                obj.lot_id = l.id;\n                                obj.selected = i;\n                                obj.remain = l.remain;\n                                if (l.remain < p.quantity) {\n                                    obj.err = 'Số lượng không đủ';\n                                }\n                            }\n                        }\n                    });\n                    listData.push(obj);\n                    if(fakeTable.length > 0) fakeTable.splice(0,1);\n                });\n                this.setState({\n                    status: result.status,\n                    customer: result.customer,\n                    listData,\n                    total,\n                    orderId,\n                    orderType,\n                    jobStepId,\n                    doctor,\n                    jobId,\n                    jobCtime,\n                    jobInstruction,\n                    jobSubclinical,\n                    activeTab: '1',\n                });\n            });\n        PharmacyService.getCustomer(orderCode)\n            .then(response => {\n                let customer = response.data;\n                this.setState({ customer })\n                PharmacyService.getOrderByCustomer(customer.id)\n                    .then(res => {\n                        let data = res.data.reverse();\n                        data.splice(10);\n                        this.setState({\n                            showOrder: true,\n                            listOrder: data,\n                            activeTab: '1',\n                        })\n                    })\n                    .catch(err => console.log(err));\n            });\n    }\n    onSubmitProduct = () => {\n        let { listData, orderType, orderId, jobStepId, jobInstruction, doctor, activeTab } = this.state;\n        listData.forEach(l => {\n            if (l.err) {\n                this.setState({\n                    notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n                });\n            } else {\n                l.amount = -l.amount;\n                delete l.remain;\n                delete l.color;\n                delete l.selected;\n                delete l.discount;\n                delete l.name;\n                delete l.price;\n                delete l.product_id;\n                delete l.attrs;\n                delete l.parts;\n            }\n        })\n        let obj = {};\n        obj.order_id = orderId;\n        obj.items = listData;\n\n        let data;\n        if (orderType === ORDER_TYPE.ETC.code || orderType === ORDER_TYPE.OTC.code) {\n            data = {\n                id: jobStepId,\n                result: {\n                    instruction: jobInstruction,\n                    doctorName: doctor.first_name ? doctor.last_name + ' ' + doctor.first_name : '',\n                }\n            }\n        } else {\n            data = {\n                id: jobStepId,\n                result: {\n                    key: 'value'\n                }\n            }\n        }\n\n        if(activeTab === '2'){\n            ///KHACH LE\n            PharmacyService.createTransactionRetail(obj)\n            .then(() => {\n                this.setState({\n                    listData: [],\n                    notiMessage: 'Xác nhận thành công!',\n                    \n                });\n                this.getDataListLot();\n            }).catch(err => {\n                this.setState({\n                    notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n                });\n                console.log(err);\n            });\n        }else{\n            PharmacyService.createTransaction(obj)\n            .then(() => {\n                this.setState({\n                    listData: [],\n                    notiMessage: 'Xác nhận thành công!',\n                    \n                });\n                this.getDataListLot();\n            }).catch(err => {\n                this.setState({\n                    notiMessage: 'Lỗi vui lòng bạn thử lại sau !!'\n                });\n                console.log(err);\n            });\n        }\n    }\n    doneAlert = () => {\n        if (this.state.refresh) {\n            this.setState({\n                id: '',\n                notiMessage: '',\n                orderId: '',\n                orderCode: '',\n                status: '',\n                listData: [],\n                total: 0,\n                orderType: '',\n                index: -1,\n                doctor: {},\n                jobCtime: '',\n                jobInstruction: '',\n                refresh: true,\n            });\n        } else {\n            this.setState({\n                notiMessage: '',\n                refresh: true,\n            })\n        }\n\n    }\n    onSubmitCancel = () => {\n        this.setState({\n            notiConfirm: 'Bạn muốn tạo đơn khác ?',\n        });\n    }\n    refreshOrder = () => {\n        this.setState({\n            listData: [],\n            doctor: {},\n            jobCtime: '',\n            jobInstruction: '',\n            status: '',\n            orderType: ORDER_TYPE.OTHER.code,\n            index: -1,\n            total: 0,\n            orderCode: '',\n            orderId: '',\n            fakeTable: [{},{},{},{},{}],\n        })\n    }\n    createOrder = () => {\n        let { listData, jobId, activeTab, retailCustomerName, retailCustomerPhone } = this.state;\n        let location = JSON.parse(sessionStorage.getItem('location'));\n\n        if (listData.length > 0) {\n            if (activeTab === '1') {\n                let arrs = [];\n                listData.forEach(d => {\n                    let item = {}\n                    item.ref = 'product';\n                    item.ref_id = d.product_id;\n                    item.quantity = d.amount;\n                    arrs.push(item);\n                })\n                let data = {\n                    job_id: jobId,\n                    location_id: location.id,\n                    type: 'buy',\n                    order_type: ORDER_TYPE.OTHER.code,\n                    items: arrs\n                };\n                PharmacyService.createOrder(data)\n                    .then(res => {\n                        this.setState({\n                            status: STATUS.NEW,\n                            orderId: res.data.order_id,\n                            orderCode: res.data.code,\n                            refresh: false,\n                            notiMessage: 'Tạo đơn mới thành công!'\n                        })\n                    }).catch(err => {\n                        this.setState({ notiMessage: 'Lỗi !!  Vui lòng kiểm tra lại!!' })\n                        console.log(err)\n                    });\n            } else if (activeTab === '2') {\n                // KHACH LE\n                if(retailCustomerName){\n                    this.setState({\n                        refresh: false,\n                        notiMessage: 'Tên bệnh nhân không được để trống!'\n                    })\n                }if(retailCustomerPhone[0] !== '0' || retailCustomerPhone.length !== 10){\n                    this.setState({\n                        refresh: false,\n                        notiMessage: 'Số điện thoại không đúng định dạng!'\n                    })\n                }else {\n                    const retailCustomer = {\n                        retailCustomerName,\n                        retailCustomerPhone\n                    }\n                    let arrs = [];\n                    listData.forEach(d => {\n                        let item = {}\n                        item.ref = 'product';\n                        item.ref_id = d.product_id;\n                        item.quantity = d.amount;\n                        arrs.push(item);\n                    })\n                    const data = {items : arrs};\n                    PharmacyService.createRetailOrder(data)\n                    .then(res => {\n                        this.setState({\n                            status: STATUS.NEW,\n                            orderId: res.data.id,\n                            orderCode: res.data.code,\n                            refresh: false,\n                            notiMessage: 'Tạo đơn mới thành công!'\n                        })\n                    }).catch(err => {\n                        this.setState({ notiMessage: 'Lỗi !!  Vui lòng kiểm tra lại!!' })\n                        console.log(err)\n                    });\n                }\n            } else {\n                this.setState({ notiMessage: 'Lỗi !!  Vui lòng kiểm tra lại!!' })\n            }\n        }\n    }\n    remainDate(exp_date) {\n        let now = Date.now();\n        let time = new Date(exp_date).getTime();\n        let result = (time - now) / ONE_DAY;\n        return Math.ceil(result);\n    }\n    handlePayment = () => {\n        let { listData, arrUpdateQty } = this.state;\n        listData.forEach(l => {\n            if (l.err) {\n                this.setState({\n                    notiMessage: 'Lỗi !!  Vui lòng kiểm tra lại!!'\n                });\n            } else {\n                if (arrUpdateQty.length > 0) {\n                    PharmacyService.updateQuantity(arrUpdateQty)\n                    .then(res => {\n                        this.setState({ show: true })\n                    }).catch(e => {\n                        console.log(e);\n                        this.setState({\n                            notiMessage: 'Thay đổi số lượng thuốc thất bại!!'\n                        });\n                    })\n                }\n                this.setState({ show: true })\n            }\n        })\n    }\n    handleClose = () => { this.setState({ show: false }) }\n    onClose = () => { \n        if(this.state.listOrder.length > 0){\n            const jobId = this.state.listOrder[0].job_id;\n            this.setState({jobId});\n\n        }else{\n            PharmacyService.getJob(this.state.customer.id)\n            .then(res => {\n               const jobId = res.data.reverse()[0].steps[0].job_id;\n               this.setState({jobId});\n            }).catch(err => {\n                this.setState({notiMessage: 'Lỗi !!  Vui lòng kiểm tra lại!!'});\n                console.log(err);\n            });\n        }\n        this.setState({ \n            showOrder: false,\n        })}\n    affterPayment = () => {\n        this.setState({ \n            status: STATUS.PAID, \n        });\n    }\n    onSelectOrder = (index) => {\n        let fakeTable = this.state.fakeTable;\n        const jobSubclinical = this.state.jobSubclinical;\n        const jobId = this.state.listOrder[index].job_id;\n        const selectedOrder = this.state.listOrder[index].order;\n        const itemOrder = selectedOrder.items;\n        let orderId = selectedOrder.id;\n        let orderCode = selectedOrder.code;\n        let status = selectedOrder.status;\n        let orderType = selectedOrder.type;\n        let jobStepId = selectedOrder.ref_id;\n        let total = 0;\n        let listData = [];\n\n        itemOrder.forEach(el => {\n            let obj = {}\n            obj.itemId = el.id;\n            obj.amount = el.quantity;\n            obj.name = el.ref_value.name;\n            obj.product_id = el.ref_value.id;\n            obj.price = el.ref_value.price;\n            if (status === STATUS.PAID) {\n                obj.discount = el.discount;\n            } else {\n                obj.discount = 0;\n            }\n            total += obj.amount * obj.price * (100 - obj.discount) / 100;\n            obj.parts = el.ref_value.parts;\n            obj.attrs = el.ref_value.attrs;\n            obj.attrs.instruction = 'Ngày uống: ' + (obj.attrs.default_daily_usage) + ' lần x '  + (obj.attrs.unit === 'tablet' ? obj.attrs.default_quantity/obj.attrs.strength + ' viên' :  obj.attrs.default_quantity + obj.attrs.unit) \n            let oldestLot = 10000;\n            this.state.listLot.forEach((l, i) => {\n                if (l.product_id === el.ref_id && l.remain > 0) {\n                    if (oldestLot > l.remainDate) {\n                        oldestLot = l.remainDate;\n                        obj.color = l.color;\n                        obj.lot_id = l.id;\n                        obj.selected = i;\n                        obj.remain = l.remain;\n                    }\n                }\n            });\n            listData.push(obj);\n            if(fakeTable.length > 0) fakeTable.splice(0,1)\n        });\n        if (status === STATUS.DONE) {\n            status = '';\n            orderType = ORDER_TYPE.OTHER.code;\n            orderId = '';\n            orderCode = '';\n        }\n        this.setState({\n            jobId,\n            orderId,\n            orderCode,\n            orderType,\n            jobStepId,\n            status,\n            listData,\n            showOrder: false,\n            total\n        });\n    }\n    selectTypeCustomer = (tab) => {\n        let { activeTab } = this.state\n        if (activeTab !== tab) this.setState({ activeTab: tab })\n    }\n    updateOrrder = () => {\n        let { listData, status } = this.state;\n        if(status !== STATUS.NEW) return;\n        let data = [];\n        listData.forEach(l => {\n            data.push({\n                id: l.itemId,\n                quantity: l.amount\n            });\n        })\n        PharmacyService.updateQuantity(data)\n        .then(res => {\n            this.setState({\n                refresh: false,\n                notiMessage: 'Cập nhật số lượng thành công!'\n            });\n        }).catch(err => {\n            console.log(err);\n            this.setState({\n                notiMessage: 'Cập nhật số lượng thất bại!'\n            });\n        })\n    }\n    render() {\n        let { orderCode, orderId, listProduct, listLot, listData, status, customer, total, orderType, doctor, jobInstruction, jobCtime, show, showOrder, listOrder, activeTab, fakeTable, jobSubclinical, retailCustomerName, retailCustomerPhone } = this.state;\n        let order_ctime = new Date(jobCtime);\n        console.log(customer,'cust');\n        let itemPharmacy = listData.map((itemP, index) => {\n            return (\n                <tr key={index}>\n                    <td>{index + 1}</td>\n                    <td className=\"ma\">{itemP.product_id}</td>\n                    <td className=\"name\">{itemP.name}</td>\n                    <td>{itemP.price? new Intl.NumberFormat('de-DE').format(itemP.price) + 'đ' : ''}</td>\n                    <td>\n                        <Input style={{ 'backgroundColor': itemP.color }} className=\"number pointer middle\" type=\"select\" name=\"lot_id\" onChange={(e) => this.onChangeB(e, index)}>\n                            {listLot.map((data, i) => {\n                                if (data.product_id === itemP.product_id && data.remain > 0) {\n                                    return (\n                                        <option key={i} className=\"pointer\" selected={i == itemP.selected ? true : false} style={{ 'backgroundColor': data.color }} value={data.id}> {data.code} -- Còn lại: {data.remain}   </option>\n                                    );\n                                }\n                                return null;\n                            })}\n                        </Input>\n                    </td>\n                    <td className=\"quantity\">\n                        <Input readOnly={status === STATUS.PAID || status === STATUS.DONE} style={{ 'borderColor': itemP.err ? 'red' : '' }} type=\"text\" name=\"amount\" placeholder=\"Số lượng\" value={itemP.amount} onChange={e => this.onChangeQ(e, index, itemP.price)} />\n                        <span style={{ 'color': 'red' }}>{itemP.err}</span>\n                    </td>\n                    <td> {itemP.discount ? itemP.discount + '%' : '0%'} </td>\n                    <td>{itemP.amount > 0 ? new Intl.NumberFormat('de-DE').format(itemP.amount * itemP.price) +'đ' : '0đ'} </td>\n                    <td className=\"instruction\">\n                        {itemP.attrs ?\n                            <Input name=\"instruction\" className=\"instruction-content\" type=\"textarea\" onChange={e => this.onChangeInstruction(e, index)}\n                                value={itemP.attrs.instruction}\n                            /> \n                        : null}\n                    </td>\n                    <td><Button disabled={status === STATUS.NEW && orderType === ORDER_TYPE.OTHER.code || status === '' ? false : true} className=\"btnDelete\" color=\"danger\" onClick={e => this.onDelete(e, index)}> X </Button></td>\n                </tr>\n            )\n        });\n\n        return (\n            <Fragment>\n                <ModalNoti message={this.state.notiMessage} done={this.doneAlert}></ModalNoti>\n                <ModalConfirm message={this.state.notiConfirm} answer={this.answer} ></ModalConfirm>\n                <div>\n                    <Col xs={12}>\n                        <Row className=\"searchCode customCard mb-10\">\n                            <Label className=\"title-card\" sm={4}><span className=\"material-icons\">playlist_add_check</span> Nhập mã đơn hàng/mã bệnh nhân: </Label>\n                            <Col sm={3}>\n                                <Input disabled={orderType === ORDER_TYPE.OTHER.code} type=\"text\" name=\"orderCode\" value={orderCode} onChange={this.onChange} />\n                            </Col>\n                            <Col sm={1}>\n                                <Button type=\"button\" onClick={this.OnSubmitOrderId} outline color=\"primary\" ><span className=\"material-icons\">search</span></Button>\n                            </Col>\n                            <Label sm={{ size: 1, offset: 1 }}>{status === '' ? '' : 'Trạng thái: '}</Label>\n                            <Label sm={2}> {status === '' ? '' : status === STATUS.NEW ? 'Chưa thanh toán' : status === STATUS.PAID ? 'Đã thanh toán ' : 'Hoàn tất '}\n                                {status === '' ? null : status === STATUS.NEW ? <FontAwesomeIcon color={'red'} icon={'fas', faTimesCircle} /> : <FontAwesomeIcon color={'green'} icon={'fas', faCheckCircle} />}\n                            </Label>\n                        </Row>\n                        <Nav tabs>\n                            <NavItem className=\"pointer\">\n                                <NavLink className={classnames({ active: activeTab === '1' })} onClick={() => { this.selectTypeCustomer('1'); }}>Theo đơn</NavLink>\n                            </NavItem>\n                            <NavItem className=\"pointer\">\n                                <NavLink className={classnames({ active: activeTab === '2' })} onClick={() => { this.selectTypeCustomer('2'); }}>Bán lẻ</NavLink>\n                            </NavItem>\n                        </Nav>\n                        <TabContent activeTab={activeTab} className=\"mb-10\">\n                            <TabPane tabId=\"1\" className=\"customCard\">\n                                <Row className=\"customer pt-0\">\n                                    <Col xs={6} className=\"no-padding vertical-line\">\n                                        <CustomerForm data={{ code: customer.code, full_name: customer.full_name, birthday: customer.birthday, gender: customer.gender, contacts: customer?.contacts }} mode=\"pharmacy\"></CustomerForm>\n                                        <Row className=\"pt-5 ml-10\">\n                                            <Col xs={11} className=\"ml-10\">\n                                                <Row className=\"mb-1\">\n                                                    <Col xs={2} className=\"no-padding\">Chẩn đoán:</Col>\n                                                    <Col xs={10} className=\"no-padding\">{jobInstruction}</Col>\n                                                </Row>\n                                            </Col>\n                                        </Row>                      \n                                    </Col>\n                                    <Col xs={{ 'size': '6',}} className=\"doctor_info pl-40\">\n                                        <h5 className=\"title-card\"><span className=\"material-icons\">person_add</span> Thông tin bác sĩ</h5>\n                                        <Row>\n                                            <Label xs={2} className=\"p-0\">Bệnh viện:</Label>\n                                            <Label xs={5} className=\"p-0\">{doctor.hostpital}</Label>\n                                            <Label xs={1} className=\"p-0\">Khoa:</Label>\n                                            <Label xs={4} className=\"p-0\">{doctor.class}</Label>\n                                        </Row>\n                                        <Row className=\"p0\">\n                                            <Label xs={2} className=\"p-0\">Họ tên:</Label>\n                                            <Label xs={5} className=\"p-0\">{doctor?.full_name}</Label>\n                                            <Label xs={1} className=\"p-0\">SDT:</Label>\n                                            <Label xs={4} className=\"p-0\">{doctor.phone}</Label>\n                                        </Row>\n                                        <Row className=\"p0\">\n                                            <Label xs={2} className=\"p-0\">Ngày kê đơn:</Label>\n                                            <Label xs={10} className=\"p-0\"> {jobInstruction !== '' ? order_ctime.toLocaleString('en-GB').slice(0,10) : null} </Label>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </TabPane>\n                            <TabPane tabId=\"2\">\n                                <Row className=\"customCard customer\">\n                                    <Col xs={4} className=\"doctor_info min-h-30\">\n                                        <h5 className=\"title-card\"><span className=\"material-icons\">person</span> Thông tin khách</h5>\n                                        <Row>\n                                            <Label xs={3}>Họ tên:</Label>\n                                            <Col xs={9}>\n                                                <Input type=\"text\" name=\"retailCustomerName\" value={retailCustomerName} onChange={this.onChange} />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Label xs={3}>SDT:</Label>\n                                            <Col xs={9}>\n                                                <Input type=\"text\" name=\"retailCustomerPhone\" value={retailCustomerPhone} onChange={this.onChange} />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </TabPane>\n                        </TabContent>\n                        <Row className=\"search-product customCard mb-10\">\n                            <Col xs={2} className=\"title-card pb-10\">\n                                <span className=\"material-icons\">search</span>Tìm kiếm thuốc\n                            </Col>\n                            <Col xs={10}>\n                                <FormSearch onSelect={this.onSelect} order_id={orderId} list={listProduct} />\n                            </Col>\n                        </Row>\n                        <Row className=\"info customCard\">\n                            <Col className=\"title-card\" xs={8}><Medicine xmlns=\"http://www.w3.org/2000/svg\" className=\"flaticon-icons\" fill=\"#28b76b\"/> Thông tin đơn thuốc :\n                            </Col>\n                            <br></br>\n                            <br></br>\n                            <div className=\"pharmacy-table\">\n                                <Table bordered >\n                                    <thead>\n                                        <tr>\n                                            <th >STT</th>\n                                            <th className=\"ma\">Mã thuốc</th>\n                                            <th className=\"name\" >Tên thuốc</th>\n                                            <th >Đơn giá</th>\n                                            <th >Số lô</th>\n                                            <th className=\"quantity\">Số lượng</th>\n                                            <th >Chiết khấu</th>\n                                            <th >Thành tiền</th>\n                                            <th>Hướng dẫn</th>\n                                            <th ></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"bodyTable\">\n                                        {itemPharmacy}\n                                        {fakeTable.map((f, fIndex) => {\n                                            return (\n                                                <tr key={fIndex} height=\"60px\">\n                                                <td></td>\n                                                <td></td>\n                                                <td></td>\n                                                <td></td>\n                                                <td></td>\n                                                <td></td>\n                                                <td></td>\n                                                <td></td>\n                                                <td></td>\n                                                <td></td>\n                                            </tr>\n                                            )              \n                                        })}\n                                        {/* <tr>\n                                            <td></td>\n                                            <td className=\"ma\"></td>\n                                            <td className=\"name\"><FormSearch onSelect={this.onSelect} order_id={orderId} list={listProduct} /></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td className=\"instruction\"></td>\n                                            <td></td>\n                                        </tr> */}\n                                        {/* ////////////TONG//////////////// */}\n                                        <tr>\n                                            <td></td>\n                                            <td className=\"ma\"></td>\n                                            <td className=\"name\"></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td>Tổng tiền:</td>\n                                            <td>{new Intl.NumberFormat('de-DE').format(total)} đ</td>\n                                            <td className=\"instruction\"></td>\n                                            <td ></td>\n                                        </tr>\n                                    </tbody>\n                                </Table>\n                            </div>\n                            <div className=\"options-pharmacy\">\n                                <Button hidden={status === STATUS.NEW &&  orderType !== ORDER_TYPE.OTHER.code ? false : true} onClick={this.updateOrrder}>Cập nhật số lượng</Button>\n                                <Button hidden={status === STATUS.NEW ? false : true}\n                                    className=\"ml-10\"\n                                    data-index=\"10\"\n                                    color=\"primary\"\n                                    onClick={this.handlePayment}\n                                >Thanh toán</Button>\n                                <Modal isOpen={show} >\n                                    <ModalHeader>\n                                        Thu Ngân\n                                        </ModalHeader>\n                                    <ModalBody>\n                                        <AccountingForm handleClose={this.handleClose} mode=\"pharmacy\" retail={activeTab === '2' ? true : false} retailCustomerName={retailCustomerName}  affterPayment={this.affterPayment} billID={orderCode}></AccountingForm>\n                                    </ModalBody>\n                                    <ModalFooter><Button onClick={this.handleClose}>Close</Button></ModalFooter>\n                                </Modal>\n                                <Button color='primary'\n                                 disabled={listData.length > 0 ? false : true} hidden={status === STATUS.PAID || status === STATUS.DONE ? false : true}\n                                    onClick={() => {\n                                        printJS({\n                                            printable: 'medPrintId',\n                                            type: 'html',\n                                            css: './PrintPharmacy.scss',\n                                            targetStyles: ['*'],\n                                            style: `@page {\n                                                    size: A4;\n                                                    margin: 0;\n                                                            },\n                                                        @media print {\n                                                            .medPrintId{\n                                                                margin: 0;\n                                                                border: initial;\n                                                                border-radius: initial;\n                                                                width: initial;\n                                                                min-height: initial;\n                                                                box-shadow: initial;\n                                                                background: initial;\n                                                                page-break-after: always;\n                                                            }`,\n                                            header: null,\n                                            footer: null,\n                                        });\n                                    }}\n                                >In Hóa Đơn</Button>{' '}\n                                <Button hidden={status === STATUS.PAID ? false : true} color='primary' onClick={this.onSubmitProduct} >Xác nhận lấy thuốc</Button>\n                                <Button hidden={status === '' && orderType === ORDER_TYPE.OTHER.code ? false : true} onClick={this.createOrder} color='primary' >Xác nhận tạo đơn mới</Button>\n                                <Button hidden={status === STATUS.DONE ? false : true} onClick={this.refreshOrder} color='primary' >Tạo đơn mới</Button>\n                                <Button style={{ 'marginLeft': '10px' }} color='danger' onClick={this.onSubmitCancel} >Hủy</Button>\n                            </div>\n                            <PrintPharmacy etcArr={listData} etcCode={orderCode} cusData={activeTab === '1' ? customer : {full_name: retailCustomerName, contacts: [{phone: retailCustomerPhone, address:{}}]}} total={total}></PrintPharmacy>\n                        </Row>\n                    </Col>\n                </div>\n                <Modal className=\"pharmacy-list-order\" isOpen={showOrder} >\n                    <ModalHeader>\n                        Lịch sử đơn thuốc\n                    </ModalHeader>\n                    <ModalBody>\n                        <ModalOrder onSelectOrder={this.onSelectOrder} listOrder={listOrder} ></ModalOrder>\n                    </ModalBody>\n                    <ModalFooter><Button onClick={this.onClose}>Close</Button></ModalFooter>\n                </Modal>\n               \n            </Fragment>\n        );\n    }\n}\nexport default FormPharmacy;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport FormPharmacy from './Components/FormPharmacy/FormPharmacy';\n\n\n\nclass Pharmacy extends Component {\n\n    render() {\n        const { path } = this.props.match;\n        return (\n            <div className=\"Pharmacy pl-20 pr-20\">\n                <Switch>\n                    <Route path={`${path}`} exact component={FormPharmacy} />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default Pharmacy","import { Http } from \"../../../Helper/Http\";\nimport { BASE_URL } from \"../../../Constances/const\";\nimport {STEP_TYPE, ALL} from \"../../../Constances/const\"\nclass TransactionService {\n  constructor() {\n    if (TransactionService._instance) {\n      return TransactionService._instance;\n    }\n    TransactionService._instance = this;\n\n    // ... Your rest of the constructor code goes after this\n  }\n\n  // service service\n\n  //   changeQuantity(order_id,quantity){\n  //     return Http.post(`/order/item/update`,{order_id})\n  // }\n  getOrderList(order_id) {\n    return Http.get(`/order/item/list`, { order_id });\n  }\n  getUserbyId(id) {\n    return Http.get(`/org/user/get`,{id})\n  }\n  getUserList(payload){\n    return Http.get(`/org/user/list`,payload)\n  }\n  getHistoryTransactionByTimeAndUserID(user_id,start_date,end_date){\n    if(user_id === ALL.code) {\n      return Http.get(`/accounting/transaction/list`,{start_date,end_date})\n    }\n    return Http.get(`/accounting/transaction/list`,{user_id,start_date,end_date})\n  }\n  getBookList(status) {\n    return Http.get(`/accounting/book/list`, {status});\n  }\n  getOrder(code) {\n    return Http.get(`/order/order/get`, { code });\n  }\n  postTransaction(payload) {\n    return Http.post(`/accounting/transaction/create`, payload);\n  }\n  getListTransaction(customer_code){\n    return Http.get(`/job/step/list?customer_code=${customer_code}&&type=${[STEP_TYPE.EXAM,STEP_TYPE.TEST]}`)\n  }\n  getListStepCancel(customer_id, date) {\n    return Http.get(`/job/job/list?customer_id=${customer_id}&&date=${date}`)\n  }\n  getCustomer(code) {\n    return Http.get(`/customer/customer/get`, {code})\n  }\n  cancelTransaction(data){\n    return Http.post(`/job/step/update`, data);\n  }\n  postEditOrder(item){\n    return Http.post(`/order/item/update`,item )\n  }\n  getStep(id) {\n    return Http.get(`/job/step/get`, {id});\n  }\n  exporExcelTransaction(user_id,start_date,end_date) {\n    return `${BASE_URL}/accounting/transaction/export-excel?user_id=${user_id}&&start_date=${start_date}&&end_date=${end_date}`\n  }\n}\n\nconst instance = new TransactionService();\n\nexport default instance;\n","import React, { Component, Fragment } from 'react';\nimport { Table, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, Col, Row } from 'reactstrap';\nimport { SERVICE_TYPE, STEP_TYPE, ORDER_TYPE, STATUS, ModalNoti, Util  } from '../../Shared';\nclass TransTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            reason: ''\n        }     \n    }\n    render() {\n        let { isManager, items, customerCode, amountRetail } = this.props;\n        let totalExam = 0;\n        let totalTest = 0;\n        let totalXray = 0;\n        let totalEnt = 0;\n        let totalUltrasound = 0;\n        let totalOther = 0;\n        let totalBuy = 0; \n        let total\n        let item = items.filter(i => i.code?.includes(`${customerCode}`))\n        .map((i, index) => {\n            i.total = i.exam + i.test + i.xray + i.ent + i.ultrasound + i.buy;\n            totalExam +=  +i.exam;\n            totalTest +=  +i.test;\n            totalXray +=  +i.xray;\n            totalEnt +=  +i.ent;\n            totalUltrasound += +i.ultrasound;\n            totalOther += +i.other;\n            totalBuy += +i.buy;\n            total = totalExam + totalTest + totalXray + totalEnt + totalUltrasound + totalOther + totalBuy;\n            return  <tr key={index}>\n                        <td> {index+1} </td>\n                        <td> {i.name} </td>\n                        <td> {i.code} </td>\n                        <td> {i.phone} </td>\n                        <td> {i.address} </td>\n                        <td> {i.exam !== 0 ? Util.formatPrice(i.exam) : ''} </td>\n                        <td> {i.test !== 0 ? Util.formatPrice(i.test) : ''} </td>\n                        <td> {i.xray !== 0 ? Util.formatPrice(i.xray) : ''} </td>\n                        <td> {i.ent !== 0 ? Util.formatPrice(i.ent) : ''} </td>\n                        <td> {i.ultrasound !== 0 ? Util.formatPrice(i.ultrasound) : ''} </td>\n                        <td> {i.other !== 0 ? Util.formatPrice(i.other) : ''} </td>\n                        <td> {i.buy !== 0 ? Util.formatPrice(i.buy) : ''} </td>\n                        <td> {Util.formatPrice(i.total)} </td>\n                        {isManager? <td className=\"transaction-btn-cancel middle pointer\" onClick={e => this.props.searchCustomer(e, i.id)}>Hủy</td> : null} \n                    </tr>\n        })\n        return (\n            <Fragment>\n                 <Table>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Bệnh nhân</th>\n                            <th>Mã bệnh nhân</th>\n                            <th>Điện thoại</th>\n                            <th>Địa chỉ</th>\n                            <th>Khám</th>\n                            <th>Xét nghiệm</th>\n                            <th>X quang</th>\n                            <th>Nội soi</th>\n                            <th>Siêu âm</th>\n                            <th>Cấp cứu</th>\n                            <th>Thuốc</th>\n                            <th>Tổng</th>\n                            {isManager? <th>Options</th> : null} \n                        </tr>\n                    </thead>\n                    <tbody>\n                        {item}\n                        {amountRetail > 0 ?\n                        <tr> \n                            <td>{items.length}</td>\n                            <td>KHÁCH LẺ</td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td>{Util.formatPrice(amountRetail)}</td>\n                            <td>{Util.formatPrice(amountRetail)}</td>\n                            { isManager ? <td></td> : null }\n                        </tr>\n                        : null}\n                        <tr>\n                            <th></th>\n                            <th></th>\n                            <th></th>\n                            <th></th>\n                            <th>Tổng: </th>\n                            <th>{Util.formatPrice(totalExam)}đ</th>\n                            <th>{Util.formatPrice(totalTest)}đ</th>\n                            <th>{Util.formatPrice(totalXray)}đ</th>\n                            <th>{Util.formatPrice(totalEnt)}đ</th>\n                            <th>{Util.formatPrice(totalUltrasound)}đ</th>\n                            <th>{Util.formatPrice(totalOther)}đ</th>\n                            <th>{Util.formatPrice(totalBuy + amountRetail)}đ</th>\n                            <th>{Util.formatPrice(total + amountRetail)}đ</th>\n                            {isManager? <th></th> : null} \n                        </tr>\n                    </tbody>\n                </Table>\n            </Fragment>\n        );\n    }\n}\n\nexport default TransTable;","import React, { Component, Fragment } from 'react';\nimport { Table, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, Col, Row } from 'reactstrap';\nimport { SERVICE_TYPE, STEP_TYPE, ORDER_TYPE, STATUS, ModalNoti, Util  } from '../../Shared';\nclass CancelTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }     \n    }\n    render() {\n        let { items, customerCode } = this.props;\n        let total = 0;\n        let item = items.filter(i => i.order?.customer?.code.includes(`${customerCode}`)).map((i, index) => {\n            let type = i.job_step.type === 'buy' ? i.order?.type : i.order?.items[0]?.ref_value?.type;\n            total += i.order.total;\n            return  <tr key={index}>\n                        <td> {index+1} </td>\n                        <td> {i.order?.customer?.full_name} </td>\n                        <td> {i.order?.customer?.code} </td>\n                        <td> {i.order?.customer?.contacts[0]?.phone} </td>\n                        <td> {i.order?.customer?.contacts[0]?.address?.province} </td>\n                        <td> {i.job_step.type === STEP_TYPE.BUY ? type === ORDER_TYPE.ETC.code ? ORDER_TYPE.ETC.label : type === ORDER_TYPE.OTC.code ? ORDER_TYPE.OTC.label : ORDER_TYPE.OTHER.label\n                        : type === SERVICE_TYPE.EXAM ? 'Khám bệnh' : type === SERVICE_TYPE.TEST ? 'Xét nghiệm' : type === SERVICE_TYPE.XRAY ? 'X quang'\n                        : type === SERVICE_TYPE.ULTRASOUND ? 'Siêu âm' : type === SERVICE_TYPE.ENT ?  'Nội soi' : 'Khác'} </td>\n                        <td> {i.job_step?.results?.map(r => r.reason)} </td>\n                        <td>{new Date(i.job_step.ctime).toLocaleString('en-GB')}</td>\n                        <td>{new Date(i.job_step.mtime).toLocaleString('en-GB')}</td>\n                        <td> {Util.formatPrice(i.order.total)} </td>\n                    </tr>\n        })\n        return (\n            <Fragment>\n                 <Table>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Bệnh nhân</th>\n                            <th>Mã bệnh nhân</th>\n                            <th>Điện thoại</th>\n                            <th>Địa chỉ</th>\n                            <th>Giao dịch hủy</th>\n                            <th>Lý do</th>\n                            <th>Thời gian GD</th>\n                            <th>Thời gian hủy</th>\n                            <th>Tiền</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {item}\n                        <tr>\n                            <th></th>\n                            <th></th>\n                            <th></th>\n                            <th></th>\n                            <th></th>\n                            <th></th>\n                            <th></th>\n                            <th></th>\n                            <th>Tổng: </th>\n                            <th>{Util.formatPrice(total)}đ</th>\n                        </tr>\n                    </tbody>\n                </Table>\n            </Fragment>\n        );\n    }\n}\n\nexport default CancelTable;","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, Col, Row } from 'reactstrap';\n\nclass CancelModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            reason: ''\n        }\n    }\n    render() {\n        let { openCancel, answer } = this.props;\n        return (\n            <div className=\"CancelModal\">\n                <Modal isOpen={openCancel} >\n                    <ModalHeader >Hủy giao dịch</ModalHeader>\n                    <ModalBody>\n                        <Row>\n                            <Label xs=\"1\">Lí do hủy: </Label>\n                            <Col xs=\"11\"><Input type=\"text\" value={this.state.reason} onChange={e => this.setState({reason: e.target.value})} /></Col>\n                        </Row>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button onClick={() => { answer(this.state.reason) }}>Xác nhận</Button>{' '}\n                        <Button color=\"danger\" onClick={() => { answer() }}>Hủy</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default CancelModal;","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Table, Input, Label, Col, Row } from 'reactstrap';\nimport { SERVICE_TYPE, ORDER_TYPE, STATUS, ModalNoti, STEP_TYPE  } from '../../Shared';\nimport TransactionService from '../../Shared/TransactionService';\nimport CancelModal from './CancelModal';\nclass TransactionModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            openCancel: false,\n            step: {},\n            notiMessage: ''\n        }\n    }\n    cancel = (e, step) => {   \n        let found  = this.props.listStepCancel.find(l => l.job_step?.type === STEP_TYPE.TEST)\n        if(step.job_step.type === STEP_TYPE.EXAM && found) {\n            this.setState({\n                notiMessage: 'Không thể hủy dịch vụ khám này vì bệnh nhân đã kê xét nghiệm!'\n            })\n        }else {\n            this.setState({\n                step,\n                openCancel: true\n            })\n        }\n    }\n    answer = (reason) => {\n        if(reason) {\n            let step = this.state.step;\n            const data = {\n                id: step.order.ref_id,\n                status: STATUS.CANCEL,\n                results: [\n                    {reason}\n                ]\n            }\n            TransactionService.cancelTransaction(data)\n            .then(res => {\n                this.setState({\n                    openCancel: false,\n                    notiMessage: 'Hủy giao dịch thành công!'\n                });\n                step.job_step.results = [{reason}];\n                this.props.afterCancelDone(step)\n                this.props.closeTrans();\n            }).catch(err => {\n                console.log(err);\n                this.setState({\n                    openCancel: false,\n                    notiMessage: 'Hủy giao dịch thất bại!',\n                })\n                this.props.closeTrans();\n            })\n        }else {\n            this.setState({\n                openCancel: false\n            })\n        }\n    }\n    render() {\n        let { listStepCancel, openTrans } = this.props;\n        let { openCancel, notiMessage } = this.state;\n        let item = listStepCancel.map((l, index) => {\n            let date = new Date(l.order?.ctime);\n            let type = l.job_step.type === STEP_TYPE.BUY ? l.order?.type : l.order?.items[0]?.ref_value?.type;\n            return  <tr key={index}>\n                        <td>{index + 1}</td>\n                        <td>{l.order?.customer?.full_name}</td>\n                        <td>{l.order?.customer?.contacts[0]?.phone}</td>\n                        <td>{l.order?.customer?.contacts[0]?.address?.province}</td>\n                        <td>{l.job_step.type === STEP_TYPE.BUY ? type === ORDER_TYPE.ETC.code ?  ORDER_TYPE.ETC.label : type === ORDER_TYPE.OTC.code ?  ORDER_TYPE.OTC.label :  ORDER_TYPE.OTHER.label \n                        : type === SERVICE_TYPE.EXAM ? 'Khám bệnh' : type === SERVICE_TYPE.TEST ? 'Xét nghiệm' : type === SERVICE_TYPE.XRAY ? 'X quang'\n                        : type === SERVICE_TYPE.ULTRASOUND ? 'Siêu âm' : type === SERVICE_TYPE.ENT ?  'Nội soi' : 'Khác'}</td>\n                        <td>{new Intl.NumberFormat('de-DE').format(l.order?.total)}đ</td>\n                        <td>{date.toLocaleString('en-GB')}</td>\n                        { l.job_step.type === STEP_TYPE.TEST && l.job_step.status !== STATUS.DONE || l.job_step.type === STEP_TYPE.EXAM ? <td onClick={e => this.cancel(e, l)} className=\"transaction-btn-cancel middle pointer\">Hủy</td> : <td></td>} \n                    </tr>\n        })\n        return (\n            <div className=\"TransactionModal\">\n                <CancelModal openCancel={openCancel} answer={this.answer}/>\n                <ModalNoti  message={notiMessage} done={() => this.setState({notiMessage: ''})}/>\n                <Modal isOpen={openTrans}  >\n                    <ModalHeader >Thông tin giao dịch</ModalHeader>\n                    <ModalBody>\n                        <Table>\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Tên bệnh nhân</th>\n                                    <th>Điện thoại</th>\n                                    <th>Địa chỉ</th>\n                                    <th>Loại dịch vụ</th>\n                                    <th>Giá tiền</th>\n                                    <th>Thời gian giao dịch</th>\n                                    <th>Thao tác</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {item}\n                            </tbody>\n                        </Table>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"danger\" onClick={this.props.closeTrans}>Hủy</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default TransactionModal;","import React from 'react';\nimport { Button, FormGroup, Label, Input, Col, Nav, NavLink, NavItem, TabContent, TabPane, Row } from 'reactstrap';\nimport { FormParent, ModalNoti } from '../../../Reception/Shared';\nimport TransactionService from '../../Shared/TransactionService';\n// import TransactionTable from '../TransactionForm/TransactionTable';\nimport TransTable from './TransTable';\nimport CancelTable from './CancelTable';\nimport NumberFormat from 'react-number-format';\nimport Select, { createFilter, components } from 'react-select';\nimport { Util } from '../../../../Helper/Util';\nimport { Table } from 'reactstrap'\nimport AuthService from \"../../../../Shared/Services/AuthService\";\nimport PricePolicyService from \"../../../Service/Shared/PricePolicyService\";\nimport { ROLE, SERVICE_TYPE, STEP_TYPE, ORDER_TYPE, STATUS, PAY_METHOD, ALL } from \"../../Shared\";\nimport TransactionModal from './TransactionModal';\nclass TransactionForm extends FormParent {\n  constructor(props) {\n    super(props);\n    let today = new Date().toISOString();\n    let date = today.substr(0, 10);\n    this.state = {\n      customers: [],\n      itemsCancel: [],\n      itemsTransaction: [],\n      customerCode: '',\n      listStepCancel: [],\n      isManager: false,\n      policyPriceList: [],\n      userList: [],\n      notiMessage: '',\n      selectedUser: null,\n      show: false,\n      activeTab: '1',\n      form: this._getInitFormData({\n        user_id: '',\n        userFirstName: '',\n        userLastName: '',\n        userFullName: '',\n        start_date: date,\n        end_date: date,\n        bookId: '',\n        amount: '',\n        cTime: '',\n        transactionId: '',\n      }),\n\n\n    }\n    // this.handleChange.bind(this)\n  };\n  setShow = (show) => {\n    this.setState({ show });\n  }\n  findUserbyId = (id) => {\n    return TransactionService.getUserbyId(id)\n  }\n  findHistoryTransaction = (user_id, start_date, end_date) => {\n    return TransactionService.getHistoryTransactionByTimeAndUserID(user_id, start_date, end_date)\n  }\n\n\n  handleSearch = () => {\n    let { start_date, end_date, } = this.state.form;\n\n    let { selectedUser } = this.state;\n    // const today = Intl.DateTimeFormat('en', { day: 'numeric', month: 'numeric', year: 'numeric' }).format(new Date()).toString();\n    if (selectedUser == undefined) {\n      this.setNotiMessage(\"Có lỗi! Xin vui lòng chọn nhân viên \")\n    } else {\n      // this.findHistoryTransaction(currentUser.id, start_date.value,\n      //   end_date.value).then((res) => {\n      this.findHistoryTransaction(selectedUser.value, start_date.value,\n        end_date.value).then((res) => {\n          let transactionInfo = res.data\n\n          // transactionInfo.records.forEach((transaction, index) => {\n          //   if (transaction.order.items[0].attrs == undefined)\n\n          //   {\n          //   transactionInfo.records.splice(index, 1);\n          //   console.log(transactionInfo, index, 'info333');\n          // }\n          // });\n\n          //------------------------------------------------------------------------------------------------------------------Code A dũng\n          // this.setState({ amount: transactionInfo.amount })\n          // this.setState({ show: true })\n          // let transactionTest = transactionInfo.records.filter(transaction => transaction.order.items[0].ref_value.type == 'test')\n          // let transactionExam = transactionInfo.records.filter(transaction => transaction.order.items[0].ref_value.type == 'exam')\n          // let transactionXray = transactionInfo.records.filter(transaction => transaction.order.items[0].ref_value.type == 'x-ray')\n          // let transactionProduct = transactionInfo.records.filter(transaction => transaction.ref == 'order' && transaction.order.items[0].ref == 'product')\n          // let transactionRetail = transactionInfo.records.filter(transaction => transaction.ref == 'retail')\n          // let transactionUltrasound = transactionInfo.records.filter(transaction => transaction.order.items[0].ref_value.type == 'ultrasound')\n          // let transactionEnt = transactionInfo.records.filter(transaction => transaction.order.items[0].ref_value.type == 'ent')\n          // let transactionCash = transactionInfo.records.filter(transaction => transaction.type == 'cash')\n          // let transactionOther = transactionInfo.records.filter(transaction => transaction.type == 'other')\n          // this._fillForm({\n          //   transactionId: transactionInfo.id,\n          //   amount: transactionInfo.amount,\n          //   cTime: transactionInfo.cTime,\n          //   sumTransaction: '',\n          //   start_date: '',\n          //   end_date: '',\n          // })\n          //--------------------------------------------------------------------------------------------------------------------------------\n          let items = []\n          let itemsCancel = []\n          transactionInfo?.records.forEach(t => {\n            if (t.job_step?.status === STATUS.CANCEL) {\n              itemsCancel.push(t);\n            } else {\n              items.push(t)\n            }\n          });\n          let arrIdCustomer = [];\n          let customers = [];\n          items.forEach(i => {\n            if (!arrIdCustomer.includes(i.order?.customer?.id)) {\n              arrIdCustomer.push(i.order?.customer?.id);\n              customers.push({\n                id: i.order?.customer?.id,\n                code: i.order?.customer?.code,\n                name: i.order?.customer?.full_name,\n                phone: i.order?.customer?.contacts[0]?.phone,\n                address: i.order?.customer?.contacts[0]?.address?.province,\n                exam: 0,\n                test: 0,\n                xray: 0,\n                ultrasound: 0,\n                ent: 0,\n                other: 0,\n                buy: 0,\n              })\n            }\n          })\n          items.forEach(i => {\n            customers.map(a => {\n              if (i.order?.customer?.id === a.id) {\n                if (i.job_step?.type === STEP_TYPE.EXAM) {\n                  return a.exam += i.order.total;\n                }\n                if (i.job_step?.type === STEP_TYPE.BUY) {\n                  return a.buy += +i.order?.total;\n                }\n                if (i.job_step?.type === STEP_TYPE.TEST) {\n                  if (i.order?.items[0]?.ref_value?.type === SERVICE_TYPE.ULTRASOUND) {\n                    return a.ultrasound += +i.order.total;\n                  }\n                  if (i.order?.items[0]?.ref_value?.type === SERVICE_TYPE.TEST) {\n                    return a.test += +i.order.total\n                  }\n                  if (i.order?.items[0]?.ref_value?.type === SERVICE_TYPE.XRAY) {\n                    return a.xray += +i.order.total\n                  }\n                  if (i.order?.items[0]?.ref_value?.type === SERVICE_TYPE.ENT) {\n                    return a.ent += +i.order.total\n                  }\n                  if (i.order?.items[0]?.ref_value?.type === SERVICE_TYPE.OTHER) {\n                    return a.other += +i.order.total\n                  }\n                }\n              }\n            })\n          })\n          itemsCancel.map(i => {\n            TransactionService.getStep(i.job_step.id)\n            .then(res => {\n              itemsCancel.find(c => {\n                if(c.job_step.id === res.data.id) {\n                  c.job_step.results = res.data.results;\n                  return c;\n                }\n              });\n            }).catch(err => console.log(err))\n          })\n          this.setShow(true)\n          this.setState({\n            customers,\n            itemsCancel,\n            itemsTransaction: items,\n            amountCash: transactionInfo?.revuene?.cash,\n            amountAtm: transactionInfo?.revuene?.atm,\n            amountCancel: transactionInfo?.revuene?.cash,\n            amountRetail: transactionInfo?.revuene?.retail,\n          })\n          if (transactionInfo.count === 0) {\n            this.setNotiMessage(\"Không có giao dịch trong khoảng thời gian này\");\n          }\n          // this.transactionExam(transactionExam)\n          // this.transactionProduct(transactionProduct)\n          // this.transactionTotal(transactionInfo);\n          // this.transactionCash(transactionCash);\n          // this.transactionOther(transactionOther);\n          // this.transactionTest(transactionTest);\n          // this.transactionUltrasound(transactionUltrasound);\n          // this.transactionEnt(transactionEnt);\n          // this.transactionXray(transactionXray);\n          // this.transactionRetail(transactionRetail)\n        }).catch(err => {\n          console.log(err)\n          this.setNotiMessage(\"Không có giao dịch trong khoảng thời gian này\");\n          this.setSubmitLoading(false);\n        })\n\n    }\n  }\n\n\n  transactionTotal(transactionInfo) {\n    let sum = 0;\n\n    for (let i = 0; i < transactionInfo.records.length; i++) {\n      sum += transactionInfo.records[i].amount\n    }\n    this.setState({ sum: sum })\n  }\n\n  transactionProduct(transactionProduct) {\n    let sumProduct = 0;\n    transactionProduct.map(a =>\n      sumProduct += a.amount\n    )\n    this.setState({ sumProduct: sumProduct })\n  }\n  transactionExam(transactionExam) {\n    let sumExam = 0;\n    transactionExam.map(a =>\n      sumExam += a.amount\n    )\n    this.setState({ sumExam: sumExam })\n  }\n  transactionRetail(transactionRetail) {\n    let sumRetail = 0;\n    transactionRetail.map(a =>\n      sumRetail += a.amount\n    )\n    this.setState({ sumRetail: sumRetail })\n  }\n  transactionCash(transactionCash) {\n    let sumCash = 0;\n    for (let i = 0; i < transactionCash.length; i++) {\n      sumCash += transactionCash[i].amount\n    }\n    this.setState({ sumCash: sumCash })\n  }\n  transactionOther(transactionOther) {\n    let sumOther = 0;\n    for (let i = 0; i < transactionOther.length; i++) {\n      sumOther += transactionOther[i].amount\n    }\n    this.setState({ sumOther: sumOther })\n  }\n  transactionTest(transactionTest) {\n    let sumTest = 0;\n    transactionTest.map(a =>\n      sumTest += a.amount\n    )\n    this.setState({ sumTest: sumTest })\n  }\n  transactionXray(transactionXray) {\n    let sumXray = 0;\n    transactionXray.map(a =>\n      sumXray += a.amount\n    )\n    this.setState({ sumXray: sumXray })\n  }\n  transactionUltrasound(transactionUltrasound) {\n    let sumUltrasound = 0;\n    transactionUltrasound.map(a =>\n      sumUltrasound += a.amount\n    )\n    this.setState({ sumUltrasound: sumUltrasound })\n  }\n  transactionEnt(transactionEnt) {\n    let sumEnt = 0;\n    transactionEnt.map(a =>\n      sumEnt += a.amount\n    )\n    this.setState({ sumEnt: sumEnt })\n  }\n\n\n  getUserList = () => {\n    TransactionService.getUserList().then(res => {\n      res.data.unshift({id: ALL.code, full_name: ALL.label})\n      this.setUserList(res.data)\n    })\n  }\n\n  setNotiMessage = (notiMessage) => {\n    this.setState({ notiMessage });\n  };\n  setSubmitLoading = (submitLoading) => {\n    this.setState({ submitLoading });\n  };\n\n  setUserList = (userList) => {\n    this.setState({ userList: userList })\n  }\n\n  handleChangeSelectUser = (selectedUser) => {\n    this.setState({ selectedUser })\n  }\n\n  handleExportFile = () => {\n    let { start_date, end_date, } = this.state.form;\n    let { selectedUser } = this.state;\n    if (selectedUser == undefined) {\n      this.setNotiMessage(\"Có lỗi! Xin vui lòng chọn nhân viên \");\n    } else {\n      const url = TransactionService.exporExcelTransaction(selectedUser.value, start_date.value,end_date.value);\n      window.location.assign(url);\n    }  \n    \n  }\n\n  isRole = () => {\n    if (AuthService.isRole(ROLE.ADMIN.value)) {\n      this.setState({ isManager: true })\n    } else {\n      let selectedUser = {\n        value: AuthService.userInfo.id,\n        label: AuthService.userInfo.full_name\n      }\n      this.setState({ selectedUser })\n    }\n  }\n  searchCustomer = async (e, customerId) => {\n    let { listStepCancel, itemsTransaction} = this.state;\n    listStepCancel = itemsTransaction.filter(i => i.order?.customer?.id === customerId);\n    this.setState({\n      listStepCancel,\n      openTrans: true,\n    })\n    // let today = new Date().toISOString();\n    // let date = today.substr(0, 10);\n    // try {\n    //   const customer = await TransactionService.getCustomer(customerCode);\n    //   const res = await TransactionService.getListStepCancel(customer.data.id, date)\n    //   let listStepCancel = res.data[0]?.steps.filter(s => s.status !== STATUS.NEW && s.status !== STATUS.CANCEL)\n    //   console.log('danh sách', listStepCancel);\n    //   this.setState({\n    //     listStepCancel,\n    //     openTrans: true,\n    //   })\n    // } catch (err) {\n    //   this.setState({ notiMessage: 'Không tìm thấy mã bệnh nhân!' })\n    // }\n  }\n  closeTrans = () => {\n    this.setState({\n      openTrans: false,\n      customerCode: '',\n      listStepCancel: [],\n    })\n  }\n  afterCancelDone = (step) => {\n    let { customers, itemsCancel, amountCash, amountAtm, } = this.state;\n    if(step.type === PAY_METHOD.CASH.code) {\n      amountCash -= step.amount;\n    }else amountAtm -= step.amount;\n    customers.find(c => {\n      if (c.id === step.order.customer_id) {\n        let total = step.order.total\n        if (step.job_step.type === STEP_TYPE.EXAM) {\n          return c.exam = c.exam - total;\n        }\n        if (step.job_step.type === STEP_TYPE.BUY) {\n          return c.buy = c.buy - total;\n        }\n        if (step.job_step.type === STEP_TYPE.TEST) {\n          if (step.order?.items[0]?.ref_value?.type === SERVICE_TYPE.ULTRASOUND) {\n            return c.ultrasound = c.ultrasound - total;\n          }\n          if (step.order?.items[0]?.ref_value?.type === SERVICE_TYPE.TEST) {\n            return c.test = c.test - total;\n          }\n          if (step.order?.items[0]?.ref_value?.type === SERVICE_TYPE.XRAY) {\n            return c.xray = c.xray - total;\n          }\n          if (step.order?.items[0]?.ref_value?.type === SERVICE_TYPE.ENT) {\n            return c.ent = c.ent - total;\n          }\n          if (step.order?.items[0]?.ref_value?.type === SERVICE_TYPE.OTHER) {\n            return c.other = c.other - total;\n          }\n        }\n      }\n    })\n    itemsCancel.push(step)\n    this.setState({\n      itemsCancel,\n      customers,\n      amountAtm,\n      amountCash\n    })\n  }\n  changeCustomerCode = () => { }\n  componentDidMount() {\n    document.getElementById('userName').setAttribute(\"data-index\", \"3\")\n    this.getUserList()\n    this.isRole();\n  }\n\n  render() {\n    const { start_date, end_date } = this.state.form\n    const { notiMessage, sum, sumCash, sumOther, userList, selectedUser, sumEnt, sumTest, sumProduct, sumUltrasound, sumXray, sumRetail, sumExam, activeTab, customerCode, listStepCancel, openTrans, cancelTotal, customers, itemsCancel } = this.state\n    let { amountCash, amountAtm, amountCancel, amountRetail } = this.state;\n    let userOptions = userList.map((item) => ({\n      value: item.id,\n      label: item.full_name,\n    })) || []\n    return (\n      <div className=\"Transaction-Form \">\n        <ModalNoti\n          message={notiMessage}\n          done={() => this.setNotiMessage(\"\")}\n        ></ModalNoti>\n        <Col sm={6}>\n          <legend className=\"title-card\">\n            Thông tin giao dịch\n          </legend>\n        </Col>\n        <TransactionModal afterCancelDone={this.afterCancelDone} closeTrans={this.closeTrans} openTrans={openTrans} listStepCancel={listStepCancel} />\n\n        <FormGroup row>\n          {/* <Col sm={1} >\n            <form className=\"filter\">\n              <label htmlFor=\"filter\"> Tìm kiếm:</label>\n            </form>\n          </Col> */}\n          <Label className=\"end\" for=\"getUser\" sm={1}>Tên nhân viên</Label>\n          <Col sm={2} className=\"username\">\n            <Col>\n              <Select\n                isDisabled={!this.state.isManager}\n                onKeyDown={(e) => Util.onKeyDown(e)}\n                inputId=\"userName\"\n                value={selectedUser}\n                options={userOptions}\n                placeholder=\"Chọn nhân viên\"\n                menuPlacement=\"top\"\n                openMenuOnFocus\n                onChange={(e) => { this.handleChangeSelectUser(e) }}\n              />\n            </Col>\n          </Col>\n          <Col sm={1} className=\"end\">\n            <label htmlFor=\"start_date\">Từ:</label>\n          </Col>\n          <Col sm={2}>\n            <Input\n              onKeyDown={(e) => Util.onKeyDown(e)}\n              data-index=\"1\"\n              autoFocus\n              type='date'\n              value={start_date && start_date.value}\n              onChange={(ev) => { this._setValue(ev, 'start_date') }}\n              required\n            />\n          </Col>\n\n          <Col sm={1} className=\"end\">\n            <label htmlFor=\"end_date\">Đến:</label>\n          </Col>\n          <Col sm={2}>\n            <Input\n              onKeyDown={(e) => Util.onKeyDown(e)}\n              data-index=\"2\"\n              type='date'\n              value={end_date && end_date.value}\n              onChange={(ev) => { this._setValue(ev, 'end_date') }}\n              required\n            />\n          </Col>\n          <Col sm={1} className=\"end\">\n            <Button color=\"primary\"\n              onKeyDown={(e) => Util.onKeyDown(e)}\n              data-index=\"4\"\n              onClick={() => { this.handleSearch() }}>Chọn</Button>\n          </Col>\n          <Col sm={1} className=\"end\">\n            <Button color=\"primary\"\n              disabled={ selectedUser?.value === ALL.code ? true : false }\n              onKeyDown={(e) => Util.onKeyDown(e)}\n              data-index=\"5\"\n              onClick={() => { this.handleExportFile() }}><span className=\"material-icons\">file_download</span>Tải Excel</Button>\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"end\" for=\"getUser\" sm={1}>Mã bệnh nhân</Label>\n          <Col sm={2} className=\"username\">\n            <Input type=\"text\" placeholder=\"Nhập mã bệnh nhân\" name=\"customerCode\" value={customerCode} onChange={e => this.setState({ customerCode: e.target.value })} />\n          </Col>\n          {/* <Col xs=\"1\" className=\"end\"><Button onClick={this.searchCustomer}>Chọn</Button></Col> */}\n        </FormGroup>\n        <FormGroup row>\n          <Col sm={12}>\n            <Nav tabs>\n              <NavItem>\n                <NavLink className={`transaction-nav pointer ${activeTab === '1' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: '1' })}>Giao dịch</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className={`transaction-nav pointer ${activeTab === '2' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: '2' })}>Đã hủy</NavLink>\n              </NavItem>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n              <TabPane tabId=\"1\">\n                <TransTable searchCustomer={this.searchCustomer} customerCode={customerCode} isManager={this.state.isManager} items={customers} amountRetail={amountRetail} />\n                <Row className=\"accouting-total title-card\">\n                  <Col xs=\"2\"><p>Tổng tiền ATM: </p></Col>\n                  <Col xs=\"10\">{amountAtm ? Util.formatPrice(amountAtm) : 0}đ </Col>\n                  <Col xs=\"2\"><p>Tổng tiền thu: </p></Col>\n                  <Col xs=\"10\">{amountCash ? Util.formatPrice(amountCash + amountAtm + amountRetail) : 0}đ </Col>\n                  <Col xs=\"2\"><p>Tổng tiền phải nộp: </p></Col>\n                  <Col xs=\"10\">{amountCash || amountRetail ? Util.formatPrice(amountCash + amountRetail) : 0}đ</Col>\n                </Row>\n              </TabPane>\n              <TabPane tabId=\"2\">\n                <CancelTable customerCode={customerCode} items={itemsCancel} />\n              </TabPane>\n            </TabContent>\n          </Col>\n        </FormGroup>\n\n        {/* <div className=\"check-sum\">\n          <Table className='table-sum'>\n            <thead>\n              <tr>\n                <th>Tổng số tiền mặt</th>\n                <th>Tổng số tiền ATM</th>\n                <th>Tổng số tiền KDV</th>\n                <th>Tổng số tiền XNDV</th>\n                <th>Tổng số tiền SADV </th>\n                <th>Tổng số tiền NSDV</th>\n                <th>Tổng số tiền X-quang</th>\n                <th>Tổng số tiền Bán thuốc </th>\n                <th>Tổng số tiền Bán thuốc lẻ</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td><NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sumCash} /></td>\n                <td><NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sumOther} /></td>\n                <td><NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sumExam} /></td>\n                <td><NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sumTest} /></td>\n                <td><NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sumUltrasound} /></td>\n                <td><NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sumEnt} /></td>\n                <td><NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sumXray} /></td>\n                <td><NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sumProduct} /></td>\n                <td><NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sumRetail} /></td>\n              </tr>\n            </tbody>\n          </Table>\n        </div>\n        <div className=\"checkSum\">\n          <p className=\"totalAll\">Tổng số tiền trả lại khách : <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={cancelTotal} /></p>\n        </div>\n        <div className=\"checkSum\">\n          <p className=\"totalAll\">Tổng số tiền thực thu : <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sum} /></p>\n        </div> */}\n\n        {/* <div className=\"checkSum\">\n          <p className=\"totalAll\">Tổng số tiền: <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sum} /></p>\n          <p className=\"totalCash\">Tổng số tiền mặt : <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sumCash} /></p>\n          <p className=\"totalOther\">Tổng số tiền ATM : <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sumOther} /></p>\n\n        </div>\n        <div className=\"checkSum\">\n          <p className=\"totalAll\">Tổng số tiền XNDV : <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sumTest} /></p>\n        </div>\n        <div className=\"checkSum\">\n          <p className=\"totalAll\">Tổng số tiền SADV : <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sumUltrasound} /></p>\n        </div>\n        <div className=\"checkSum\">\n          <p className=\"totalAll\">Tổng số tiền X-quang : <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sumXray} /></p>\n        </div>\n        <div className=\"checkSum\">\n          <p className=\"totalAll\">Tổng số tiền NSDV : <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sumEnt} /></p>\n        </div>\n        <div className=\"checkSum\">\n          <p className=\"totalAll\">Tổng số tiền bán thuốc lẻ : <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sumRetail} /></p>\n        </div>\n        <div className=\"checkSum\">\n          <p className=\"totalAll\">Tổng số tiền bán thuốc bác sĩ chỉ định : <NumberFormat thousandSeparator={true} readOnly suffix={' VND'} value={sumProduct} /></p>\n        </div> */}\n\n        <div className=\"divNull\"></div>\n      </div>\n    );\n  }\n\n}\n\n\n\nexport default TransactionForm;","import React, { useEffect } from 'react';\nimport { Table } from 'reactstrap';\nimport NumberFormat from 'react-number-format';\n\nconst OrderTable = (props) => {\n  let { items, orderInfo } = props;\n  // const [orderList, setOrderList] = useState([])\n\n  useEffect(() => {\n  }, [items, orderInfo])\n  if (orderInfo && orderInfo.length > 0){\n    return (\n      <Table hover bordered>\n        <thead>\n          <tr>\n            <th>STT</th>\n            <th>Tên dịch vụ</th>\n            <th>Đơn giá</th>\n            <th>Số lượng</th>\n          </tr>\n        </thead>\n        <tbody>\n          {orderInfo?.filter(e=> e.quantity >0).map((item, index) => (\n\n            <tr key={item.id}>\n              <th scope=\"row\">{index + 1}</th>\n              <td>{item.order.items[0].ref_value.name}</td>\n              <td><NumberFormat thousandSeparator={true} suffix={' VND'} displayType={'text'} value={Math.ceil(item.order.total)} /></td>\n              <td>\n                {item.order.items[0].quantity}\n              </td>\n\n\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    );\n  }else{\n    return (\n      <Table hover bordered>\n        <thead>\n          <tr>\n            <th>STT</th>\n            <th>Tên dịch vụ</th>\n            <th>Đơn giá</th>\n            <th>Số lượng</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items?.filter(e=> e.quantity >0).map((item, index) => (\n\n            <tr key={item.id}>\n              <th scope=\"row\">{index + 1}</th>\n              <td>{item.ref_value.name}</td>\n              <td><NumberFormat thousandSeparator={true} suffix={' VND'} displayType={'text'} value={Math.ceil(item.price)} /></td>\n              <td>\n                {item.quantity}\n              </td>\n\n\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    );\n  }\n    \n}\n\nexport default OrderTable;","import React, { useEffect, useState } from 'react';\nimport { Fragment } from 'react';\nimport { Button } from 'reactstrap';\nimport SharedService from '../../../../Shared/Services/SharedService'\nimport { moneyToWord, getAge, convertToStrDate } from '../../../Reception/Shared/Util'\nimport logo from '../../../../Asset/Img/logo.jpg';\nimport HeaderPrint from '../../../../Shared/Components/HeaderPrint/HeaderPrint'\n\nconst AccountingPrintingPreview = (props) => {\n    let doctorInfo = JSON.parse(window.sessionStorage.getItem('user'));\n    let { data } = props;\n    let items = props.items ? props.items : [];\n    let { date_pos, customerAddress, customerPhone } = props;\n    const { customerName, nameService, customerBirthday, totalPrice, customerGender } = data;\n    let customerCode = data ? data.customerCode.value : \" \";\n    const current = new Date();\n    useEffect(() => {\n        if (customerCode) {\n            SharedService.createEtccode(customerCode.toString(), \"customerCode\")\n            SharedService.createEtccode(customerCode, \"customerCodeSub\")\n        }\n    }, [customerCode])\n    let origin_total = 0;\n    items.filter(el => el.quantity > 0).map(el => {\n        origin_total += el.origin_price\n    })\n    let discount_price = 0;\n    discount_price = parseInt(origin_total) - parseInt(totalPrice.value);\n    return (\n        <Fragment>\n            <div className=\"d-flex justify-content-center font-print mt-3\">\n                <div className=\"border border-secondary AccountingPrintingPreview\" style={{ display: \"none\" }}>\n                    <div className=\"p-2 position-relative\" id=\"transactionPrint\">\n                        <div className=\"receiptFromPrint\">\n                            <div className=\"absolute\">\n                                <div className=\"text-right\">\n                                    <canvas id=\"customerCode\" style={{ height: \"13mm\" }}></canvas>\n                                </div>\n                            </div>\n                            <HeaderPrint></HeaderPrint>\n                            <h4 className=\"text-center font-weight-bold\">\n                                <b>BIÊN LAI THU TIỀN</b>\n                            </h4>\n                            <div className=\"text-center\">\n                                Liên 1 : Lưu tại quầy\n                            </div>\n                            <div className=\"text-center\">\n                                <i>{current.getHours()} giờ {current.getMinutes()} phút,Ngày {current.getDate()} Tháng {current.getMonth() + 1} Năm {current.getFullYear()}</i>\n                            </div>\n                            <div className=\"d-block\">\n                                Họ tên: <b><span className=\"text-uppercase font-weight-bold\">{customerName.value}</span></b>\n                                <span className=\"ml-15\">NS:  {convertToStrDate(customerBirthday.value)} {`(${getAge(convertToStrDate(customerBirthday.value))})`}</span>\n                                <span className=\"ml-15 \">GT: {customerGender.value === \"male\" ? \" Nam\" : \" Nữ\"} </span>\n                                <span className=\"ml-15\">SĐT:  {customerPhone}</span>\n                                <br />\n                                <span>Địa chỉ: {customerAddress}</span>\n                            </div>\n                            <div className=\"d-flex justify-content-between f-flex\">\n                                <div>\n                                    Dịch vụ :<b style={{ fontSize: \"13px\" }}> {items.filter(e => e.quantity > 0).map(el => el.ref_value.name).join(\",\")}\n                                    </b>\n                                    <br></br>\n                                    Giá gốc : <b><span className=\"font-weight-bold\">{new Intl.NumberFormat('de-DE').format(origin_total)} VNĐ</span></b>\n                                    <span className=\"font-weight-bold ml-10\"> Tổng tiền khuyến mãi: <b>{new Intl.NumberFormat('de-DE').format(discount_price)} VNĐ</b> </span><br></br>{\" \"}\n                                    <span className=\"font-weight-bold\"> Tổng số tiền thanh toán: <b>{new Intl.NumberFormat('de-DE').format(totalPrice.value)} VNĐ</b> </span><br></br>\n                                    Viết bằng chữ: <span className=\"font-weight-bold\"><b>{moneyToWord(totalPrice.value || 0)}</b></span>\n                                </div>\n                            </div>\n                            <br></br>\n                            <div className=\"d-flex justify-content-between px-1 \">\n                                <div className=\"text-center mr-auto ml-5 nt\">\n                                    <b>Người nộp tiền</b><br></br>\n                                    <i>(ký, họ tên)</i>\n                                </div>\n                                <div className=\"text-center mr-5 tt\">\n                                    <strong>Người thu tiền</strong><br></br>\n                                    <i className=\"mb-2\">(ký, ghi rõ họ tên)</i> <br></br><br></br><br></br>\n                                    <b className=\"mt-5\">{doctorInfo.full_name}</b>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* -----------------Ngăn from in------------------------------------------------------------ */}\n                        <div className=\"receiptFromPrint\">\n                            <div className=\"absolute\">\n                                <div className=\"text-right\">\n                                    <canvas id=\"customerCodeSub\" style={{ height: \"13mm\" }}></canvas>\n                                </div>\n                            </div>\n                            <HeaderPrint></HeaderPrint>\n                            <h4 className=\"text-center font-weight-bold\">\n                                <b>BIÊN LAI THU TIỀN</b>\n                            </h4>\n\n                            <div className=\"text-center\">\n                                Liên 2 : Giao cho bệnh nhân\n                            </div>\n                            <div className=\"text-center\">\n                                <i>{current.getHours()} giờ {current.getMinutes()} phút,Ngày {current.getDate()} Tháng {current.getMonth() + 1} Năm {current.getFullYear()}</i>\n                            </div>\n                            <div className=\"d-block\">\n                                Họ tên: <b><span className=\"text-uppercase font-weight-bold\">{customerName.value}</span></b>\n                                <span className=\"ml-15\">NS:  {convertToStrDate(customerBirthday.value)} {`(${getAge(convertToStrDate(customerBirthday.value))})`}</span>\n                                <span className=\"ml-15 \">GT: {customerGender.value === \"male\" ? \" Nam\" : \" Nữ\"} </span>\n                                <span className=\"ml-15\">SĐT:  {customerPhone}</span>\n                                <br />\n                                <span>Địa chỉ: {customerAddress}</span>\n                            </div>\n                            <div className=\"d-flex justify-content-between f-flex\">\n                                <div>\n                                    Dịch vụ :<b style={{ fontSize: \"13px\" }}> {items.filter(e => e.quantity > 0).map(el => el.ref_value.name).join(\",\")}\n                                    </b>\n                                    <br></br>\n                                    Giá gốc : <b><span className=\"font-weight-bold\">{new Intl.NumberFormat('de-DE').format(origin_total)} VNĐ</span></b>\n                                    <span className=\"font-weight-bold ml-10\"> Tổng tiền khuyến mãi: <b>{new Intl.NumberFormat('de-DE').format(discount_price)} VNĐ</b> </span><br></br>{\" \"}\n                                    <span className=\"font-weight-bold\"> Tổng số tiền thanh toán: <b>{new Intl.NumberFormat('de-DE').format(totalPrice.value)} VNĐ</b> </span><br></br>\n                                    Viết bằng chữ: <span className=\"font-weight-bold\"><b>{moneyToWord(totalPrice.value || 0)}</b></span>\n                                </div>\n                            </div>\n                            <br></br>\n                            <div className=\"d-flex justify-content-between px-1 \">\n                                <div className=\"text-center mr-auto ml-5 nt\">\n                                    <b>Người nộp tiền</b><br></br>\n                                    <i>(ký, họ tên)</i>\n                                </div>\n                                <div className=\"text-center mr-5 tt\">\n                                    <strong>Người thu tiền</strong><br></br>\n                                    <i className=\"mb-2\">(ký, ghi rõ họ tên)</i> <br></br><br></br><br></br>\n                                    <b className=\"mt-1\">{doctorInfo.full_name}</b>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    );\n}\n\nexport default AccountingPrintingPreview;","import React from 'react';\nimport { Button, Form, FormGroup, Table, Label, Input, Col, Row, InputGroup, InputGroupAddon, Spinner, Modal, ModalBody, ModalFooter, ModalHeader, ListGroup } from 'reactstrap';\nimport { ModalNoti, moneyToWord } from '../../Shared';\nimport { FormParent } from '../../Shared';\nimport OrderTable from './OrderTable'\nimport TransactionService from \"../../../Accounting/Shared/TransactionService\";\nimport CustomerForm from \"../../../../Shared/Components/CustomerForm/CustomerForm\";\nimport { Util } from \"../../../../Helper/Util\";\nimport NumberFormat from 'react-number-format';\nimport AccountingPrintingPreview from \"../AccountingPrintingPreview/AccountingPrintingPreview\";\nimport printJS from 'print-js';\nimport { LOCATION_TYPE, ONE_DAY, SERVICE_TYPE, STATUS } from \"../../../../Constances/const\"\n\nclass AccountingForm extends FormParent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookList: [],\n      paymentList: [{ name: \"Tiền mặt\", method: \"cash\" }, { name: \"Thẻ ATM\", method: \"other\" }],\n      orderInfoNew: [],\n      currentPaymentMethods: 'cash',\n      note: '  ',\n      isPayment: true,\n      notiMessage: '',\n      date_pos: \" \",\n      textCmCode: \"\",\n      form: this._getInitFormData({\n        cm_code: '',\n        customerCode: '',\n        orderCode: '',\n        customerName: '',\n        customerBirthday: '',\n        totalPrice: 0,\n        nameService: '',\n        priceService: '',\n        customerGender: '',\n        cTime: '',\n        orderStatus: '',\n        bookId: '',\n      }),\n      totalFirst: 0,\n      checkItems: [],\n      searchOrderCode: \"\",\n      searchCmCode: \"\",\n      isOrderFound: false,\n      isShowFound: false,\n      // quantity : 1\n    }\n  }\n  setBookList = (bookList) => {\n    this.setState({ bookList: bookList.filter((el) => el.status === \"active\") })\n    this.setState({ bookId: bookList[0].id })\n  }\n  setPaymentList = (paymentList) => {\n    this.setState({ paymentList: paymentList })\n  }\n\n\n  getAllBookList = () => {\n    const status = \"active\";\n    TransactionService.getBookList(status).then(res => {\n      this.setBookList(res.data)\n    })\n  }\n\n  setIsOrderFound = (isOrderFound) => {\n    this.setState({ isOrderFound })\n  }\n  setIsOpenFound = (isShowFound) => {\n    this.setState({ isShowFound })\n  }\n  setIsPayment = (isPayment) => {\n    this.setState({ isPayment })\n  }\n\n  setNotiMessage = (notiMessage) => {\n    this.setState({ notiMessage })\n  }\n\n  toggleUser = () => {\n    this.setState({\n      dropdownBook: !this.state.dropdownBook,\n    })\n  }\n  resetForm = () => {\n    this._fillForm({\n      cm_code: '',\n      customerCode: '',\n      orderCode: '',\n      customerName: '',\n      customerBirthday: '',\n      totalPrice: '',\n      nameService: '',\n      priceService: '',\n      customerGender: '',\n      cTime: '',\n      orderStatus: '',\n      bookId: '',\n    })\n    this.setState({\n      customerAddress: \"\",\n      items: [],\n      orderList: [],\n      totalList: 0,\n      itemNew: [],\n      orderInfoNew: [],\n      checkItems: [],\n      discount : 0,\n    })\n    this.setIsOrderFound(false)\n  }\n\n  findOrderByCode = (code) => {\n    return TransactionService.getOrder(code)\n  }\n  findOrderByCmCode = (code) => {\n    return TransactionService.getListTransaction(code)\n  }\n  onChangeCmCode = (ev) => {\n    this.setState({\n      textCmCode: ev.target.value\n    })\n  }\n  handleSearchCmCode = () => {\n    let { textCmCode, totalFirst } = this.state;\n    this.resetForm();\n    let orderList = []\n    if (textCmCode.length > 11) {\n      this.findOrderByCmCode(textCmCode).then((res) => {\n        let orderInfo = res.data\n        let orderInfoNew = res.data.filter(e => {\n          return e.type != 'buy'\n        })\n        this.setState({\n          orderInfoNew: orderInfoNew,\n          textCmCode: \"\",\n          searchCmCode: textCmCode\n        })\n        let address = orderInfo[0].order.customer.contacts[0].address\n        let street = address.street ? `${address.street}` : ''\n        let ward = address.ward ? `  -${address.ward}` : ''\n        let district = address.district ? `-${address.district}` : ''\n        let province = address.province ? `-${address.province}` : ''\n        let customerAddress = `${street}${ward}${district}${province}`;\n        if (address.province.length > 0 || address.street.length > 0) {\n          this.setState({\n            customerAddress: customerAddress,\n            customerPhone : orderInfo[0].order.customer.contacts[0].phone\n          })\n        }\n        this._fillForm({\n          customerCode: orderInfo[0].order.customer.code,\n          customerName: orderInfo[0].order.customer.full_name,\n          customerBirthday: orderInfo[0].order.customer.birthday,\n          totalPrice: '',\n          orderId: '',\n          customerGender: orderInfo[0].order.customer.gender,\n          nameService: '',\n          priceService: '',\n          cTime: (new Date(orderInfo[0].order.ctime)).toLocaleString(),\n          orderStatus: orderInfo[0].order.status,\n        })\n        let items = [];\n        orderInfoNew.map(ev => {\n          ev.order.items.map(el => {\n            items.push(el);\n          })\n        })\n        items.map(el => {\n          totalFirst += el.price\n        })\n        let discount = orderInfoNew[0].order.items[0].discount * 100;\n        \n        if (orderList.length > 0) {\n          orderInfoNew.map((step, index) => {\n            orderList.map((order, index2) => {\n              if (step.order_id !== order.id) {\n                orderList.push(step.order)\n              }\n            })\n          })\n        } else {\n          orderInfoNew.map((step, index) => {\n            orderList.push(step.order)\n          })\n\n        }\n        this.setState({\n          discount,\n          orderInfo: orderInfo,\n          items: items,\n          orderList,\n          totalFirst\n        })\n        this.setIsOrderFound(true)\n        this.setIsOpenFound(true)\n      }).catch(err => {\n        console.log(err)\n        this.setNotiMessage('Không tìm thấy hóa đơn!')\n      })\n    }\n    else {\n      this.setNotiMessage('Vui lòng nhập nhập đủ mã bệnh nhân!')\n    }\n\n  }\n  handleSearch = (orderCode) => {\n    this.findOrderByCode(orderCode).then((res) => {\n      let orderInfo = res.data\n      let address = orderInfo.view_order.customer.contacts[0].address\n      let street = address.street ? `${address.street}` : ''\n      let ward = address.ward ? `  -${address.ward}` : ''\n      let district = address.district ? `-${address.district}` : ''\n      let province = address.province ? `-${address.province}` : ''\n      let customerAddress = `${street}${ward}${district}${province}`\n      if (address.province.length > 0 || address.street.length > 0) {\n        this.setState({\n          customerAddress: customerAddress,\n          searchOrderCode: orderCode\n        })\n      }\n      this.setState({\n        date_pos: res.data.job.date_pos,\n        customerPhone: orderInfo.view_order.customer.contacts[0].phone\n      })\n      this._fillForm({\n        customerCode: orderInfo.view_order.customer.code,\n        orderCode: orderInfo.view_order.code,\n        customerName: orderInfo.view_order.customer.full_name,\n        customerBirthday: orderInfo.view_order.customer.birthday,\n        totalPrice: orderInfo.view_order.total,\n        orderId: orderInfo.view_order.id,\n        customerGender: orderInfo.view_order.customer.gender,\n        nameService: orderInfo.view_order.items[0].ref_value.name,\n        priceService: orderInfo.view_order.items[0].ref_value.price,\n        cTime: (new Date(orderInfo.view_order.ctime)).toLocaleString('en-GB'),\n        orderStatus: orderInfo.view_order.status,\n      })\n      this.setState({ items: orderInfo.view_order.items })\n      this.setIsOrderFound(true)\n\n    }).catch(err => {\n      console.log(err)\n      this.setNotiMessage('Không tìm thấy hóa đơn!')\n    })\n  }\n  handleChangeNote = (event) => {\n    this.setState({ note: event.target.value });\n  }\n  handleChange = (event) => {\n\n    const books = this.state.bookList.filter((item) => {\n      return item.id == event.target.value\n    })\n    if (books.length == 0) return\n    this.setState({ currentBook: books[0] })\n  }\n  handleChangePaymentMethods = (event) => {\n    const index = parseInt(event.target.value)\n    this.setState({ currentPaymentMethods: this.state.paymentList[index].method })\n  }\n\n\n  handleSubmit = async () => {\n    if (!this.state.isOrderFound) {\n      this.setNotiMessage(\"Bạn chưa chọn hóa đơn để thanh toán!\")\n      return\n    }\n    const { orderList, searchCmCode, searchOrderCode } = this.state;\n\n    const { orderId, totalPrice, } = this.state.form\n    const { bookId, currentPaymentMethods, note } = this.state\n    if (searchCmCode.length > 0) {\n      let promises = [];\n      orderList.forEach((el, index) => {\n\n        // if(el.quantity)\n        let transaction = {\n          ref: \"order\",\n          ref_id: el.id,\n          book_id: bookId,\n          amount: el.total,\n          type: currentPaymentMethods,\n          note: note,\n        }\n        if (this.state.form.isPayment) {\n          this.setNotiMessage(\"\")\n        }\n        promises.push(TransactionService.postTransaction(transaction))\n      })\n      Promise.all(promises).then(res => {\n        this.print(\"transactionPrint\")\n        this.resetForm()\n      }).catch(err => {\n        console.log(err)\n      })\n    }\n    if (searchOrderCode.length > 0) {\n      let transaction = {\n        ref: \"order\",\n        ref_id: orderId.value,\n        book_id: bookId,\n        amount: totalPrice.value,\n        type: currentPaymentMethods,\n        note: note,\n      }\n      if (this.state.form.isPayment) {\n        this.setNotiMessage(\"\")\n      }\n      TransactionService.postTransaction(transaction).then(res => {\n        this.setNotiMessage(\"Thanh toán thành công!\")\n        this.print(\"transactionPrint\")\n        this.resetForm()\n      }).catch(err => {\n        console.log(err)\n      })\n    }\n\n  }\n\n  onClickCheckBox = (e, item) => {\n    let { checkItems } = this.state;\n    if (item.quantity == 0) {\n      if (e.target.checked == false) {\n        checkItems.splice(checkItems.findIndex(e => e.id == item.id), 1);\n        this.setState({\n          checkItems,\n        })\n      } else {\n        checkItems.push(item);\n        this.setState({\n          checkItems,\n        })\n      }\n    }\n    else {\n      if (e.target.checked == true) {\n        checkItems.splice(checkItems.findIndex(e => e.id == item.id), 1);\n        this.setState({\n          checkItems,\n        })\n      } else {\n        checkItems.push(item);\n        this.setState({\n          checkItems,\n        })\n      }\n    }\n  }\n\n  setSubmmitServiceList = () => {\n    let { checkItems, orderList } = this.state;\n    let { totalPrice } = this.state.form;\n    if (checkItems.length > 0) {\n      let itemEdit = []\n      checkItems.map(e => {\n        if (e.quantity > 0) {\n          itemEdit.push({\n            id: e.id,\n            quantity: 0\n          })\n        }\n        else {\n          itemEdit.push({\n            id: e.id,\n            quantity: 1\n          })\n        }\n      })\n      TransactionService.postEditOrder(itemEdit).then(res => {\n        res.data.forEach((el, index) => {\n          orderList.forEach((ev, indexList) => {\n            if (el.id === ev.id) {\n              orderList[indexList] = el\n            }\n          })\n        })\n        let newItems = [];\n        let totalList = 0;\n        orderList.map(e => {\n          totalList += e.total\n          e.items.map(el => {\n            newItems.push(el)\n          })\n        })\n        totalPrice.value = totalList;\n        this.setState({\n          checkItems: [],\n          orderList,\n          items: newItems,\n          totalPrice\n        })\n\n      }).catch(err => {\n        console.log(err);\n      })\n    }\n    else {\n      let items = this.state.items;\n      let itemNew = []\n      let total = 0\n      itemNew = items.filter(el => {\n        return el.quantity == 1\n      })\n      itemNew.map(ev => {\n        if (ev.quantity > 0) {\n          total += ev.price\n        }\n      })\n      totalPrice.value = total\n      this.setState({\n        items: itemNew,\n        totalPrice\n      })\n    }\n    this.setIsOpenFound(false)\n  }\n  doneAlert = () => {\n    this.setNotiMessage(\"\");\n  }\n  componentDidMount() {\n\n    this.getAllBookList();\n  }\n  print = (id) => {\n    printJS({\n      printable: id,\n      type: 'html',\n      targetStyles: ['*'],\n      style: `@page {\n          size: Letter landscape;\n        }`,\n      header: null,\n      footer: null,\n    });\n    this.setNotiMessage(\"Thanh toán thành công!\")\n  }\n  render() {\n    const { orderCode, customerName, customerCode, customerBirthday, totalPrice, customerGender, cTime, orderStatus, note, cm_code } = this.state.form\n    const { notiMessage, customerAddress, date_pos, customerPhone,discount  ,orderInfoNew, textCmCode } = this.state;\n    let items = this.state.items ? this.state.items : [];\n    let origin_total = 0;\n    items.filter(el => el.quantity > 0).map(el => {\n      origin_total += el.origin_price\n    })\n    let discount_price= 0;\n    discount_price = parseInt(origin_total) - parseInt(totalPrice.value);\n    return (\n      <Col xs={{ size: 10, 'offset': 1 }}>\n        <ModalNoti message={notiMessage} done={this.doneAlert} />\n        <Col sx={12}>\n          <Row className=\"customCard naV\">\n            <Col sm={4} className=\" pl-0 library-book\">\n              <Label sm={2} className=\"title-card p-0\" href=\"/\"><span className=\"material-icons\">library_books</span> Sổ thu </Label>\n              <Col sm={4}>\n                <Input type=\"select\" name=\"select\" onChange={this.handleChange}>\n                  {this.state.bookList.map((item) => {\n                    return <option key={item.id} value={item.id} >{item.name}</option>\n                  })}\n                </Input>\n              </Col>\n            </Col>\n            <Col sm={4} className=\"library-book\">\n              <Label sm={4} className=\"title-card order-code\"><span className=\"material-icons\">playlist_add_check</span>Mã bệnh nhân</Label>\n              <Col sm={3} className=\"input-code\">\n                <InputGroup>\n                  <Input\n                    autoFocus\n                    onKeyDown={(e) => Util.onKeyDown(e)}\n                    data-index=\"1\"\n                    name=\"cm_code\"\n                    className=\"inputAcc\"\n                    value={textCmCode}\n                    onChange={(ev) => { this.onChangeCmCode(ev) }}\n                    type=\"text\"\n                    id=\"cm_code\"\n                    placeholder=\"Nhập mã bệnh nhân\"\n                    required\n                  />\n                  <InputGroupAddon addonType=\"append\">\n                    <Button\n                      onKeyDown={(e) => Util.onKeyDown(e)}\n                      data-index=\"2\"\n                      className=\"SearchReceipt\"\n                      color=\"primary\" onClick={() => { this.handleSearchCmCode() }}><span className=\"material-icons\">search</span></Button>\n                  </InputGroupAddon>\n                </InputGroup>\n              </Col>\n            </Col>\n            <Col sm={4} className=\"library-book\">\n              <Label sm={3} className=\"title-card order-code\"><span className=\"material-icons\">playlist_add_check</span>Mã hóa đơn</Label>\n              <Col sm={3} className=\"input-code\">\n                <InputGroup>\n                  <Input\n                    onKeyDown={(e) => Util.onKeyDown(e)}\n                    data-index=\"2\"\n                    name=\"orderCode\"\n                    className=\"inputAcc\"\n                    onChange={(ev) => { this._setValue(ev, 'orderCode') }}\n                    type=\"text\"\n                    id=\"orderCode\"\n                    placeholder=\"Nhập mã hóa đơn\"\n                    required\n                  />\n                  <InputGroupAddon addonType=\"append\">\n                    <Button\n                      onKeyDown={(e) => Util.onKeyDown(e)}\n                      className=\"SearchReceipt\"\n                      data-index=\"3\"\n                      color=\"primary\" onClick={() => { this.handleSearch(orderCode.value) }}><span className=\"material-icons\">search</span></Button>\n                  </InputGroupAddon>\n                </InputGroup>\n              </Col>\n            </Col>\n          </Row>\n\n          <Form className=\"accounting-form\">\n\n            <FormGroup className=\"customCard min-h-40 customer-form\">\n              <div className=\"background\">\n                <CustomerForm\n                  data={{\n                    code: customerCode.value, full_name: customerName.value, birthday: customerBirthday.value,\n                    gender: customerGender.value, address: customerAddress\n                  }}\n                ></CustomerForm>\n              </div>\n            </FormGroup>\n\n            <FormGroup className=\"customCard info-form\">\n              <p className=\"title-card info-1\"><span className=\"material-icons\">description</span> Thông tin đơn hàng</p>\n              <FormGroup row>\n                <Col sm={11} className=\"table-acc\">\n                  <OrderTable items={this.state.items}></OrderTable>\n                </Col>\n              </FormGroup>\n              <FormGroup row className=\"sum-moneyText p-1r\">\n                <Label for=\"wordPrice\" sm={4}>Gía gốc</Label>\n                <Col sm={6} className=\"dflex-center\">\n                  <NumberFormat className=\"inputAc\"\n                    value={origin_total}\n                    // onChange={(ev) => { this._setValue(ev, 'totalPrice') }}\n                    name=\"totalPrice\"\n                    thousandSeparator={true} suffix={' VNĐ'} displayType={'text'} value={Math.ceil(origin_total)} />\n                </Col>\n              </FormGroup>\n              <FormGroup row className=\"sum-moneyText p-1r\">\n                <Label for=\"wordPrice\" sm={4}>Tổng tiền khuyến mãi</Label>\n                <Col sm={6} className=\"dflex-center\">\n                  <NumberFormat className=\"inputAc\"\n                    value={discount_price}\n                    // onChange={(ev) => { this._setValue(ev, 'totalPrice') }}\n                    name=\"discount_price\"\n                    thousandSeparator={true} suffix={' VNĐ'} displayType={'text'} value={Math.ceil(discount_price)} />\n                </Col>\n              </FormGroup>\n              <FormGroup row className=\"sum-moneyNumber p-1r\">\n                <Label for=\"totalPrice\" sm={4}>Tổng số tiền thanh toán(bằng số)</Label>\n                <Col sm={6} className=\"dflex-center\">\n                  <NumberFormat className=\"inputAc\"\n                    value={totalPrice.value}\n                    onChange={(ev) => { this._setValue(ev, 'totalPrice') }}\n                    name=\"totalPrice\"\n                    thousandSeparator={true} suffix={' VND'} displayType={'text'} value={Math.ceil(totalPrice.value)} />\n                </Col>\n              </FormGroup>\n              <FormGroup row className=\"sum-moneyText p-1r\">\n                <Label for=\"wordPrice\" sm={4}>Tổng số tiền(bằng chữ)</Label>\n                <Col sm={6} className=\"dflex-center\">\n                  <Input className=\"inputAcc\"\n                    readOnly\n                    type=\"text\"\n                    name=\"wordPrice\"\n                    id=\"wordPrice\"\n                    value={(totalPrice.value ? moneyToWord(totalPrice.value) : \"\").toUpperCase()}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row className=\"time-create p-1r\">\n                <Label for=\"getTime\" sm={4}>Thời gian tạo đơn</Label>\n                <Col sm={6} className=\"dflex-center\">\n                  <Input type=\"text\" name=\"totalPrice\"\n                    className=\"inputAcc\"\n                    value={cTime.value}\n                    onChange={(ev) => { this._setValue(ev, 'getTime') }}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row className=\"status-acc p-1r\">\n                <Label for=\"getStatus\" sm={4}>Trạng thái thanh toán</Label>\n                <Col sm={6} className=\"dflex-center\">\n                  <Input type=\"text\" name=\"status\"\n                    className=\"inputAcc\"\n\n                    onChange={(ev) => { this._setValue(ev, 'status') }}\n                  />\n                </Col>\n              </FormGroup>\n            </FormGroup>\n\n\n            <FormGroup row className=\"customCard money-form \">\n              <Label sm={3} className=\"title-card\"><span className=\"material-icons\">monetization_on</span> Thanh toán hóa đơn</Label>\n              <Col sm={2}>\n                <Input onKeyDown={(e) => Util.onKeyDown(e)}\n                  data-index=\"4\"\n                  type=\"select\" name=\"select\" onChange={this.handleChangePaymentMethods}\n                >\n                  {this.state.paymentList.map((item, index) => {\n                    return <option key={item.method} value={index} >{item.name}</option>\n                  })}\n                </Input>\n              </Col>\n              <Col sm={5}>\n                <Input value={note}\n                  onKeyDown={(e) => Util.onKeyDown(e)}\n                  data-index=\"5\" onChange={this.handleChangeNote}\n                  type=\"text\"\n                  placeholder=\"điền thông tin giao dịch\" />\n              </Col>\n              <Col sm={2} className=\"end pl-0\">\n                <Button\n                  onKeyDown={(e) => Util.onKeyDown(e)}\n                  data-index=\"6\"\n                  onClick={this.handleSubmit}\n                  disabled={orderStatus.value == STATUS.PAID}\n                >\n                  <Spinner\n                    color=\"primary\"\n                    className={this.state.submitLoading ? \"d-inline-block\" : \"d-none\"} />\n                  Thanh Toán\n                </Button>{' '}\n              </Col>\n\n            </FormGroup>\n          </Form>\n        </Col>\n        <Modal isOpen={this.state.isShowFound}>\n          <ModalHeader>Danh sách dịch vụ thanh toán</ModalHeader>\n          <ModalBody>\n            <Table>\n              <thead>\n                <tr>\n                  <th>Stt</th>\n                  <th>Tùy chọn</th>\n                  <th>Tên dịch vụ</th>\n                  <th>Số lượng</th>\n                  <th>Giá</th>\n\n                </tr>\n              </thead>\n              {orderInfoNew.map((el, indexStep) => {\n                return (\n                  <tbody>\n                    <tr>\n                      {\n                        el.order.items.length > 0 ? <td colSpan={4}>{\n                          el.location.name\n                        }</td> : null\n                      }\n                    </tr>\n                    {el.order.items.map((ev, indexItem) => {\n                      return (\n                        <tr key={ev.id}>\n                          <td>{indexItem + 1}</td>\n                          <td>\n                            <Input type=\"checkbox\"\n                              defaultChecked={ev.quantity == 1 ? true : false}\n                              onClick={e => this.onClickCheckBox(e, ev, indexStep, indexItem)}>\n                            </Input>\n                          </td>\n                          <td>{ev.ref_value.name}</td>\n                          <td>{ev.quantity}</td>\n                          <td>{ev.ref_value.price}</td>\n                        </tr>\n                      )\n                    })}\n                  </tbody>\n                )\n              })}\n            </Table>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => { this.setSubmmitServiceList() }}>Hoàn thành</Button>\n            <Button onClick={() => {\n              this.setIsOpenFound(false)\n              this.resetForm()\n            }} color=\"danger\">Đóng</Button>\n          </ModalFooter>\n        </Modal>\n        <AccountingPrintingPreview data={this.state.form} items={this.state.items} customerAddress={customerAddress} customerPhone={customerPhone} date_pos={date_pos}></AccountingPrintingPreview>\n      </Col>\n    )\n  }\n}\n\nexport default AccountingForm;","import React from 'react';\nimport { Button, FormGroup, Label, Input, Col, Nav, NavLink, NavItem, TabContent, TabPane, Row, Table } from 'reactstrap';\nimport { FormParent, ModalNoti } from '../../../Reception/Shared';\nimport TransactionService from '../../Shared/TransactionService';\nimport Select from 'react-select';\nimport { Util } from '../../../../Helper/Util';\nimport AuthService from \"../../../../Shared/Services/AuthService\";\nimport { ROLE, SERVICE_TYPE, STEP_TYPE, ORDER_TYPE, STATUS, PAY_METHOD, ALL } from \"../../Shared\";\n\nclass Statistical extends FormParent {\n  constructor(props) {\n    super(props);\n    let today = new Date().toISOString();\n    let date = today.substr(0, 10);\n    this.state = {\n        listStatistical: [],\n        isManager: false,\n        userList: [],\n        notiMessage: '',\n        selectedUser: '',\n        show: false,\n        activeTab: '1',\n        form: this._getInitFormData({\n            start_date: date,\n            end_date: date,\n        }),\n    }\n  };\n\n  handleSearch = () => {\n    let { start_date, end_date, } = this.state.form;\n    this.getListTransaction(ALL.code, start_date.value, end_date.value)\n  }\n\n  getUserList = () => {\n    TransactionService.getUserList().then(res => {\n        res.data.unshift({id: ALL.code, full_name: ALL.label})\n        this.setState({ userList: res.data })\n    })\n  }\n\n  setNotiMessage = (notiMessage) => {\n    this.setState({ notiMessage });\n  };\n\n  isRole = () => {\n    if (AuthService.isRole(ROLE.ADMIN.value)) {\n      this.setState({ isManager: true })\n    } else {\n      let selectedUser =  AuthService.userInfo.id\n      this.setState({ selectedUser })\n    }\n  }\n\n  getListTransaction(userId, start_date, end_date) {\n    TransactionService.getHistoryTransactionByTimeAndUserID(userId, start_date, end_date)\n    .then(res => {\n        let data = res.data.records || [];\n        let { userList, isManager } = this.state;\n        const roleArr = [ROLE.DOCTOR.value, ROLE.TEST_OPERATOR.value, ROLE.ENT.value, ROLE.ULTRASOUND.value, ROLE.XRAY.value, ROLE.ADMIN.value]\n        let userIds = [];\n        let listStatistical = [];\n        if(!isManager) {\n            userIds.push(this.state.selectedUser);\n        }else {\n            data.map(d => {\n                userList.forEach(u => {\n                    if(d.job_step?.created_by === u.id || d.job_step?.modified_by === u.id) {\n                        let arr = u.roles.filter(r => roleArr.includes(r))\n                        if(arr.length > 0 && !userIds.includes(u.id)) userIds.push(u.id);\n                    }\n                })\n            })\n        }\n        userIds.forEach(u => {\n            let obj = {\n                userId: u,\n                exam: 0,\n                test: {\n                    perform: 0,\n                    suggest: 0,\n                    total: 0,\n                },\n                xray: {\n                    perform: 0,\n                    suggest: 0,\n                    total: 0,\n                },\n                ent: {\n                    perform: 0,\n                    suggest: 0,\n                    total: 0,\n                },\n                ultrasound: {\n                    perform: 0,\n                    suggest: 0,\n                    total: 0,\n                },\n            }\n            data.forEach(d => {\n                if(d.job_step?.type === STEP_TYPE.EXAM && u === d.job_step?.modified_by) obj.exam ++;\n                if(d.job_step?.type === STEP_TYPE.TEST) {\n                    if(d.order?.items[0]?.ref_value?.type === SERVICE_TYPE.TEST) {\n                        if(u === d.job_step?.created_by) {\n                            obj.test.suggest ++;\n                            obj.test.total += d.order?.total;\n                        }\n                        if(u === d.job_step?.modified_by) obj.test.perform ++;\n                    }\n                    if(d.order?.items[0]?.ref_value?.type === SERVICE_TYPE.ENT) {\n                        if(u === d.job_step?.created_by) {\n                            obj.ent.suggest ++;\n                            obj.ent.total += d.order?.total;\n                        }\n                        if(u === d.job_step?.modified_by) obj.ent.perform ++;\n                    }\n                    if(d.order?.items[0]?.ref_value?.type === SERVICE_TYPE.XRAY) {\n                        if(u === d.job_step?.created_by) {\n                            obj.xray.suggest ++;\n                            obj.xray.total += d.order?.total;\n                        }\n                        if(u === d.job_step?.modified_by) obj.xray.perform ++;\n                    }\n                    if(d.order?.items[0]?.ref_value?.type === SERVICE_TYPE.ULTRASOUND) {\n                        if(u === d.job_step?.created_by) {\n                            obj.ultrasound.suggest ++;\n                            obj.ultrasound.total += d.order?.total;\n                        }\n                        if(u === d.job_step?.modified_by) obj.ultrasound.perform ++;\n                    }\n                }\n            })\n            listStatistical.push(obj)\n        })\n        this.setState({ listStatistical })\n    }).catch(err => {\n        console.log(err);\n        this.setNotiMessage(\"Không tìm thấy các lịch sử giao dịch!\")\n    })\n  }\n\n  componentDidMount() {\n    this.isRole();\n    this.getListTransaction(ALL.code)\n    this.getUserList()\n  }\n\n  render() {\n    const { start_date, end_date } = this.state.form\n    const { notiMessage, userList, activeTab, listStatistical, } = this.state\n    let item = listStatistical.map((l, index) => {\n        let user = userList.find(u => u.id === l.userId);\n        let role = \"\";\n        Object.values(ROLE).map((r, i) => {\n            if(r.value === user.roles[0]) role = r.name\n        })\n        return <tr>\n            <td>{index + 1}</td>\n            <td>{user.full_name}</td>\n            <td>{role}</td>\n            <td>{l.exam}</td>\n            <td>{l.test.perform}</td>\n            <td>{l.test.suggest}</td>\n            <td>{Util.formatPrice(l.test.total)}</td>\n            <td>{l.ent.perform}</td>\n            <td>{l.ent.suggest}</td>\n            <td>{Util.formatPrice(l.ent.total)}</td>\n            <td>{l.xray.perform}</td>\n            <td>{l.xray.suggest}</td>\n            <td>{Util.formatPrice(l.xray.total)}</td>\n            <td>{l.ultrasound.perform}</td>\n            <td>{l.ultrasound.suggest}</td>\n            <td>{Util.formatPrice(l.ultrasound.total)}</td>\n            <td>{Util.formatPrice(l.test.total + l.xray.total + l.ent.total + l.ultrasound.total)}đ</td>\n        </tr>\n    })\n    return (\n      <div className=\"Transaction-Form \">\n        <ModalNoti\n          message={notiMessage}\n          done={() => this.setNotiMessage(\"\")}\n        ></ModalNoti>\n\n        <FormGroup row>\n          <Col sm={1} className=\"end\">\n            <label htmlFor=\"start_date\">Từ:</label>\n          </Col>\n          <Col sm={2}>\n            <Input\n              onKeyDown={(e) => Util.onKeyDown(e)}\n              data-index=\"1\"\n              autoFocus\n              type='date'\n              value={start_date && start_date.value}\n              onChange={(ev) => { this._setValue(ev, 'start_date') }}\n              required\n            />\n          </Col>\n\n          <Col sm={1} className=\"end\">\n            <label htmlFor=\"end_date\">Đến:</label>\n          </Col>\n          <Col sm={2}>\n            <Input\n              onKeyDown={(e) => Util.onKeyDown(e)}\n              data-index=\"2\"\n              type='date'\n              value={end_date && end_date.value}\n              onChange={(ev) => { this._setValue(ev, 'end_date') }}\n              required\n            />\n          </Col>\n          <Col sm={1} className=\"end\">\n            <Button color=\"primary\"\n              onKeyDown={(e) => Util.onKeyDown(e)}\n              data-index=\"4\"\n              onClick={() => { this.handleSearch() }}>Chọn</Button>\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Col sm={12}>\n            <Nav tabs>\n              <NavItem>\n                <NavLink className={`transaction-nav pointer ${activeTab === '1' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: '1' })}>Thống kê</NavLink>\n              </NavItem>\n              {/* <NavItem>\n                <NavLink className={`transaction-nav pointer ${activeTab === '2' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: '2' })}>Đã hủy</NavLink>\n              </NavItem> */}\n            </Nav>\n            <TabContent activeTab={activeTab}>\n              <TabPane tabId=\"1\">\n              <Table>\n                    <thead>\n                        <tr>\n                            <th rowSpan=\"2\">#</th>\n                            <th rowSpan=\"2\">Tên nhân viên</th>\n                            <th rowSpan=\"2\">Vai trò</th>\n                            <th rowSpan=\"2\">Khám</th>\n                            <th colSpan=\"3\">Xét nghiệm</th>\n                            <th colSpan=\"3\">Nội soi</th>\n                            <th colSpan=\"3\">X quang</th>\n                            <th colSpan=\"3\">Siêu âm</th>\n                            <th rowSpan=\"2\">Tổng</th>\n                        </tr>\n                        <tr>\n                            {/* <td></td>\n                            <td></td>\n                            <td></td>\n                            <td></td> */}\n                            <td>Thực hiện</td>\n                            <td>Gợi ý</td>\n                            <td>Tổng tiền</td>\n                            <td>Thực hiện</td>\n                            <td>Gợi ý</td>\n                            <td>Tổng tiền</td>\n                            <td>Thực hiện</td>\n                            <td>Gợi ý</td>\n                            <td>Tổng tiền</td>\n                            <td>Thực hiện</td>\n                            <td>Gợi ý</td>\n                            <td>Tổng tiền</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {item}\n                    </tbody>\n                </Table>\n              </TabPane>\n              <TabPane tabId=\"2\">\n                2\n              </TabPane>\n            </TabContent>\n          </Col>\n        </FormGroup>\n        <div className=\"divNull\"></div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default Statistical;","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport TransactionForm from \"./Components/TransactionForm/TransactionForm\"\nimport AccountingForm from \"./Components/AccountingForm/AccountingForm\";\nimport Statistical from \"./Components/Statistical/Statistical\";\nclass Transaction extends Component {\n\n  render() {\n    const { path } = this.props.match;\n    return (\n      <div className=\"Transaction\">\n        <Switch>\n          <Route path={`${path}/order`} component={AccountingForm} />\n          <Route path={`${path}/transaction`} component={TransactionForm} />\n          <Route path={`${path}/statistical`} component={Statistical} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Transaction;\n","import { Http } from \"../../../Helper/Http\";\nimport  UtilService  from \"../../../Shared/Services/UtilService\";\nimport { LOCALSTORAGE } from '../../../Constances/const';\nconst API_ENDPOINT = {\n    BASE: \"/job\",\n    GET_LIST_LOCATION: \"/location/list\",\n    GET_CUS_BY_LOC: \"/step/list\",\n    GET_XRAY_BY_LOC: \"/location/service/list\",\n    GET_XRAY_INDEX_LIST_BY_SER_ID: \"/service/service/get\",\n    UPDATE_XRAY_RESULT: \"/step/finish\",\n    TAKE_SAMPLE: \"/step/update\",\n}\nclass Xray extends UtilService {\n    constructor() {\n        super();\n        if (Xray._instance) {\n            return Xray._instance;\n        }\n        Xray._instance = this;\n    }\n    userList = [];\n    selectedUser = -1;\n\n    get location() {\n        return JSON.parse(sessionStorage.getItem(LOCALSTORAGE.LOCATION) || '{}');\n    }\n    set location(data) {\n        sessionStorage.setItem(LOCALSTORAGE.LOCATION, JSON.stringify(data))\n    }\n\n    async getCustomerByLocationAndStatus(params) {\n        const url = `${API_ENDPOINT.BASE}${API_ENDPOINT.GET_CUS_BY_LOC}`;\n        return (await Http.get(url, params)).data;\n      }\n    \n      async getXrayByLocation(location_id) {\n        const url = `${API_ENDPOINT.GET_EXAM_BY_LOC}`;\n        return (await Http.get(url, location_id)).data;\n      }\n    \n      async getXrayIndexListByServiceID(id) {\n        const url = `${API_ENDPOINT.GET_XRAY_INDEX_LIST_BY_SER_ID}`;\n        return (await Http.get(url, id)).data;\n      }\n    \n      async getListLocation() {\n        return (await Http.get(`${API_ENDPOINT.GET_LIST_LOCATION}`)).data;\n      }\n    \n      finishXrayResult(xrayResult) {\n        return Http.post(\n          `${API_ENDPOINT.BASE}${API_ENDPOINT.UPDATE_XRAY_RESULT}`,\n          xrayResult\n        );\n      }\n    \n      takeSample = async (step) => {\n        const url = `${API_ENDPOINT.BASE}${API_ENDPOINT.TAKE_SAMPLE}`;\n        return await Http.post(url, step);\n      };\n}\n\nconst instance = new Xray();\nexport default instance;","export const resultServiceXray = [\n    {\n        code: \"cotay001\",\n        name: \"X – QUANG KHỚP CỔ TAY\",\n        results: {\n            description: \"- Chưa thấy hình ảnh tổn thương xương cổ tay. \\n- Bờ xương nhẵn, không hẹp khe khớp.  \\n  - Nhận xét khác:\",\n            conclusion: \"Hiện tại chưa thấy hình ảnh bất thường trên phim chụp xquang.\"\n        }\n    },\n    {\n        code: \"cotsongco001\",\n        name: \"X – QUANG CỘT SỐNG CỔ\",\n        results: {\n            description: \"- Cột sống cổ có đường cong sinh lý bình thường.\\n- Không thấy lún xẹp, trượt thân đốt sống.\\n- Mỏm ngang, mỏm gai các đốt sống không thấy bất thường.\\n- Không thấy hình ảnh gai xương, cầu xương.  \\n  - Nhận xét khác:\",\n            conclusion: \"Hiện tại chưa thấy hình ảnh bất thường trên phim chụp xquang.\"\n        }\n    },\n    {\n        code: \"thatlung001\",\n        name: \"X – QUANG CỘT SỐNG THẮT LƯNG\",\n        results: {\n            description: \"-Cột sống thắt lưng có đường cong sinh lý bình thường. \\n- Không thấy lún xẹp, trượt thân đốt sống.\\n- Mỏm ngang, mỏm gai các đốt sống không thấy bất thường.\\n- Không thấy hình ảnh gai xương, cầu xương.  \\n  - Nhận xét khác:\",\n            conclusion: \"Hiện tại chưa thấy hình ảnh bất thường trên phim chụp xquang.\"\n        }\n    },\n    {\n        code: \"tietnieu001\",\n        name: \"X – QUANG HỆ TIẾT NIỆU\",\n        results: {\n            description: \"- Bóng thận hai bên không to \\n- Không thấy hình ảnh cản quang bất thường trong hố thận hai bên.\\n- Cột sống thắt lưng không thấy gai xương, mỏ xương.\\n- Khớp cùng chậu hai bên cân đối, không thấy hẹp khe khớp.  \\n  - Nhận xét khác:\",\n            conclusion: \"Hiện tại chưa thấy hình ảnh bất thường trên phim chụp xquang.\"\n        }\n    }\n    ,\n    {\n        code: \"khopgoi001\",\n        name: \"X – QUANG KHỚP GỐI\",\n        results: {\n            description: \"- Khe khớp không rộng. \\n- Xương chày, xương mác có hình dạng bình thường, không thấy tiêu xương, đặc xương.\\n- Xương bánh chè có hình thái bình thường.  \\n  - Nhận xét khác:\",\n            conclusion: \"Hiện tại chưa thấy hình ảnh bất thường trên phim chụp xquang.\"\n        }\n    }\n    ,\n    {\n        code: \"khopvai001\",\n        name: \"X – QUANG KHỚP VAI\",\n        results: {\n            description: \"- Khe khớp không rộng. \\n- Không thấy cấu trúc vôi hoá quanh ổ khớp.\\n- Đầu trên xương cánh tay, đầu ngoài xương đòn, mỏm cùng vai có hình dạng bình thường.  \\n  - Nhận xét khác:\",\n            conclusion: \"Hiện tại chưa thấy hình ảnh bất thường trên phim chụp xquang.\"\n        }\n    }\n    ,\n    {\n        code: \"obung001\",\n        name: \"X – QUANG Ổ BỤNG\",\n        results: {\n            description: \"- Các quai ruột không giãn, không thấy hình ảnh mức nước, mức hơi. \\n- Không thấy hình ảnh liềm hơi dưới vòm hoành hai bên.\\n- Không thấy hình cản quang bất thường trong ổ bụng.  \\n  - Nhận xét khác:\",\n            conclusion: \"Hiện tại chưa thấy hình ảnh bất thường trên phim chụp xquang.\"\n        }\n    }\n    ,\n    {\n        code: \"xoang001\",\n        name: \"X – QUANG XOANG\",\n        results: {\n            description: \"- Xoang hàm hai bên kích thướng bình thường, sáng đều, thành mỏng. \\n- Hệ thống xoang sàng sáng bình thường. \\n- Hốc mũi sáng, vách ngăn mũi cân đối.  \\n  - Nhận xét khác:\",\n            conclusion: \"Hiện tại chưa thấy hình ảnh bất thường trên phim chụp xquang.\"\n        }\n    },\n    {\n        code: \"khuyutay001\",\n        name: \"X – QUANG KHỚP  KHUỶU\",\n        results: {\n            description: \"- Khe khớp không rộng.\\n - Không thấy trật khớp cánh tay – quay, cánh tay – trụ và quay trụ trên. \\n- Không thấy cấu trúc vôi hoá quanh ổ khớp. \\n -\tĐầu dưới xương cánh tay, đầu trên xương trụ, xương quay có hình dạng bình thường. \\n - Mỏm khuỷu có hình dạng bình thường.  \\n  - Nhận xét khác:\",\n            conclusion: \"Hiện tại chưa thấy hình ảnh bất thường trên phim chụp xquang.\"\n        }\n    },\n    {\n        code: \"ngucthang001\",\n        name: \"X – QUANG NGỰC THẲNG\",\n        results: {\n            description: \"- Hình tim không to, trung thất không giãn, không thấy khối khu trú và dấu hiệu bất thường.\\n - Lồng ngực cân đối không thấy tổn thương xương. \\n- Nhu mô phổi sáng đều không thấy dấu hiệu bất thường. \\n - Cơ hoành hai bên bình thường, góc sườn hoành hai bên nhọn.  \\n  - Nhận xét khác:\",\n            conclusion: \"Hiện tại chưa thấy hình ảnh bất thường trên phim chụp xquang.\"\n        }\n    },\n    {\n        code: \"sonao001\",\n        name: \"X – QUANG SỌ NÃO\",\n        results: {\n            description: \" - Hố yên không rộng, mỏm yên và sản yên bình thường.\\n - Không thấy hình tổn thương hộp sọ, xương hàm mặt.\\n - Các khớp sọ không rộng.\\n - Không thấy hình mức dịch trong các xoang bướm, xoang trán. \\n - Không thấy hình hơi và hình dị vật trong hộp sọ. \\n - Nhận xét khác:\",\n            conclusion: \"Hiện tại chưa thấy hình ảnh bất thường trên phim chụp xquang.\"\n        }\n    }\n\n]","import React, { Component, Fragment } from \"react\";\nimport { Input, Table } from \"reactstrap\";\nimport { resultServiceXray } from \"../../share/Util\";\n\nclass XrayResult extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      conclusion: \"\",\n      description: \"\",\n      nameFromService: \"\",\n      codeFromService: \"\"\n    };\n  }\n  componentDidUpdate = (preProps) => {\n    let results = this.props.results?this.props.results[0]:{}\n    if (preProps.results !== this.props.results) {\n      this.setState({\n        conclusion: results.conclusion || \"\",\n        description: results.description || \"\",\n        codeFromService: this.props.codeFromService\n      })\n    }\n  }\n  onChangeResult = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  onBlurChangeResult = () => {\n    let xrayReSult = {\n      conclusion: this.state.conclusion,\n      description: this.state.description\n    };\n    this.props.onChangeResult(xrayReSult)\n  }\n  setOnchangeCode = async  (ev) => {\n    await this.setState({\n      codeFromService: ev.target.value,\n    })\n    await this.setResultFrom()\n  }\n  setResultFrom = () => {\n    let { codeFromService } = this.state\n    resultServiceXray.map(el => {\n      if (el.code == codeFromService) {\n        this.setState({\n          conclusion: el.results.conclusion,\n          description: el.results.description,\n        })\n      }\n    })\n    this.onBlurChangeResult()\n  }\n  render() {\n    let {activeTab} = this.props\n    let { conclusion, description, codeFromService } = this.state\n    return (\n      <div className=\"XrayResult customCard customCard df-h-63\">\n        <div className=\"table-responsive\">\n          <div className=\"ml-3 d-flex justify-content-between\">\n            <div className=\"title-card ml-3\">\n              <p><span className=\"material-icons\">create</span>Mô tả chi tiết kết quả x-quang</p>\n            </div>\n            <div className=\"input-fromService\">\n              <Input\n                type=\"select\"\n                name=\"codeFromService\"\n                value={codeFromService}\n                onChange={ev => this.setOnchangeCode(ev)}\n                required\n                disabled={activeTab == \"2\"}\n              >\n                <option value=\"\">Chọn loại</option>\n                {resultServiceXray.map(el => {\n                  return (\n                    <option key={el.code} value={el.code}>{el.name}</option>\n                  )\n                })}\n              </Input>\n            </div>\n          </div>\n\n          <textarea\n            className=\"result-Xray-Description\"\n            name=\"description\"\n            placeholder=\"Nhập kết quả X-Quang\"\n            value={description}\n            onChange={e => this.onChangeResult(e)}\n            onBlur={this.onBlurChangeResult}\n          >\n          </textarea>\n          <br></br>\n          <div className=\"title-card ml-3\">\n            <p><span className=\"material-icons\">create</span>Kết luận</p>\n          </div>\n          <br></br>\n          <textarea\n            className=\"result-Xray\"\n            name=\"conclusion\"\n            placeholder=\"Nhập kết luận X-Quang\"\n            value={conclusion}\n            onChange={e => this.onChangeResult(e)}\n            onBlur={this.onBlurChangeResult}\n          >\n          </textarea>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default XrayResult;\n","import React, { Component } from \"react\";\nimport { Row, Col, Button, TabContent, TabPane, Nav, NavItem, NavLink, } from \"reactstrap\";\nimport PatientList from \"../../../../Shared/Components/PatientList/PatientList\";\nimport ModalConfirm from \"../../../../Shared/Components/ModalConfirm/ModalConfirm\";\nimport CustomerForm from \"../../../../Shared/Components/CustomerForm/CustomerForm\";\nimport DoctorServices from \"../../../Doctor/Shared/DoctorService\"\nimport SharedService from \"../../../../Shared/Services/SharedService\";\nimport { STATUS, SERVICE_TYPE } from \"../../../../Constances/const\";\nimport XrayService from \"../../share/XrayService\";\nimport XrayResult from \"../XrayResult/XrayResult\";\nimport XrayResultPrint from \"../XrayResultPrint/XrayResultPrint\";\nimport classnames from 'classnames';\nclass XrayFrom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      xrayResult: {\n        id: \"\",\n        results: [{\n          conclusion: \"\",\n          description: \"\"\n        }]\n      },\n      jobStepReady: [],\n      jobStepRunning: [],\n      selectedJob: [],\n      selectedJobStepRunning: {},\n      selectecPatientReady: {},\n      // codeFromService: \"1\",\n      stepID: \"\",\n      xrayValue: \"\",\n      titleWaitForXray: \"Danh sách bệnh nhân chờ chụp X-quang:\",\n      modalConfirm: {\n        message: \"\",\n        saveXrayResult: false,\n      },\n      printResult: \"none\",\n      titleWaitForXrayDone: \"Danh sách bệnh nhân đã hoàn thành:\",\n      activeTab: '1',\n      diagnosis: \"\",\n    };\n  }\n  readyJobListAction = {\n    refresh: null,\n  }\n\n  runningJobListAction = {\n    refresh: null,\n  }\n\n  refreshJobList = () => {\n    this.readyJobListAction.refresh();\n    this.runningJobListAction.refresh();\n  }\n\n\n\n  onSelectJobRunning = async (p) => {\n    if (p.order && p.order.customer) {\n      this.setState((state) => ({\n        ...state,\n        selectecPatientReady: p.order.customer,\n        stepID: p.id,\n      }));\n      if (p.code) {\n        // SharedService.createBarcode(p.code);\n      }\n      await DoctorServices.getJobById({ id: p.job_id }).then(res => {\n        res.state.subclinical = res.state.subclinical || {};\n        this.setState({\n          diagnosis: res.state.textDiagnosis,\n          selectedJob: res,\n        })\n      })\n\n      this.setState((state) => ({\n        ...state,\n        selectedJobStepRunning: p,\n        xrayResult: {\n          id: p.id,\n          results: [{\n            conclusion: \"\",\n            description: \"\"\n          }]\n        },\n\n      }));\n    }\n  };\n  onSelectJobDone = async (p) => {\n    if (p.order && p.order.customer) {\n      this.setState((state) => ({\n        ...state,\n        selectecPatientReady: p.order.customer,\n        stepID: p.id,\n      }));\n      await DoctorServices.getJobById({ id: p.job_id }).then(res => {\n        this.setState({\n          diagnosis: res.state.textDiagnosis,\n        })\n      })\n      try {\n        this.setState((state) => ({\n          ...state,\n          selectedJobStepRunning: p,\n          xrayResult: {\n            id: p.id,\n            results: p.results\n          },\n        }));\n      } catch (error) {\n        throw error;\n      }\n    }\n\n  };\n  // Hiện popup xác nhận\n  handleConfirm = (text) => {\n    this.setState((state) => ({\n      ...state,\n      modalConfirm: {\n        ...state.modalConfirm,\n        message: text,\n      },\n    }));\n  };\n  // Hiện popup xác nhận\n  handleConfirm = (text) => {\n    this.setState((state) => ({\n      ...state,\n      modalConfirm: {\n        ...state.modalConfirm,\n        message: text,\n      },\n    }));\n  };\n\n\n\n  handleUpdateResult = async (argument) => {\n    if (argument) {\n      try {\n        this.setState((state) => ({\n          ...state,\n          modalConfirm: {\n            ...state.modalConfirm,\n            message: \"\",\n          },\n        }));\n        await XrayService.finishXrayResult(this.state.xrayResult).then((res) => {\n          this.refreshJobList()\n        }).catch(err => {\n          console.log(err)\n        })\n        await this.setState((state) => ({\n          ...state,\n          printResult: \"block\",\n        }));\n        await this.print(\"printXray\");\n        await this.setState((state) => ({\n          ...state,\n          printResult: \"none\",\n          xrayResult: {\n            id: \"\",\n            results: [{\n              conclusion: \"\",\n              description: \"\"\n            }]\n          },\n          codeFromService: \"1\"\n        }));\n      } catch (error) {\n        throw error;\n      }\n    } else {\n      this.setState((state) => ({\n        ...state,\n        modalConfirm: {\n          ...state.modalConfirm,\n          message: \"\",\n        },\n      }));\n    }\n  };\n\n  printBarcode = async () => {\n    await this.setState((state) => ({\n      ...state,\n      printResult: \"block\",\n    }));\n    // await this.print(\"canvas_id\");\n    await this.setState((state) => ({\n      ...state,\n      printResult: \"none\",\n    }));\n  };\n\n  print = (id) => {\n    SharedService.print(id)\n  };\n  handleChangeResult = (value) => {\n    let itemResults = this.state.xrayResult ? this.state.xrayResult : [];\n    itemResults.results[0] = value\n    this.setState({\n      results: itemResults,\n    })\n\n  };\n  selectTypeCustomer = (tab) => {\n    let { activeTab } = this.state\n    if (activeTab !== tab) this.setState({ activeTab: tab })\n  }\n  render() {\n    const location_id = XrayService.location.id;\n    let { activeTab, selectedJobStepRunning } = this.state;\n    return (\n      <div className=\"xrayEdit\">\n        <Row className=\"mb-5 title-card\">\n          <Col xs=\"6\">{XrayService.location?.name}</Col>\n          <Col xs=\"6\" className=\"end pointer pr-30\" onClick={() => {\n            XrayService.location = {};\n            window.location.replace('/app/xray')\n          }}><u>Chuyển phòng</u></Col>\n        </Row>\n        <Row className=\"content\">\n          <Col sm=\"8\" className=\"content-left\">\n            <Row className=\"info-customer customCard\">\n              <CustomerForm data={this.state.selectecPatientReady} className=\"CustomerForm\" mode=\"compact\" ></CustomerForm>\n            </Row>\n            <Row className=\"from-XrayResult mt-3\">\n              <XrayResult\n                activeTab={activeTab}\n                codeFromService={this.state.codeFromService}\n                results={this.state.xrayResult.results}\n                onChangeResult={this.handleChangeResult} />\n            </Row>\n          </Col>\n          <Col sm=\"4\" className=\"content-right\">\n            <Row className=\"CusList customCard\">\n              <Nav tabs className=\"selectTabs\">\n                <NavItem className=\"titleTabs\">\n                  <NavLink className={classnames({ active: activeTab === '1' })} onClick={() => { this.selectTypeCustomer('1'); }}><b className=\"title-card\">Bệnh nhân chờ</b></NavLink>\n                </NavItem>\n                <NavItem className=\"titleTabs\">\n                  <NavLink className={classnames({ active: activeTab === '2' })} onClick={() => { this.selectTypeCustomer('2'); }}><b className=\"title-card\">Bệnh nhân đã hoàn thành</b></NavLink>\n                </NavItem>\n              </Nav>\n              <TabContent activeTab={activeTab} >\n                <TabPane tabId=\"1\" className=\"customCard\">\n                  <PatientList\n                    titleOfList={this.state.titleWaitForXray}\n                    onSelectJobStep={(jobStep) => this.onSelectJobRunning(jobStep)}\n                    location_id={location_id}\n                    status={[STATUS.READY]}\n                    action={this.readyJobListAction}\n                    type={SERVICE_TYPE.TEST}\n                    mode=\"other\"\n                  />\n                </TabPane>\n                <TabPane tabId=\"2\" className=\"customCard\">\n                  <PatientList\n                    titleOfList={this.state.titleWaitForXrayDone}\n                    onSelectJobStep={(jobStep) => this.onSelectJobDone(jobStep)}\n                    location_id={location_id}\n                    status={[STATUS.DONE]}\n                    action={this.readyJobListAction}\n                    type={SERVICE_TYPE.TEST}\n                    mode=\"other\"\n                  />\n                </TabPane>\n              </TabContent>\n\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"btn-Comfirm end\">\n          <Col sm=\"12\">\n            <Button color=\"primary\"\n              hidden={!selectedJobStepRunning.id}\n              onClick={() => this.handleConfirm(\"Bạn chắc chắn muốn cập nhật kết quả?\")}>\n              Gửi kết quả\n            </Button>\n          </Col>\n        </Row>\n        <XrayResultPrint\n          style={this.state.printResult}\n          diagnosis={this.state.diagnosis}\n          selectedJobStepRunning={this.state.selectedJobStepRunning}\n          xrayResult={this.state.xrayResult}\n        />\n        <ModalConfirm\n          message={this.state.modalConfirm.message}\n          answer={this.handleUpdateResult}\n        />\n      </div>\n    )\n  }\n}\n\nexport default XrayFrom;","import React from \"react\";\nimport { Form } from \"../../../../Shared\";\nimport instance from \"../../share/XrayService\";\nimport LocationSelecter from \"../../../../Shared/Components/LocationSelecter/LocationSelecter\";\nimport { withRouter } from \"react-router\";\nimport {LOCATION_TYPE} from '../../../../Constances/const'\n\nclass SelectRoom extends Form {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationList: [],\n      selectedLocation: -1,\n    };\n  }\n  componentDidMount = async () => {\n    const listLoc = await instance.getListLocation();\n    const result = listLoc.filter((item) => item.type === LOCATION_TYPE.XRAY);\n    \n    this.setState({\n        locationList: result,\n    })\n  };\n\n  onSelect = (id) => {\n    this.props.history.push(\"xray/room/\" + id);\n  };\n\n  render() {\n    return (\n      <div style={{ padding: \"20px\" }}>\n        <LocationSelecter list={this.state.locationList} onSelect={this.onSelect}></LocationSelecter>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SelectRoom);\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { AuthService } from \"../../Shared\";\nimport XrayFrom from \"./components/X-ray/XrayFrom\";\nimport XrayService from \"./share/XrayService\"\nimport { ROLE } from \"../../Constances/const\";\nimport SelectRoom from \"./components/SelectRoom/SelectRoom\"\nimport { LOCATION_TYPE } from \"../../Constances/const\";\nclass Xray extends Component {\n  render() {\n    const { path } = this.props.match;\n    return (\n      <div className=\"Xray\">\n        <Switch>\n          <Route exact path={`${path}/`} render={() => {\n            if (!AuthService.hasRole(ROLE.XRAY) && !AuthService.hasRole(ROLE.ADMIN)) {\n              return (<Redirect to=\"/app/org/notauthorized\" ></Redirect>)\n            }\n            if (!XrayService.location.id || XrayService.location.type !== LOCATION_TYPE.XRAY) {\n              return (<SelectRoom></SelectRoom>)\n            } else {\n              return (<Redirect to={`${path}/room/${XrayService.location.id}`} ></Redirect>)\n            }\n          }} />\n          <Route exact path={`${path}/room/:id`} component={XrayFrom} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Xray;","import React from \"react\";\nimport { Form } from \"../../../../Shared\";\nimport instance from \"../../share/EntService\";\nimport LocationSelecter from \"../../../../Shared/Components/LocationSelecter/LocationSelecter\";\nimport { withRouter } from \"react-router\";\nimport {LOCATION_TYPE} from '../../../../Constances/const'\n\nclass SelectRoom extends Form {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationList: [],\n      selectedLocation: -1,\n    };\n  }\n  componentDidMount = async () => {\n    const listLoc = await instance.getListLocation();\n    const result = listLoc.filter((item) => item.type === LOCATION_TYPE.ENT);\n    \n    this.setState({\n        locationList: result,\n    })\n  };\n\n  onSelect = (id) => {\n    this.props.history.push(\"endoscopic/room/\" + id);\n  };\n\n  render() {\n    return (\n      <div style={{ padding: \"20px\" }}>\n        <LocationSelecter list={this.state.locationList} onSelect={this.onSelect}></LocationSelecter>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SelectRoom);\n","export const resultServiceEnt = [\n    {\n        code: 'tmh',\n        name: \"NỘI SOI TMH\",\n        results: {\n            description: \" - TAI TRÁI : Bình thường. \\n - TAI PHẢI : Bình thường. \\n - MŨI : Bình thường. \\n - HỌNG : Bình thường. \",\n            conclusion: \"Không có biểu hiện bất thường.\"\n        }\n    },\n    {\n        code: \"nieudao\",\n        name: \"SOI TƯƠI DỊCH NIỆU ĐẠO\",\n        results: {\n            description: \"Bình thường.\",\n            conclusion: \"Không có biểu hiện bất thường.\"\n            ,\n        }\n    },\n    {\n        code: \"thucquan\",\n        name: \"NỘI SOI THỰC QUẢN, DẠ DÀY, TÁ TRÀNG\",\n        results: {\n            description: \" - THỰC QUẢN : Bình thường. \\n - DẠ DÀY: Bình thường. \\n - TÂM VĨ : Dãn nở tốt. \\n - TÁ TRÀNG: Bình thường \\n - HÀNH TÁ TRÀNG: Bình thường\",\n            conclusion: \"Không có biểu hiện bất thường.\"\n        }\n    }\n\n]","import React, { Component, Fragment } from \"react\";\nimport { Row, Col, Table, Input } from \"reactstrap\";\nimport { resultServiceEnt } from \"../../share/Util\"\nimport EntService from \"../../share/EntService\";\nclass EntResult extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      conclusion: \"\",\n      description: \"\",\n      nameFromService: \"\",\n      codeFromService: \"\",\n      name_files: {\n        rightear: \"\",\n        leftear: \"\",\n        nose: \"\",\n        throat: \"\",\n      },\n      rightearImg: \"\",\n      leftearImg: \"\",\n      noseImg: \"\",\n      throatImg: \"\",\n      files: \"\",\n      formData: new FormData()\n    };\n  }\n  componentDidUpdate = (preProps) => {\n    let results = this.props.results ? this.props.results[0] : {}\n    let name_files = this.props.name_files ? this.props.name_files : {}\n    let photos = this.props.photos ? this.props.photos : null\n    if (preProps.results !== this.props.results) {\n      this.setState({\n        conclusion: results.conclusion || \"\",\n        description: results.description || \"\",\n        codeFromService: this.props.codeFromService,\n        rightear: name_files.rightear || \"\",\n        leftear: name_files.leftear || \"\",\n        nose: name_files.nose || \"\",\n        throat: name_files.throat || \"\",\n        files: \"\",\n      })\n      let formData = this.state.formData;\n      formData.delete(\"img\");\n      this.setState({\n        formData: formData\n      })\n      let urls = this.props.upload;\n      if (this.props.selectedJobStepRunning !== preProps.selectedJobStepRunning) {\n        if (this.props.upload.length > 0) {\n          let promise = [];\n          let urls = this.props.upload;\n          urls.map(url => {\n            promise.push(EntService.downloadPhoto(url.name))\n          })\n          let metaDataImg = []\n          Promise.all(promise).then(arr => {\n            arr.map(el => {\n              urls.map(e => {\n                if (el.config.url.split(\"download/\")[1] == e.name) {\n                  metaDataImg.push({ url: el.config.url, metaData: e.metadata })\n                }\n              })\n            })\n            let { rightearImg, leftearImg, noseImg, throatImg } = this.state\n            metaDataImg.map(el => {\n              if (el.metaData == \"rightear\") {\n                rightearImg = el.url\n              }\n              if (el.metaData == \"leftear\") {\n                leftearImg = el.url\n              }\n              if (el.metaData == \"nose\") {\n                noseImg = el.url\n              }\n              if (el.metaData == \"throat\") {\n                throatImg = el.url\n              }\n            })\n            this.setState({\n              rightearImg,\n              leftearImg,\n              noseImg,\n              throatImg,\n            })\n          })\n        }\n        else {\n          this.setState({\n            rightearImg: \"\",\n            leftearImg: \"\",\n            noseImg: \"\",\n            throatImg: \"\",\n          })\n\n        }\n      }\n      else {\n        this.setState({\n          rightearImg: \"\",\n          leftearImg: \"\",\n          noseImg: \"\",\n          throatImg: \"\",\n        })\n\n      }\n\n    }\n  }\n  onChangeResult = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  onChangeFile = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      [e.target.name + \"Img\"]: URL.createObjectURL(e.target.files[0]),\n    })\n    this.state.formData.append(\"img\", e.target.name)\n    this.state.formData.append(\"img\", e.target.files[0]);\n  }\n\n  onBlurChangeResult = () => {\n    let entReSult = {\n      conclusion: this.state.conclusion,\n      description: this.state.description\n    };\n    let urlFileImg = {\n      rightearImg: this.state.rightearImg,\n      leftearImg: this.state.leftearImg,\n      noseImg: this.state.noseImg,\n      throatImg: this.state.throatImg,\n    }\n    let files = this.state.formData;\n    this.props.onChangeResult(entReSult, files, urlFileImg)\n  }\n  setOnchangeCode = async (ev) => {\n    await this.setState({\n      codeFromService: ev.target.value,\n    })\n    await this.setResultFrom()\n  }\n  setResultFrom = () => {\n    let { codeFromService } = this.state\n    resultServiceEnt.map(el => {\n      if (el.code == codeFromService) {\n        this.setState({\n          conclusion: el.results.conclusion,\n          description: el.results.description,\n          nameFromService: el.name\n        })\n      }\n    })\n    this.onBlurChangeResult()\n  }\n  render() {\n\n    let { activeTab } = this.props\n    // console.log(activeTab,1);\n    // let  items  = this.props.selectedJobStepRunning ? this.props.selectedJobStepRunning.order.items : [] ;\n    let { conclusion, description, codeFromService, rightear, leftear, nose, throat } = this.state\n    return (\n      <div className=\"EndoscopicResult customCard df-h-61\">\n        {/* {\n          // items.map(el => {\n            // return ( */}\n        <div>\n          {/* {\n                   el.name\n                } */}\n          <div className=\"ml-3 d-flex justify-content-between\">\n            <div>\n              <p className=\"title-card\"><span className=\"material-icons\">create</span>Mô tả chi tiết</p>\n            </div>\n            <div className=\"input-fromService\">\n              <Input\n                type=\"select\"\n                name=\"codeFromService\"\n                value={codeFromService}\n                onChange={ev => this.setOnchangeCode(ev)}\n                required\n                disabled={activeTab == \"2\"}\n              >\n                <option value=\"\">Chọn loại</option>\n                {resultServiceEnt.map(el => {\n                  return (\n                    <option key={el.code} value={el.code}>{el.name}</option>\n                  )\n                })}\n              </Input>\n            </div>\n          </div>\n          <div className=\"text-center\">\n            <textarea\n              className=\"result-Ent-Description \"\n              placeholder=\" Nhập Kết quả nội soi\"\n              name=\"description\"\n              value={description}\n              onChange={e => this.onChangeResult(e)}\n              onBlur={this.onBlurChangeResult}\n            ></textarea>\n          </div>\n          <div className=\"title-card ml-3\">\n            <p><span className=\"material-icons\">create</span>Kết luận</p>\n          </div>\n          <div className=\"text-center\">\n            <textarea\n              className=\"result-Ent\"\n              placeholder=\" Nhập Kết luận nội soi\"\n              name=\"conclusion\"\n              value={conclusion}\n              onChange={e => this.onChangeResult(e)}\n              onBlur={this.onBlurChangeResult}\n            ></textarea>\n          </div>\n          <div className=\"title-card ml-3\">\n            <p><span className=\"material-icons\">create</span>Chọn ảnh</p>\n          </div>\n          <div className=\"d-flex justify-content-between\">\n            <div className=\"inputSelectImg\">\n              <b>Tai phải</b><br></br>\n              <input\n                type=\"file\"\n                name=\"rightear\"\n                value={rightear}\n                accept=\"image/*\"\n                onBlur={this.onBlurChangeResult}\n                onChange={e => this.onChangeFile(e)}\n              // multiple\n              />\n              <div className=\"p-2 text-center\">\n                <img className=\"resultFile\" src={this.state.rightearImg} />\n              </div>\n\n            </div>\n            <div className=\"inputSelectImg\">\n              <b>Tai trái</b><br></br>\n              <input type=\"file\"\n                name=\"leftear\"\n                value={leftear}\n                accept=\"image/*\"\n                onBlur={this.onBlurChangeResult}\n                onChange={e => this.onChangeFile(e)}\n              // multiple\n              />\n              <div className=\"p-2 text-center\">\n                <img className=\"resultFile\" src={this.state.leftearImg} />\n              </div>\n\n            </div>\n            <div className=\"inputSelectImg\">\n              <b>Mũi</b><br></br>\n              <input type=\"file\"\n                name=\"nose\"\n                value={nose}\n                accept=\"image/*\"\n                onBlur={this.onBlurChangeResult}\n                onChange={e => this.onChangeFile(e)}\n              // multiple\n              />\n              <div className=\"p-2 text-center\">\n                <img className=\"resultFile\" src={this.state.noseImg} />\n              </div>\n\n            </div>\n            <div className=\"inputSelectImg\">\n              <b>Họng</b><br></br>\n              <input type=\"file\"\n                name=\"throat\"\n                value={throat}\n                accept=\"image/*\"\n                onBlur={this.onBlurChangeResult}\n                onChange={e => this.onChangeFile(e)}\n              // multiple\n              />\n              <div className=\"p-2 text-center\">\n                <img className=\"resultFile\" src={this.state.throatImg} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EntResult;\n","import React, { Component } from \"react\";\nimport { Row, Col, Button, TabContent, TabPane, Nav, NavItem, NavLink, } from \"reactstrap\";\nimport PatientList from \"../../../../Shared/Components/PatientList/PatientList\";\nimport ModalConfirm from \"../../../../Shared/Components/ModalConfirm/ModalConfirm\";\nimport CustomerForm from \"../../../../Shared/Components/CustomerForm/CustomerForm\";\nimport DoctorServices from \"../../../Doctor/Shared/DoctorService\"\nimport SharedService from \"../../../../Shared/Services/SharedService\";\nimport { STATUS, SERVICE_TYPE } from \"../../../../Constances/const\";\nimport EntService from \"../../share/EntService\";\nimport EntResult from \"../EntResult/EntResultc\";\nimport EntResultPrint from \"../EntResultPrint/EntResultPrint\";\nimport classnames from 'classnames';\n\nclass EntEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entResult: {\n        id: \"\",\n        results: [{\n          conclusion: \"\",\n          description: \"\"\n        }]\n      },\n      jobStepReady: [],\n      jobStepRunning: [],\n      diagnosis: \"\",\n      selectedJobStepRunning: {},\n      selectecPatientReady: {},\n      stepID: \"\",\n      titleWaitForEnt: \"Danh sách bệnh nhân chờ Nội Soi:\",\n      titleWaitForEntDone: \"Danh sách bệnh nhân đã hoàn thành:\",\n      modalConfirm: {\n        message: \"\",\n        saveEntResult: false,\n      },\n      name_files: {\n        rightear: \"\",\n        leftear: \"\",\n        nose: \"\",\n        throat: \"\"\n      },\n      urlFileImg: {\n        rightearImg: \"\",\n        leftearImg: \"\",\n        noseImg: \"\",\n        throatImg: \"\",\n      },\n      photos: new FormData(),\n      printResult: \"none\",\n      activeTab: '1',\n      array_urls: [],\n      // codeFromService : \"1\"\n    };\n  }\n\n  readyJobListAction = {\n    refresh: null,\n  }\n\n  runningJobListAction = {\n    refresh: null,\n  }\n\n  refreshJobList = () => {\n    this.readyJobListAction.refresh();\n    this.runningJobListAction.refresh();\n  }\n\n  onSelectJobRunning = async (p) => {\n    if(p.order && p.order.customer){\n      this.setState((state) => ({\n        ...state,\n        selectecPatientReady: p.order.customer,\n        stepID: p.id,\n      }));\n      await DoctorServices.getJobById({ id: p.job_id }).then(res => {\n        this.setState({\n          diagnosis: res.state.textDiagnosis,\n        })\n      })\n      try {\n        this.setState((state) => ({\n          ...state,\n          selectedJobStepRunning: p,\n          entResult: {\n            id: p.id,\n            results: [{\n              conclusion: \"\",\n              description: \"\"\n            }]\n          },\n          array_urls: [],\n        }));\n      } catch (error) {\n        throw error;\n      }\n    }\n  };\n  onSelectJobDone = async (p) => {\n    if(p.order && p.order.customer){\n      this.setState((state) => ({\n        ...state,\n        selectecPatientReady: p.order.customer,\n        stepID: p.id,\n  \n      }));\n      await DoctorServices.getJobById({ id: p.job_id }).then(res => {\n        this.setState({\n          diagnosis: res.state.textDiagnosis,\n        })\n      })\n      this.setState((state) => ({\n        ...state,\n        selectedJobStepRunning: p,\n        entResult: {\n          id: p.id,\n          results: p.results\n        },\n        array_urls: p.upload,\n      }));\n    }\n    \n  };\n  // Hiện popup xác nhận\n  handleConfirm = (text) => {\n    this.setState((state) => ({\n      ...state,\n      modalConfirm: {\n        ...state.modalConfirm,\n        message: text,\n      },\n    }));\n  };\n\n  handleUpdateResult = async (argument) => {\n    if (argument) {\n      this.setState((state) => ({\n        ...state,\n        modalConfirm: {\n          ...state.modalConfirm,\n          message: \"\",\n        },\n      }));\n      this.state.photos.append(\"ref_id\", this.state.stepID);\n      EntService.uploadPhoto(this.state.photos).then(\n        res => {\n          let array_urls = res.data.map(res => res.name)\n          this.setState({ array_urls: array_urls })\n        }).catch(err => {\n          console.log(err)\n        })\n      await EntService.finishEntResult(this.state.entResult).then((res) => {\n        this.refreshJobList()\n      }).catch(err => {\n        console.log(err)\n      })\n      await this.setState((state) => ({\n        ...state,\n        printResult: \"block\",\n      }));\n      await this.print(\"printEnt\");\n      await this.setState((state) => ({\n        ...state,\n        printResult: \"none\",\n        entResult: {\n          ...state.entResult,\n          id: \"\",\n          results: [{\n            conclusion: \"\",\n            description: \"\"\n          }],\n          name_files: {\n            rightear: \"\",\n            leftear: \"\",\n            nose: \"\",\n            throat: \"\"\n          },\n          array_urls: [],\n          // photos: null\n        },\n        codeFromService: \"1\"\n      }));\n\n    } else {\n      this.setState((state) => ({\n        ...state,\n        modalConfirm: {\n          ...state.modalConfirm,\n          message: \"\",\n        },\n      }));\n    }\n  };\n\n  printBarcode = async () => {\n    await this.setState((state) => ({\n      ...state,\n      printResult: \"block\",\n    }));\n    await this.setState((state) => ({\n      ...state,\n      printResult: \"none\",\n    }));\n  };\n\n  print = (id) => {\n    SharedService.print(id)\n  };\n\n  handleChangeResult = (value, files, urlFile) => {\n    let itemResults = this.state.entResult ? this.state.entResult : [];\n    itemResults.results[0] = value\n    this.setState({\n      photos: files,\n      results: itemResults,\n      urlFileImg: urlFile\n    })\n  };\n  selectTypeCustomer = (tab) => {\n    let { activeTab } = this.state\n    if (activeTab !== tab) this.setState({ activeTab: tab })\n  }\n  render() {\n    const location_id = EntService.location.id;\n    let { activeTab, name_files ,selectedJobStepRunning} = this.state\n    return (\n      <div className=\"EntEdit\">\n        <Row className=\"mb-5 title-card\">\n          <Col xs=\"6\">{EntService.location?.name}</Col>\n          <Col xs=\"6\" className=\"end pointer pr-30\" onClick={() => {\n            EntService.location = {};\n            window.location.replace('/app/endoscopic')\n          }}><u>Chuyển phòng</u></Col>\n        </Row>\n        <Row className=\"content\">\n          <Col sm=\"8\" className=\"content-left\">\n            <Row className=\"info-customer customCard\">\n              <Col>\n                <CustomerForm data={this.state.selectecPatientReady} className=\"CustomerForm\" mode=\"compact\" ></CustomerForm>\n              </Col>\n            </Row>\n            <Row className=\"from-EntResult mt-3\">\n              <EntResult\n                upload={this.state.array_urls}\n                activeTab={activeTab}\n                selectedJobStepRunning={this.state.selectedJobStepRunning}\n                codeFromService={this.state.codeFromService}\n                results={this.state.entResult.results}\n                name_files={name_files}\n                photos={this.state.photos}\n                onChangeResult={this.handleChangeResult} />\n            </Row>\n          </Col>\n          <Col sm=\"4\" className=\"content-right\">\n            <Row className=\"CusList customCard\">\n              <Nav tabs className=\"selectTabs\">\n                <NavItem className=\"titleTabs\">\n                  <NavLink className={classnames({ active: activeTab === '1' })} onClick={() => { this.selectTypeCustomer('1'); }}><b className=\"title-card\">Bệnh nhân chờ </b></NavLink>\n                </NavItem>\n                <NavItem className=\"titleTabs\">\n                  <NavLink className={classnames({ active: activeTab === '2' })} onClick={() => { this.selectTypeCustomer('2'); }}><b className=\"title-card\">Bệnh nhân đã hoàn thành</b></NavLink>\n                </NavItem>\n              </Nav>\n              <TabContent activeTab={activeTab} >\n                <TabPane tabId=\"1\" className=\"customCard\">\n                  <PatientList\n                    titleOfList={this.state.titleWaitForEnt}\n                    onSelectJobStep={(jobStep) => this.onSelectJobRunning(jobStep)}\n                    location_id={location_id}\n                    status={[STATUS.READY]}\n                    action={this.readyJobListAction}\n                    type={SERVICE_TYPE.TEST}\n                    mode=\"other\"\n                  />\n                </TabPane>\n                <TabPane tabId=\"2\" className=\"customCard\">\n                  <PatientList\n                    titleOfList={this.state.titleWaitForEntDone}\n                    onSelectJobStep={(jobStep) => this.onSelectJobDone(jobStep)}\n                    location_id={location_id}\n                    status={[STATUS.DONE]}\n                    action={this.readyJobListAction}\n                    type={SERVICE_TYPE.TEST}\n                    mode=\"other\"\n                  />\n                </TabPane>\n              </TabContent>\n\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"btn-Comfirm end\">\n          <Col sm=\"12\">\n            <Button color=\"primary\"\n            hidden={!selectedJobStepRunning.id}\n            onClick={() => this.handleConfirm(\"Bạn chắc chắn muốn cập nhật kết quả?\")}>\n              Gửi kết quả\n            </Button>\n          </Col>\n        </Row>\n        <EntResultPrint\n          tab={\"1\"}\n          urlFileImg={this.state.urlFileImg}\n          upload={this.state.array_urls}\n          style={this.state.printResult}\n          diagnosis={this.state.diagnosis}\n          selectedJobStepRunning={this.state.selectedJobStepRunning}\n          entResult={this.state.entResult}\n        />\n        <ModalConfirm\n          message={this.state.modalConfirm.message}\n          answer={this.handleUpdateResult}\n        />\n      </div>\n    )\n  }\n}\n\nexport default EntEdit;","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { AuthService } from \"../../Shared\";\nimport EntService from \"./share/EntService\"\nimport { ROLE } from \"../../Constances/const\";\nimport SelectRoom from \"./components/SelectRoom/SelectRoom\";\nimport EntEdit from \"./components/Endoscopic/EntEdit\";\nimport { LOCATION_TYPE } from \"../../Constances/const\";\nclass Endoscopic extends Component {\n  render() {\n    const { path } = this.props.match;\n    return (\n      <div className=\"Endoscopic\">\n        <Switch>\n          <Route exact path={`${path}/`} render={() => {\n            if (!AuthService.hasRole(ROLE.ENT) && !AuthService.hasRole(ROLE.ADMIN)) {\n              return (<Redirect to=\"/app/org/notauthorized\" ></Redirect>)\n            }\n            if (!EntService.location.id || EntService.location.type !== LOCATION_TYPE.ENT) {\n              return (<SelectRoom></SelectRoom>)\n            } else {\n              return (<Redirect to={`${path}/room/${EntService.location.id}`} ></Redirect>)\n            }\n          }} />\n          <Route exact path={`${path}/room/:id`} component={EntEdit} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Endoscopic;","export const resultServiceUltra = [\n    {\n        code: \"obungnam\",\n        name: \"SIÊU ÂM Ổ BỤNG NAM\",\n        results: {\n            description: \" - GAN : Không to, nhu mô đều, không thấy khối bất thường.\\n - TĨNH MẠCH CỬA : Không giãn, không có huyết khối. \\n - ĐƯỜNG MẬT: Trong gan và ngoài gan không giãn, không có sỏi. \\n - TÚI MẬT: Không to, thành túi mật mỏng, dịch mật trong \\n - TỤY: Kích thước không to, nhu mô đều, ống tụy không giãn, không có sỏi, quanh tụy không thấy bất thường.\\n - LÁCH: Kích thước không to, nhu mô đều. \\n - THẬN PHẢI: Kích thước bình thường, nhu mô đều, đài bể thận không giãn, không có sỏi. Niệu quản không giãn, không có sỏi. \\n - THẬN TRÁI: Kích thước bình thường, nhu mô đều, đài bể thận không giãn, không có sỏi. Niệu quản không giãn, không có sỏi. \\n - BÀNG QUANG : Nước tiểu vừa, thành đều, không có sỏi \\n - Tiền liệt tuyến: Kích thước bình thường, nhu mô đều.  \\n  - Nhận xét khác:\",\n            conclusion: \"Hiện tại chưa thấy hình ảnh bất thường trên siêu âm ổ bụng.\"\n        }\n    },\n    {\n        code: \"obungnu\",\n        name: \"SIÊU ÂM Ổ BỤNG NỮ\",\n        results: {\n            description: \" - GAN : Không to, nhu mô đều, không thấy khối bất thường.\\n - TĨNH MẠCH CỬA: Không giãn, không có huyết khối. \\n - ĐƯỜNG MẬT : Trong gan và ngoài gan không giãn, không có sỏi. \\n - TÚI MẬT: Không to, thành túi mật mỏng, dịch mật trong \\n - TỤY: Kích thước không to, nhu mô đều, ống tụy không giãn, không có sỏi, quanh tụy không thấy bất thường.\\n - LÁCH: Kích thước không to, nhu mô đều. \\n - THẬN PHẢI: Kích thước bình thường, nhu mô đều, đài bể thận không giãn, không có sỏi. Niệu quản không giãn, không có sỏi. \\n - THẬN TRÁI: Kích thước bình thường, nhu mô đều, đài bể thận không giãn, không có sỏi. Niệu quản không giãn, không có sỏi. \\n - BÀNG QUANG: Nước tiểu vừa, thành đều, không có sỏi. \\n - TỬ CUNG PHẦN PHỤ : Không to, âm vang đồng nhất. Buồng trứng hai bên không thấy bất thường.  \\n  - Nhận xét khác:\",\n            conclusion: \"Hiện tại chưa thấy hình ảnh bất thường trên siêu âm ổ bụng.\"\n        }\n    },\n    {\n        code: \"tuyengiap\",\n        name: \"SIÊU ÂM TUYẾN GIÁP\",\n        results: {\n            description: \" - VỊ TRÍ : Tuyến giáp nằm đúng vị trí giải phẫu.\\n - THÙY PHẢI : Kích thước bình thường, nhu mô đều, không có khối khu trú. \\n - THÙY TRÁI : Kích thước bình thường, nhu mô đều, không có khối khu trú.\\n - EO TUYẾN : Nhu mô đều, không có khối khu trú. \\n  - Nhận xét khác: \",\n            conclusion: \"Hiện tại chưa thấy hình ảnh bất thường trên siêu âm tuyến giáp.\"\n        }\n    },\n    {\n        code: \"thai\",\n        name: \"SIÊU ÂM THAI\",\n        results: {\n            description: \" - Tử cung: Số lượng 01, to hơn bình thường. \\n - Số lượng thai: \\n - Ngôi: \\n - Đường kính lưỡng đỉnh (BPD):   mm \\n - Chu vi đầu (HC): mm\\n - Chu vi bụng (AC): mm \\n - Chiều dài xương đùi (FL):  ; mm \\n - Tim thai:      Chu kỳ/ phút, nhịp đều.\\n - Rau bám: mặt \\n - Nước ối: Góc ối sâu nhất;  AFI:  \\n - Dây rốn: 2 động mạch 1 tĩnh mạch. \\n - Tuổi thai ước tính:     tuần    ngày. Cân nặng ước tính ~    g. \\n  - Nhận xét khác:\",\n            conclusion: \"Hình ảnh 01 thai tương đương 20 tuần theo siêu âm.\"\n        }\n    }\n\n]","import React, { Component, Fragment } from \"react\";\nimport { Table, Input, Row, Col } from \"reactstrap\";\nimport { resultServiceUltra } from \"../../Shared/Util\";\nimport UltrasoundService from \"../../Shared/UltrasoundService\";\nclass ResultUltrasound extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      conclusion: \"\",\n      description: \"\",\n      file: \"\",\n      fileImg: \"\",\n      nameFromService: \"\",\n      codeFromService: \"\",\n      stt: \"\",\n      formData: new FormData()\n    };\n  }\n  componentDidUpdate = (preProps) => {\n    let results = this.props.results ? this.props.results[0] : {};\n    if (preProps.results !== this.props.results) {\n      this.setState({\n        conclusion: results.conclusion || \"\",\n        description: results.description || \"\",\n        codeFromService: this.props.codeFromService,\n        file: this.props.file\n      })\n      let formData = this.state.formData;\n      formData.delete(\"img\");\n      this.setState({\n        formData: formData\n      })\n      if (this.props.jobStep !== preProps.jobStep) {\n        if (this.props.upload.length > 0) {\n          let promise = [];\n          let urls = this.props.upload;\n          urls.map(url => {\n            promise.push(UltrasoundService.downloadPhoto(url.name))\n          })\n          Promise.all(promise).then(arr => {\n            this.setState({\n              fileImg: arr[0].config.url\n            })\n          })\n        }\n        else {\n          this.setState({\n            fileImg: \"\"\n          })\n\n        }\n      }\n      else {\n        this.setState({\n          fileImg: \"\"\n        })\n\n      }\n    }\n  }\n  onChangeResult = (e, index) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      stt: index\n    })\n  }\n  onChangeResultFile = (e) => {\n    this.setState({\n      [e.target.name + \"Img\"]: URL.createObjectURL(e.target.files[0]),\n    })\n    this.state.formData.append(\"img\", e.target.name);\n    this.state.formData.append(\"img\", e.target.files[0]);\n  }\n  onBlurChangeResult = () => {\n    let ultraReSult = {\n      conclusion: this.state.conclusion,\n      description: this.state.description,\n    };\n    let UltralResultImg = {\n      fileImg: this.state.fileImg,\n    }\n    let files = this.state.formData;\n    this.props.onChangeResult(ultraReSult, files, UltralResultImg)\n  }\n  setOnchangeCode = async (ev) => {\n    await this.setState({\n      codeFromService: ev.target.value,\n    })\n    await this.setResultFrom()\n  }\n  setResultFrom = () => {\n    let { codeFromService } = this.state\n    resultServiceUltra.map(el => {\n      if (el.code == codeFromService) {\n        this.setState({\n          conclusion: el.results.conclusion,\n          description: el.results.description,\n          nameFromService: el.name\n        })\n      }\n    })\n    this.onBlurChangeResult()\n  }\n  render() {\n    let { activeTab, jobStep } = this.props\n    let { conclusion, description, file, codeFromService } = this.state;\n    return (\n      <div className=\"UltralResult customCard df-h-62 max-h-65\">\n        <div className=\"ml-3 d-flex justify-content-between\">\n          <div>\n            <p className=\"title-card\"><span className=\"material-icons\">create</span>Mô tả chi tiết kết quả siêu âm</p>\n          </div>\n          <div className=\"input-fromService\">\n            <Input\n              type=\"select\"\n              name=\"codeFromService\"\n              value={codeFromService}\n              onChange={ev => this.setOnchangeCode(ev)}\n              required\n              disabled={activeTab == \"2\"}\n            >\n              <option value=\"\">Chọn loại</option>\n              {resultServiceUltra.map(el => {\n                return (\n                  <option key={el.code} value={el.code}>{el.name}</option>\n                )\n              })}\n            </Input>\n          </div>\n        </div>\n        <div className=\"text-center\">\n          <textarea\n            className=\"result-Ultra-Description \"\n            placeholder=\" Nhập Kết quả siêu âm\"\n            name=\"description\"\n            value={description}\n            onChange={e => this.onChangeResult(e)}\n            onBlur={this.onBlurChangeResult}\n          ></textarea>\n        </div>\n\n        <div>\n          <div className=\"title-card ml-3\">\n            <p><span className=\"material-icons\">create</span>Kết luận</p>\n          </div>\n          <textarea\n            className=\"result-Ultra\"\n            placeholder=\" Nhập Kết luận siêu âm\"\n            name=\"conclusion\"\n            value={conclusion}\n            onChange={e => this.onChangeResult(e)}\n            onBlur={this.onBlurChangeResult}\n          ></textarea>\n          <b className=\"end title-card\">Ảnh siêu âm</b><br></br>\n          <div className=\"inputSelectImg  text-center\">\n            <input type=\"file\"\n              name=\"file\"\n              value={file}\n              accept=\"image/*\"\n              onBlur={this.onBlurChangeResult}\n              onChange={e => this.onChangeResultFile(e)}\n            // multiple\n            />\n            <div className=\"p-2\">\n              <img className=\"resultFile\" src={this.state.fileImg} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ResultUltrasound;\n","import React from \"react\";\nimport ShareService from \"../../../../Shared/Services/SharedService\";\nexport default class CustomerForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n    render() {\n        let { jobStep } = this.props;\n        let order = jobStep ? jobStep.order : {};\n        let customer = order ? order.customer : {};\n        let date = new Date(order ? order.ctime : 0).toLocaleString('en-GB')\n        return (\n            <div style={{display:\"none\"}}>\n                <div className=\"printBarCode\" id=\"barCodeCus\">\n                    {customer.full_name}<br></br> {customer.birthday}\n                    {/* <br></br> */}\n                    {/* <b>{customer.code} {date} </b> */}\n                    {/* <br></br> */}\n                    {/* <br></br> */}\n                    <div className=\"canvas\" >\n                        <canvas id=\"canvas_id\" style={{height:\"13mm\",width:\"40mm\"}}></canvas>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { Row, Col, Button, TabContent, TabPane, Nav, NavItem, NavLink, } from \"reactstrap\";\nimport PatientList from \"../../../../Shared/Components/PatientList/PatientList\";\nimport ResultUltra from \"../ResultUltrasound/ResultUltrasound\";\nimport PaperResultUltrasound from \"../PaperResultUltrasound/PaperResultUltrasound\";\nimport ModalConfirm from \"../../../../Shared/Components/ModalConfirm/ModalConfirm\";\nimport CustomerForm from \"../../../../Shared/Components/CustomerForm/CustomerForm\";\nimport PrintBarcode from \"../PaperResultUltrasound/CustomerFromPrint\"\nimport DoctorServices from \"../../../Doctor/Shared/DoctorService\"\nimport UltrasoundService from \"../../Shared/UltrasoundService\";\nimport SharedService from \"../../../../Shared/Services/SharedService\";\nimport { STATUS, SERVICE_TYPE } from \"../../../../Constances/const\";\nimport classnames from 'classnames';\n\nclass UltrasoundEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ultraName: \"\",\n      subclinical: \"\",\n      ultraConclusion: \"\",\n      ctime: '',\n      ultraResult: {\n        id: \"\",\n        results: [{\n          conclusion: \"\",\n          description: \"\"\n        }]\n      },\n      jobStepReady: [],\n      jobStepRunning: [],\n      selectedJob: [],\n      selectedJobStepRunning: {},\n      selectecPatientReady: {},\n      stepID: \"\",\n      titleWaitForUltra: \"Danh sách bệnh nhân chờ siêu âm:\",\n      titleWaitForUltraDone: \"Danh sách bệnh nhân đã hoàn thành:\",\n      modalConfirm: {\n        message: \"\",\n        saveUltraResult: false,\n      },\n      urlFileImg: {\n        fileImg: \"\",\n      },\n      photos: new FormData(),\n      array_urls: [],\n      printResult: \"none\",\n      activeTab: '1',\n      diagnosis: \"\",\n      tab:\"1\",\n      file: \"\",\n      // codeFromService: \"1\"\n    };\n  }\n\n  readyJobListAction = {\n    refresh: null,\n  }\n\n  runningJobListAction = {\n    refresh: null,\n  }\n\n  refreshJobList = () => {\n    this.readyJobListAction.refresh();\n    this.runningJobListAction.refresh();\n  }\n\n\n  onSelectJobRunning = async (p) => {\n    if(p.order && p.order.customer){\n      this.setState((state) => ({\n        ...state,\n        selectecPatientReady: p.order.customer,\n        stepID: p.id,\n      }));\n      if (p.code) {\n        // SharedService.createBarcode(p.code);\n      }\n      DoctorServices.getJobById({ id: p.job_id }).then(res => {\n        this.setState({\n          diagnosis: res.state.textDiagnosis\n        })\n      })\n      try {\n        if (p.code) {\n          // SharedService.createBarcode(p.code);\n        }\n        this.setState((state) => ({\n          ...state,\n          selectedJobStepRunning: p,\n          ultraResult: {\n            id: p.id,\n            results: [{\n              conclusion: \"\",\n              description: \"\"\n            }]\n          },\n          array_urls: [],\n          file: ''\n        }));\n      } catch (error) {\n        throw error;\n      }\n    } \n  };\n  onSelectJobDone = async (p) => {\n    if(p.order && p.order.customer){\n      this.setState((state) => ({\n        ...state,\n        selectecPatientReady: p.order.customer,\n        stepID: p.id,\n      }));\n      await DoctorServices.getJobById({ id: p.job_id }).then(res => {\n        this.setState({\n          diagnosis: res.state.textDiagnosis,\n        })\n      })\n  \n      this.setState((state) => ({\n        ...state,\n        selectedJobStepRunning: p,\n        ultraResult: {\n          id: p.id,\n          results: p.results\n        },\n        array_urls: p.upload,\n        \n      }));\n    }\n  };\n\n  // Hiện popup xác nhận\n  handleConfirm = (text) => {\n    this.setState((state) => ({\n      ...state,\n      modalConfirm: {\n        ...state.modalConfirm,\n        message: text,\n      },\n    }));\n  };\n\n\n  handleUpdateResult = async (argument) => {\n    if (argument) {\n      try {\n        this.setState((state) => ({\n          ...state,\n          modalConfirm: {\n            ...state.modalConfirm,\n            message: \"\",\n          },\n        }));\n        this.state.photos.append(\"ref_id\", this.state.stepID);\n        UltrasoundService.uploadPhoto(this.state.photos).then(\n          res => {\n            console.log(\"thành công\");\n          }).catch(err => {\n            console.log(err)\n          })\n        await UltrasoundService.finishUtralResult(this.state.ultraResult).then((res) => {\n          this.refreshJobList()\n        }).catch(err => {\n          console.log(err)\n        })\n        await this.setState((state) => ({\n          ...state,\n          printResult: \"block\",\n        }));\n        await this.print(\"printUltra\");\n        await this.setState((state) => ({\n          ...state,\n          printResult: \"none\",\n          ultraResult: {\n            ...state.ultraResult,\n            id: \"\",\n            results: [{\n              conclusion: \"\",\n              description: \"\"\n            }]\n          },\n          array_urls: [],\n          codeFromService: \"1\",\n          file: ''\n        }));\n      } catch (error) {\n        throw error;\n      }\n    } else {\n      this.setState((state) => ({\n        ...state,\n        modalConfirm: {\n          ...state.modalConfirm,\n          message: \"\",\n        },\n      }));\n    }\n  };\n\n  printBarcode = async () => {\n    await this.setState((state) => ({\n      ...state,\n      printResult: \"block\",\n    }));\n    await SharedService.printBarCode(\"barCodeCus\");\n    await this.setState((state) => ({\n      ...state,\n      printResult: \"none\",\n    }));\n  };\n\n  print = (id) => {\n    SharedService.print(id);\n  };\n\n  handleChangeResult = (value, files,urlFile) => {\n    let itemResults = this.state.ultraResult ? this.state.ultraResult : [];\n    itemResults.results[0] = value\n    this.setState({\n      results: itemResults,\n      photos: files,\n      urlFileImg : urlFile\n    })\n  };\n  selectTypeCustomer = (tab) => {\n    let { activeTab } = this.state\n    if (activeTab !== tab) this.setState({ activeTab: tab })\n  }\n  render() {\n    const location_id = UltrasoundService.location.id;\n    let { activeTab ,selectedJobStepRunning} = this.state\n    return (\n      <div className=\"UltrasoundEdit\">\n        <Row className=\"mb-5 title-card\">\n          <Col xs=\"6\">{UltrasoundService.location?.name}</Col>\n          <Col xs=\"6\" className=\"end pointer pr-30\" onClick={() => {\n            UltrasoundService.location = {};\n            window.location.replace('/app/ultrasound')\n          }}><u>Chuyển phòng</u></Col>\n        </Row>\n        <Row className=\"content\">\n          <Col sm=\"8\" className=\"content-left\">\n            <Row className=\"info-customer customCard\">\n              <CustomerForm data={this.state.selectecPatientReady} mode=\"compact\" ></CustomerForm>\n            </Row>\n            <Row className=\"from-ExamResult mt-3\">\n              <ResultUltra results={this.state.ultraResult.results}\n                jobStep={this.state.selectedJobStepRunning}\n                activeTab={activeTab}\n                codeFromService={this.state.codeFromService}\n                onChangeResult={this.handleChangeResult} \n                upload ={this.state.array_urls}\n                file = {this.state.file}\n                />               \n            </Row>\n          </Col>\n          <Col sm=\"4\" className=\"content-right\">\n            <Row className=\"CusList customCard\">\n              <Nav tabs className=\"selectTabs\">\n                <NavItem className=\"titleTabs\">\n                  <NavLink className={classnames({ active: activeTab === '1' })} onClick={() => { this.selectTypeCustomer('1'); }}><b className=\"title-card\">Bệnh nhân chờ</b></NavLink>\n                </NavItem>\n                <NavItem className=\"titleTabs\">\n                  <NavLink className={classnames({ active: activeTab === '2' })} onClick={() => { this.selectTypeCustomer('2'); }}><b className=\"title-card\">Bệnh nhân đã hoàn thành</b></NavLink>\n                </NavItem>\n              </Nav>\n              <TabContent activeTab={activeTab} >\n                <TabPane tabId=\"1\" className=\"customCard\">\n                  <PatientList\n                    titleOfList={this.state.titleWaitForUltra}\n                    onSelectJobStep={(jobStep) => this.onSelectJobRunning(jobStep)}\n                    location_id={location_id}\n                    status={[STATUS.READY]}\n                    action={this.readyJobListAction}\n                    type={SERVICE_TYPE.TEST}\n                    mode=\"other\"\n                  />\n                </TabPane>\n                <TabPane tabId=\"2\" className=\"customCard\">\n                  <PatientList\n                    titleOfList={this.state.titleWaitForUltraDone}\n                    onSelectJobStep={(jobStep) => this.onSelectJobDone(jobStep)}\n                    location_id={location_id}\n                    status={[STATUS.DONE]}\n                    action={this.readyJobListAction}\n                    type={SERVICE_TYPE.TEST}\n                    mode=\"other\"\n                  />\n                </TabPane>\n              </TabContent>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"btn-Comfirm end\">\n          <Col sm=\"12\">\n            {/* <Button outline color=\"primary\" onClick={() => this.printBarcode()}>\n              In mã vạch\n            </Button>{\" \"} */}\n            <Button color=\"primary\"\n            hidden={!selectedJobStepRunning.id}\n            onClick={() => this.handleConfirm(\"Bạn chắc chắn muốn cập nhật kết quả?\")}>\n              Gửi kết quả\n            </Button>\n          </Col>\n        </Row>\n        <PaperResultUltrasound\n          upload={this.state.array_urls}\n          tab={this.state.tab}\n          urlFileImg={this.state.urlFileImg}\n          ultraName={this.state.ultraName}\n          style={this.state.printResult}\n          selectedJobStepRunning={this.state.selectedJobStepRunning}\n          ultraResult={this.state.ultraResult}\n          ctime={this.state.ctime}\n          diagnosis={this.state.diagnosis}\n        />\n        <PrintBarcode\n          jobStep={this.state.selectedJobStepRunning}\n        ></PrintBarcode>\n        <ModalConfirm\n          message={this.state.modalConfirm.message}\n          answer={this.handleUpdateResult}\n        />\n      </div>\n    )\n  }\n}\n\nexport default UltrasoundEdit;","import React from \"react\";\nimport { Form } from \"../../../../Shared\";\nimport instance from \"../../Shared/UltrasoundService\";\nimport LocationSelecter from \"../../../../Shared/Components/LocationSelecter/LocationSelecter\";\nimport { withRouter } from \"react-router\";\nimport {LOCATION_TYPE} from '../../../../Constances/const'\n\nclass SelectRoom extends Form {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationList: [],\n      selectedLocation: -1,\n    };\n  }\n  componentDidMount = async () => {\n    const listLoc = await instance.getListLocation();\n    const result = listLoc.filter((item) => item.type === LOCATION_TYPE.ULTRASOUND);\n    \n    this.setState({\n        locationList: result,\n    })\n    // this.setState({\n    //   locationList: listLoc,\n    // });\n  };\n\n  onSelect = (id) => {\n    this.props.history.push(\"ultrasound/room/\" + id);\n  };\n\n  render() {\n    return (\n      <div style={{ padding: \"20px\" }}>\n        <LocationSelecter list={this.state.locationList} onSelect={this.onSelect}></LocationSelecter>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SelectRoom);\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { AuthService } from \"../../Shared\";\nimport { ROLE } from \"../../Constances/const\";\nimport UltrasoundService from \"./Shared/UltrasoundService\";\nimport UltrasoundEdit from \"./Components/Ultrasound/UltrasoundEdit\";\nimport SelectRoom from \"./Components/SelectRoom/SelectRoom\";\nimport { LOCATION_TYPE } from \"../../Constances/const\";\nclass Ultrasonic  extends Component {\n  render() {\n    const { path } = this.props.match;\n    return (\n      <div className=\"Ultrasonic\">\n        <Switch>\n          <Route exact path={`${path}/`} render={() => {\n            if (!AuthService.hasRole(ROLE.ULTRASOUND) && !AuthService.hasRole(ROLE.ADMIN)) {\n              return (<Redirect to=\"/app/org/notauthorized\" ></Redirect>)\n            }\n            if (!UltrasoundService.location.id || UltrasoundService.location.type !== LOCATION_TYPE.ULTRASOUND) {\n              return (<SelectRoom></SelectRoom>)\n            } else {\n              return (<Redirect to={`${path}/room/${UltrasoundService.location.id}`} ></Redirect>)\n            }\n          }} />\n          <Route exact path={`${path}/room/:id`} component={UltrasoundEdit} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Ultrasonic ;\n","import React from \"react\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport AppHeader from \"../AppHeader/AppHeader\";\nimport { AuthService } from \"../../\";\nimport { ROLE } from \"../../../Constances/const\";\n\nimport Exam from '../../../Modules/Exam/Exam';\nimport Customer from '../../../Modules/Customer/Components/Customer/Customer';\nimport Location from '../../../Modules/Location/Location';\nimport Org from '../../../Modules/Org/Org';\nimport Service from '../../../Modules/Service/Service';\nimport User from '../../../../src/Modules/Org/Components/User/User';\nimport Product from '../../../Modules/Product/Product';\nimport Reception from '../../../Modules/Reception/Reception'\nimport Doctor from '../../../Modules/Doctor/Doctor';\nimport Inventory from '../../../Modules/Inventory/Inventory';\nimport Pharmacy from '../../../Modules/Pharmacy/Pharmacy';\nimport NotAuthorized from '../../../Modules/Org/Components/NotAuthorized/NotAuthorized';\nimport Transaction from '../../../Modules/Accounting/Transaction';\nimport Xray from \"../../../Modules/X-ray/Xray\";\nimport Endoscopic from \"../../../Modules/Endoscopic/Endoscopic\";\nimport Ultrasound from \"../../../Modules/Ultrasound/Ultrasound\";\n// import Table from '../../../../../frontend/src/Shared/Components/Table/Table'\n\nclass App extends React.Component {\n    render() {\n        const { path } = this.props.match;\n        return (\n            <div className=\"App\">\n                <AppHeader></AppHeader>\n                <Switch>\n                    <Route exact path={`${path}`} render={() => {\n                        if (AuthService.hasRole(ROLE.RECEPTIONIST) || AuthService.hasRole(ROLE.ADMIN)) {\n                            return (<Redirect to=\"/app/reception\" ></Redirect>)\n                        }else if  (AuthService.hasRole(ROLE.RECEPTIONIST) || AuthService.hasRole(ROLE.ADMIN)) {\n                            return (<Redirect to=\"/app/transaction/order\" ></Redirect>)\n                        } else if (AuthService.hasRole(ROLE.DOCTOR) || AuthService.hasRole(ROLE.ADMIN)) {\n                            return (<Redirect to=\"/app/doctor\" ></Redirect>)\n                        } else if (AuthService.hasRole(ROLE.TEST_OPERATOR) || AuthService.hasRole(ROLE.ADMIN)) {\n                            return (<Redirect to=\"/app/exam\" ></Redirect>)\n                        } else if (AuthService.hasRole(ROLE.ACCOUNTER) || AuthService.hasRole(ROLE.ADMIN)) {\n                            return (<Redirect to=\"/app/reception\" ></Redirect>)\n                        } else if (AuthService.hasRole(ROLE.PHARMACIST) || AuthService.hasRole(ROLE.ADMIN)) {\n                            return (<Redirect to=\"/app/pharmacy\" ></Redirect>)\n                        } else {\n                            return (<Redirect to=\"/app/org/notauthorized\" ></Redirect>)\n                        }\n                    }}></Route>\n                    <Route path={`${path}/order`} component={Transaction} />\n                    <Route path={`${path}/reception`} component={Reception} />\n                    <Route path={`${path}/transaction`} component={Transaction} />\n                    <Route path={`${path}/doctor`} component={Doctor} />\n                    <Route path={`${path}/exam`} component={Exam} />\n                    <Route path={`${path}/pharmacy`} component={Pharmacy} />\n                    <Route path={`${path}/customer`} component={Customer} />\n                    <Route path={`${path}/location`} component={Location} />\n                    <Route path={`${path}/service`} component={Service} />\n                    <Route path={`${path}/product`} component={Product} />\n                    <Route path={`${path}/inventory`} component={Inventory} />\n                    <Route path={`${path}/org`} component={Org} />\n                    <Route path={`${path}/user`} component={User} />\n                    <Route path={`${path}/xray`} component={Xray} />\n                    <Route path={`${path}/endoscopic`} component={Endoscopic} />\n                    <Route path={`${path}/ultrasound`} component={Ultrasound} />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(App);\n","import React, { Fragment } from 'react';\nimport { withRouter } from 'react-router';\nimport { Col, Row, Input, Button } from 'reactstrap';\nimport { LOCALSTORAGE } from '../../../../Constances/const';\nimport { AuthService, Form, ModalNoti, ROLE, ShareService, LOCATION_TYPE } from '../../Shared';\nclass Login extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            locationList: [],\n            notiMessage: '',\n            form: this._getInitFormData({ username: '', password: '' }),\n        }\n    }\n    login() {\n        const { username, password } = this.state.form;\n        AuthService.login(username.value, password.value).then(res => {\n            window.sessionStorage.setItem(LOCALSTORAGE.TOKEN, res.id);\n            AuthService.getUserInfo().then(_res => {\n                let user = _res.user;\n                window.sessionStorage.setItem(LOCALSTORAGE.USER, JSON.stringify(user));\n                AuthService.userInfo = user;\n               if (user.roles.includes(ROLE.ADMIN.value)) {\n                    this.goTo('app/doctor');\n                } else if (user.roles.includes(ROLE.RECEPTIONIST.value)) {\n                    this.goTo('app/reception');\n                } else if (user.roles.includes(ROLE.ACCOUNTER.value)) {\n                    this.goTo('app/transaction/order');\n                } else if (user.roles.includes(ROLE.DOCTOR.value)) {\n                    this.goTo('app/doctor');\n                } else if (user.roles.includes(ROLE.TEST_OPERATOR.value)) {\n                    this.goTo('app/exam');\n                } else if (user.roles.includes(ROLE.PHARMACIST.value)) {\n                    let arrPharmacy = this.state.locationList.filter(l => l.type === LOCATION_TYPE.PHARMACY)\n                    window.sessionStorage.setItem(LOCALSTORAGE.LOCATION, JSON.stringify(arrPharmacy[0]));\n                    this.goTo('app/pharmacy')\n                } else if (user.roles.includes(ROLE.INVENTORY.value)) {\n                    this.goTo('app/product')\n                } else if (user.roles.includes(ROLE.ULTRASOUND.value)) {\n                    this.goTo(\"app/ultrasound\")\n                } else if (user.roles.includes(ROLE.XRAY.value)) {\n                    this.goTo(\"app/xray\")\n                } else if (user.roles.includes(ROLE.ENT.value)) {\n                    this.goTo(\"app/endoscopic\")\n                } else {\n                    this.goTo('app/reception');\n                } \n            }).catch(err => {\n                console.log('Err', err);\n                this.setState({\n                    notiMessage: \"Có lỗi xảy ra trong lúc lấy thông tin người dùng, xin thử lại sau!\"\n                })\n            })\n        }).catch(err => {\n            console.log('Err', err);\n            this.setState({\n                notiMessage: \"Có lỗi xảy ra trong lúc đăng nhập, xin thử lại sau!\"\n            })\n        })\n    }\n\n    goTo(url = '') {\n        url = window.location.origin + '/' + url\n        window.location.replace(url)\n    }\n\n    render() {\n        const { username, password } = this.state;\n        return (\n            <Fragment>\n                <div className=\"loginCard\">\n                    <h2>Đăng Nhập</h2>\n                    <Row>\n                        <Col xs=\"4\">Tên Đăng Nhập: </Col>\n                        <Col>\n                            <Input \n                                type=\"text\" \n                                placeholder=\"User Name\" \n                                value={username} \n                                name=\"username\" \n                                autoComplete=\"off\"\n                                onChange={(ev) => this._setValue(ev, 'username')}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs=\"4\">Mật Khẩu: </Col>\n                        <Col>\n                            <Input \n                                type=\"text\" \n                                placeholder=\"Password\" \n                                value={password} \n                                name=\"password\" \n                                autoComplete=\"off\"\n                                className=\"password\"\n                                onChange={(ev) => this._setValue(ev, 'password')}\n                                onKeyPress={event => {\n                                if (event.key === 'Enter') {\n                                  this.login()\n                                }\n                            }}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className=\"end\">\n                            <Button outline color=\"primary\" title=\"Login\" onClick={() => this.login()}>Đăng Nhập</Button>\n                        </Col>\n                    </Row>\n                    <ModalNoti message={this.state.notiMessage} done={() => this.setState({ notiMessage: '' })}></ModalNoti>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default withRouter(Login);","import React, { Suspense, Fragment } from \"react\";\nimport { Route, Redirect, Switch, BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport { AuthService } from \"./Shared\";\nimport App from \"./Shared/Components/App/App\";\nimport Login from \"./Modules/Org/Components/Login/Login\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Styles/index.scss\";\n\nconst isLogged = !!AuthService.userInfo;\n\nconst Root = (\n  <BrowserRouter>\n    <Fragment>\n      <Switch>\n        <Suspense>\n          <Route exact path=\"/\" render={() => {\n            return (!isLogged) ? (\n              <Redirect to=\"/login\" ></Redirect>\n            ) : (\n              <Redirect to=\"/app\" ></Redirect>\n            )\n          }} ></Route>\n          <Route path=\"/login\" render={() => {\n            return (!isLogged) ? (\n              <Login></Login>\n            ) : (\n              <Redirect to=\"/app\" ></Redirect>\n            )\n          }} ></Route>\n          <Route path=\"/app\" render={() => {\n            return (isLogged) ? (\n              <App></App>\n            ) : (\n              <Redirect to=\"/login\" ></Redirect>\n            )\n          }} ></Route>\n        </Suspense>\n      </Switch>\n    </Fragment>\n  </BrowserRouter>\n);\n\nReactDOM.render(Root, document.getElementById(\"root\"));\n\nexport default Root;\n"],"sourceRoot":""}